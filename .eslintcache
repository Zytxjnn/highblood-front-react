[{"D:\\newCode\\react\\highblood-front\\src\\index.js":"1","D:\\newCode\\react\\highblood-front\\src\\App.js":"2","D:\\newCode\\react\\highblood-front\\src\\network\\request.js":"3","D:\\newCode\\react\\highblood-front\\src\\router\\index.js":"4","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\index.js":"5","D:\\newCode\\react\\highblood-front\\src\\store\\index.js":"6","D:\\newCode\\react\\highblood-front\\src\\store\\reducer.js":"7","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\index.js":"8","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\style.js":"9","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\index.js":"10","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\style.js":"11","D:\\newCode\\react\\highblood-front\\src\\network\\dataOverview.js":"12","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\actionCreator.js":"13","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\constants.js":"14","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\index.js":"15","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\reducer.js":"16","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\style.js":"17","D:\\newCode\\react\\highblood-front\\src\\common\\data-local.js":"18","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\style.js":"19","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\chunk.js":"20","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\histogram.js":"21","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\style.js":"22","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\index.js":"23","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\index.js":"24","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\style.js":"25","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\rank.js":"26","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\style.js":"27","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\style.js":"28","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\index.js":"29","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\style.js":"30","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\index.js":"31","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\style.js":"32","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\bing.js":"33","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\style.js":"34","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\index.js":"35","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\nextBtn.js":"36","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\style.js":"37","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\style.js":"38","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\actionCreator.js":"39","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\index.js":"40","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\index.js":"41","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\index.js":"42","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\constants.js":"43","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\style.js":"44","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\style.js":"45","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\style.js":"46","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\rank.js":"47","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\chunk.js":"48","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\style.js":"49","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\style.js":"50","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\preBtn.js":"51","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\nextBtn.js":"52","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\style.js":"53","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\style.js":"54","D:\\newCode\\react\\highblood-front\\src\\network\\dataReporting.js":"55","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\index.js":"56","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\reducer.js":"57","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\logs.js":"58","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\style.js":"59","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\state.js":"60","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\style.js":"61","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\index.js":"62","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\style.js":"63","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\index.js":"64","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\style.js":"65","D:\\newCode\\react\\highblood-front\\src\\network\\dataCharts.js":"66","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\preBtn.js":"67","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\style.js":"68","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\index.js":"69","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\style.js":"70","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\index.js":"71","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\reducer.js":"72","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\constants.js":"73","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\index.js":"74","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\style.js":"75","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\index.js":"76","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\style.js":"77","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\index.js":"78","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\style.js":"79","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\actionCreator.js":"80","D:\\newCode\\react\\highblood-front\\src\\network\\controlIndex.js":"81","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\index.js":"82","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\style.js":"83","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\index.js":"84","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\style.js":"85","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\index.js":"86","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\style.js":"87","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\index.js":"88","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\style.js":"89","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\index.js":"90","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\style.js":"91","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\index.js":"92","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\style.js":"93","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\index.js":"94","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\index.js":"95","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\style.js":"96","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\style.js":"97","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\index.js":"98","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\style.js":"99","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\index.js":"100","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\style.js":"101","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\index.js":"102","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\style.js":"103","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\index.js":"104","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\style.js":"105","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\index.js":"106","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\style.js":"107","D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\index.js":"108","D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\style.js":"109","D:\\newCode\\react\\highblood-front\\src\\components\\loading\\index.js":"110","D:\\newCode\\react\\highblood-front\\src\\components\\loading\\style.js":"111","D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\index.js":"112","D:\\newCode\\react\\highblood-front\\src\\components\\reportHeader\\index.js":"113","D:\\newCode\\react\\highblood-front\\src\\components\\reportHeader\\style.js":"114","D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\style.js":"115","D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\c-pages\\right\\index.js":"116","D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\c-pages\\right\\style.js":"117","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\back\\index.js":"118","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\back\\style.js":"119","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\c-coms\\date\\index.js":"120","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\c-coms\\date\\style.js":"121","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\index.js":"122","D:\\newCode\\react\\highblood-front\\src\\common\\authentication\\index.js":"123","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginHeader\\loginHeader.js":"124","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginHeader\\style.js":"125","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginBody\\body.js":"126","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginBody\\style.js":"127","D:\\newCode\\react\\highblood-front\\src\\network\\login.js":"128","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\index.js":"129","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\reducer.js":"130","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\constants.js":"131","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\actionCreaetor.js":"132"},{"size":182,"mtime":1615974841635,"results":"133","hashOfConfig":"134"},{"size":532,"mtime":1611281908036,"results":"135","hashOfConfig":"134"},{"size":1550,"mtime":1616067297147,"results":"136","hashOfConfig":"134"},{"size":976,"mtime":1614674973936,"results":"137","hashOfConfig":"134"},{"size":982,"mtime":1615271219584,"results":"138","hashOfConfig":"134"},{"size":322,"mtime":1610171200321,"results":"139","hashOfConfig":"134"},{"size":547,"mtime":1615257165322,"results":"140","hashOfConfig":"134"},{"size":851,"mtime":1614066076267,"results":"141","hashOfConfig":"134"},{"size":481,"mtime":1615978460206,"results":"142","hashOfConfig":"134"},{"size":8406,"mtime":1616139622745,"results":"143","hashOfConfig":"134"},{"size":1128,"mtime":1614057788257,"results":"144","hashOfConfig":"134"},{"size":458,"mtime":1610448760928,"results":"145","hashOfConfig":"134"},{"size":2137,"mtime":1616135914474,"results":"146","hashOfConfig":"134"},{"size":381,"mtime":1616135608211,"results":"147","hashOfConfig":"134"},{"size":58,"mtime":1610282401054,"results":"148","hashOfConfig":"134"},{"size":998,"mtime":1616135663381,"results":"149","hashOfConfig":"134"},{"size":245,"mtime":1610603487176,"results":"150","hashOfConfig":"134"},{"size":9925,"mtime":1611307354008,"results":"151","hashOfConfig":"134"},{"size":983,"mtime":1611309851654,"results":"152","hashOfConfig":"134"},{"size":867,"mtime":1611310115663,"results":"153","hashOfConfig":"134"},{"size":5114,"mtime":1615949372310,"results":"154","hashOfConfig":"134"},{"size":793,"mtime":1611311646439,"results":"155","hashOfConfig":"134"},{"size":680,"mtime":1616133211338,"results":"156","hashOfConfig":"134"},{"size":1517,"mtime":1615982182518,"results":"157","hashOfConfig":"134"},{"size":2272,"mtime":1615989044735,"results":"158","hashOfConfig":"134"},{"size":2275,"mtime":1616135998453,"results":"159","hashOfConfig":"134"},{"size":3127,"mtime":1611311125112,"results":"160","hashOfConfig":"134"},{"size":188,"mtime":1610606685766,"results":"161","hashOfConfig":"134"},{"size":626,"mtime":1616133246232,"results":"162","hashOfConfig":"134"},{"size":208,"mtime":1610618745989,"results":"163","hashOfConfig":"134"},{"size":1461,"mtime":1611310332286,"results":"164","hashOfConfig":"134"},{"size":2178,"mtime":1615989054130,"results":"165","hashOfConfig":"134"},{"size":2189,"mtime":1611313549368,"results":"166","hashOfConfig":"134"},{"size":1354,"mtime":1611310552938,"results":"167","hashOfConfig":"134"},{"size":924,"mtime":1616066853693,"results":"168","hashOfConfig":"134"},{"size":324,"mtime":1614684957335,"results":"169","hashOfConfig":"134"},{"size":460,"mtime":1610870978468,"results":"170","hashOfConfig":"134"},{"size":245,"mtime":1610603487176,"results":"171","hashOfConfig":"134"},{"size":4008,"mtime":1615448449642,"results":"172","hashOfConfig":"134"},{"size":536,"mtime":1610767060175,"results":"173","hashOfConfig":"134"},{"size":8346,"mtime":1616134829539,"results":"174","hashOfConfig":"134"},{"size":244,"mtime":1610785280424,"results":"175","hashOfConfig":"134"},{"size":634,"mtime":1611302559689,"results":"176","hashOfConfig":"134"},{"size":1495,"mtime":1614061559726,"results":"177","hashOfConfig":"134"},{"size":188,"mtime":1610606685765,"results":"178","hashOfConfig":"134"},{"size":208,"mtime":1610618745988,"results":"179","hashOfConfig":"134"},{"size":3854,"mtime":1610792169338,"results":"180","hashOfConfig":"134"},{"size":817,"mtime":1614057494296,"results":"181","hashOfConfig":"134"},{"size":2607,"mtime":1615990158782,"results":"182","hashOfConfig":"134"},{"size":986,"mtime":1610795376591,"results":"183","hashOfConfig":"134"},{"size":496,"mtime":1610690337655,"results":"184","hashOfConfig":"134"},{"size":497,"mtime":1610863911480,"results":"185","hashOfConfig":"134"},{"size":460,"mtime":1610765893749,"results":"186","hashOfConfig":"134"},{"size":460,"mtime":1611191130273,"results":"187","hashOfConfig":"134"},{"size":1897,"mtime":1615358517492,"results":"188","hashOfConfig":"134"},{"size":58,"mtime":1610282401053,"results":"189","hashOfConfig":"134"},{"size":1357,"mtime":1611302590572,"results":"190","hashOfConfig":"134"},{"size":1570,"mtime":1615963089194,"results":"191","hashOfConfig":"134"},{"size":1597,"mtime":1616141581749,"results":"192","hashOfConfig":"134"},{"size":2536,"mtime":1615967234443,"results":"193","hashOfConfig":"134"},{"size":1266,"mtime":1611191255090,"results":"194","hashOfConfig":"134"},{"size":3324,"mtime":1610867715381,"results":"195","hashOfConfig":"134"},{"size":2435,"mtime":1615990124850,"results":"196","hashOfConfig":"134"},{"size":7323,"mtime":1616146931512,"results":"197","hashOfConfig":"134"},{"size":980,"mtime":1615978362715,"results":"198","hashOfConfig":"134"},{"size":653,"mtime":1610955212947,"results":"199","hashOfConfig":"134"},{"size":322,"mtime":1610864136992,"results":"200","hashOfConfig":"134"},{"size":460,"mtime":1611191091910,"results":"201","hashOfConfig":"134"},{"size":1391,"mtime":1615962533037,"results":"202","hashOfConfig":"134"},{"size":255,"mtime":1611888204317,"results":"203","hashOfConfig":"134"},{"size":83,"mtime":1610935580734,"results":"204","hashOfConfig":"134"},{"size":1918,"mtime":1611054529295,"results":"205","hashOfConfig":"134"},{"size":896,"mtime":1611054529294,"results":"206","hashOfConfig":"134"},{"size":1609,"mtime":1614049216100,"results":"207","hashOfConfig":"134"},{"size":509,"mtime":1611134541327,"results":"208","hashOfConfig":"134"},{"size":1012,"mtime":1610956729552,"results":"209","hashOfConfig":"134"},{"size":552,"mtime":1610957176353,"results":"210","hashOfConfig":"134"},{"size":2202,"mtime":1610968964846,"results":"211","hashOfConfig":"134"},{"size":931,"mtime":1610967885450,"results":"212","hashOfConfig":"134"},{"size":4726,"mtime":1611054607107,"results":"213","hashOfConfig":"134"},{"size":7489,"mtime":1616202331820,"results":"214","hashOfConfig":"134"},{"size":3181,"mtime":1616203719696,"results":"215","hashOfConfig":"134"},{"size":1848,"mtime":1610957278847,"results":"216","hashOfConfig":"134"},{"size":7017,"mtime":1616201954545,"results":"217","hashOfConfig":"134"},{"size":1033,"mtime":1614048542597,"results":"218","hashOfConfig":"134"},{"size":852,"mtime":1616202734934,"results":"219","hashOfConfig":"134"},{"size":83,"mtime":1611133746250,"results":"220","hashOfConfig":"134"},{"size":1921,"mtime":1616202688682,"results":"221","hashOfConfig":"134"},{"size":1376,"mtime":1611888120751,"results":"222","hashOfConfig":"134"},{"size":8918,"mtime":1616202345207,"results":"223","hashOfConfig":"134"},{"size":1287,"mtime":1611888337894,"results":"224","hashOfConfig":"134"},{"size":4797,"mtime":1611124391670,"results":"225","hashOfConfig":"134"},{"size":1373,"mtime":1611043203838,"results":"226","hashOfConfig":"134"},{"size":461,"mtime":1611129734364,"results":"227","hashOfConfig":"134"},{"size":1280,"mtime":1616202511067,"results":"228","hashOfConfig":"134"},{"size":174,"mtime":1611134118293,"results":"229","hashOfConfig":"134"},{"size":181,"mtime":1611129058127,"results":"230","hashOfConfig":"134"},{"size":2152,"mtime":1611220751348,"results":"231","hashOfConfig":"134"},{"size":537,"mtime":1615971433403,"results":"232","hashOfConfig":"134"},{"size":2595,"mtime":1614048944668,"results":"233","hashOfConfig":"134"},{"size":1240,"mtime":1611221499895,"results":"234","hashOfConfig":"134"},{"size":2554,"mtime":1611129293247,"results":"235","hashOfConfig":"134"},{"size":343,"mtime":1611133529687,"results":"236","hashOfConfig":"134"},{"size":2753,"mtime":1611133114303,"results":"237","hashOfConfig":"134"},{"size":1725,"mtime":1615965268849,"results":"238","hashOfConfig":"134"},{"size":2220,"mtime":1611141500631,"results":"239","hashOfConfig":"134"},{"size":1949,"mtime":1611141526125,"results":"240","hashOfConfig":"134"},{"size":2608,"mtime":1616035153387,"results":"241","hashOfConfig":"134"},{"size":1039,"mtime":1611144394509,"results":"242","hashOfConfig":"134"},{"size":373,"mtime":1611282872298,"results":"243","hashOfConfig":"134"},{"size":223,"mtime":1611282455507,"results":"244","hashOfConfig":"134"},{"size":516,"mtime":1611824139380,"results":"245","hashOfConfig":"134"},{"size":528,"mtime":1611803696424,"results":"246","hashOfConfig":"134"},{"size":180,"mtime":1611804019755,"results":"247","hashOfConfig":"134"},{"size":255,"mtime":1611824818391,"results":"248","hashOfConfig":"134"},{"size":2854,"mtime":1611827810848,"results":"249","hashOfConfig":"134"},{"size":236,"mtime":1611824754636,"results":"250","hashOfConfig":"134"},{"size":997,"mtime":1615971269013,"results":"251","hashOfConfig":"134"},{"size":471,"mtime":1614065592272,"results":"252","hashOfConfig":"134"},{"size":4268,"mtime":1614068246276,"results":"253","hashOfConfig":"134"},{"size":299,"mtime":1615978487998,"results":"254","hashOfConfig":"134"},{"size":1073,"mtime":1616067086858,"results":"255","hashOfConfig":"134"},{"size":2053,"mtime":1616201927834,"results":"256","hashOfConfig":"134"},{"size":531,"mtime":1614755335523,"results":"257","hashOfConfig":"134"},{"size":376,"mtime":1614755285371,"results":"258","hashOfConfig":"134"},{"size":3610,"mtime":1616053996048,"results":"259","hashOfConfig":"134"},{"size":926,"mtime":1615640428740,"results":"260","hashOfConfig":"134"},{"size":581,"mtime":1615193864504,"results":"261","hashOfConfig":"134"},{"size":60,"mtime":1615257131817,"results":"262","hashOfConfig":"134"},{"size":844,"mtime":1616066853694,"results":"263","hashOfConfig":"134"},{"size":198,"mtime":1616035628754,"results":"264","hashOfConfig":"134"},{"size":1559,"mtime":1616036714897,"results":"265","hashOfConfig":"134"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},"cjbyr8",{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"268"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"268"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"268"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"268"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"268"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"268"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"268"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"268"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"268"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"268"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"268"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"268"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"268"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"268"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"268"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"268"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"268"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"268"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"268"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"268"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"268"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"451","usedDeprecatedRules":"268"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"268"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"268"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"268"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"268"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"268"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"268"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"268"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"268"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"268"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"268"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"268"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"268"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"268"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"268"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"268"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"268"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},"D:\\newCode\\react\\highblood-front\\src\\index.js",[],["570","571"],"D:\\newCode\\react\\highblood-front\\src\\App.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\request.js",["572","573","574","575"],"import Axios from 'axios';\r\n\r\nimport {\r\n  getTokenAction,\r\n  getUserAction\r\n} from \"@/pages/login/store/actionCreaetor\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst dataOverview = Axios.create({  // 数据概览第一页\r\n  baseURL:'https://www.chinahc.org.cn/apidata'\r\n})\r\nconst dataReporting = Axios.create({  // 数据概览第二页\r\n  baseURL:'https://newhyper.chinahc.org.cn/api/v1/qc'\r\n})\r\nconst dataCharts = Axios.create({  // 数据概览第三页\r\n  baseURL:'http://hbqc.ccpmc.org/QualityControlIndex',\r\n  // headers:{\r\n  //   'Auth-Token':token\r\n  // }\r\n})\r\nconst controlIndex = Axios.create({  // 质控指标\r\n  baseURL:'http://hbqc.ccpmc.org',\r\n  // headers:{\r\n  //   'Auth-Token':token\r\n  // }\r\n})\r\n\r\ndataCharts.interceptors.request.use(request => {\r\n  const token = localStorage.getItem('token');\r\n  if(token){\r\n    request.headers['Auth-token'] = `${token}`;\r\n  }\r\n  return request;\r\n})\r\ncontrolIndex.interceptors.request.use(request => {\r\n  const token = localStorage.getItem('token');\r\n  if(token){\r\n    request.headers['Auth-token'] = `${token}`;\r\n  }\r\n  return request;\r\n})\r\ndataCharts.interceptors.response.use(function (response) {\r\n  const code = response.data.code;\r\n  if(code === 401){\r\n    console.log('token鉴权失败，跳转登录页');\r\n  }\r\n\r\n  return response;\r\n\r\n},);\r\n\r\n\r\n\r\n\r\nconst login = Axios.create({  // 登录\r\n  baseURL:'http://hbqc.ccpmc.org/Login',\r\n})\r\n\r\n\r\n\r\nexport {\r\n  dataOverview,\r\n  dataReporting,\r\n  dataCharts,\r\n  controlIndex,\r\n  login\r\n}\r\n","D:\\newCode\\react\\highblood-front\\src\\router\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\index.js",["576","577","578","579"],"import React,{memo,useEffect,} from \"react\";\r\nimport {useDispatch,} from 'react-redux';\r\n\r\nimport {jsPDF} from 'jspdf';\r\nimport html2canvas from  'html2canvas';\r\nimport {Row,Col} from 'antd'\r\n\r\nimport DataHeader from '@/components/dataHeader';\r\nimport DataViewCenter from './c-pages/center';\r\nimport DataViewLeft from './c-pages/left';\r\nimport DataViewRight from './c-pages/right';\r\nimport NextBtn from './c-coms/nextBtn/nextBtn';\r\nimport SideBar from '@/components/sideBar';\r\nimport Auth from '@/common/authentication'\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\n\r\nexport default memo(function DataOverview(props){\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Auth/>\r\n      <DataHeader />\r\n      <Row>\r\n        <Col span={6}>\r\n          <DataViewLeft/>\r\n        </Col>\r\n        <Col span={12}>\r\n          <DataViewCenter />\r\n        </Col>\r\n        <Col span={6}>\r\n          <DataViewRight/>\r\n        </Col>\r\n      </Row>\r\n      <NextBtn/>\r\n      <SideBar/>\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\index.js",["580","581","582","583","584","585"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport china from '@/assets/json/china.json';\r\nimport icon1 from '@/assets/imgs/dataOverview/1.png';\r\nimport icon2 from '@/assets/imgs/dataOverview/2.png';\r\nimport icon3 from '@/assets/imgs/dataOverview/3.png';\r\nimport {cityMap} from '@/common/data-local.js'\r\n// import bmap from 'echarts/extension/bmap/bmap';\r\n\r\n\r\nimport {\r\n  getContentAction,\r\n  getContentByProvinceAction,\r\n  getContentByCityAction,\r\n} from '@/pages/dataOverview/store/actionCreator';\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n} from '@/pages/dataReporting/store/actionCreator'\r\nimport {\r\n  BotWrapper,\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\nimport Chunk from './components/chunk/chunk';\r\nimport Histogram from './components/histogram/histogram';\r\n\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\n  export default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n    const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {content,province,city,grade,user,login} = useSelector(state => {\r\n    return {\r\n      content:state.getIn(['dataOverview','content']),\r\n      province:state.getIn(['dataReporting','province']),\r\n      city:state.getIn(['dataReporting','city']),\r\n      grade:state.getIn(['dataReporting','grade']),\r\n      user:state.getIn(['user','user']),\r\n      login:state.getIn(['user','login'])\r\n    }\r\n  });\r\n\r\n\r\n  const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n      switch (grade){\r\n        case 2:\r\n          var provinceIndex = provincesText.findIndex(x => {\r\n            return province === x\r\n          });\r\n          if (provinceIndex === -1) return;\r\n          var provinceAlphabet = provinces[provinceIndex];\r\n          setProvinceAlphabet(provinceAlphabet);\r\n          getProvinceMapOpt(provinceAlphabet,province);\r\n          break;\r\n        case 3:\r\n          var provinceIndex = provincesText.findIndex(x => {\r\n            return province === x\r\n          });\r\n          if (provinceIndex === -1) return;\r\n          var provinceAlphabet = provinces[provinceIndex];\r\n\r\n          setProvinceAlphabet(provinceAlphabet);\r\n          getCityMapOpt(city);\r\n          break;\r\n        case 1:\r\n          if(user.user_role === 1){\r\n            dispatch(getContentAction());\r\n            initalMap();\r\n          }\r\n          break;\r\n      }\r\n    },[grade,user]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#5784E8', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        },\r\n\r\n      }\r\n    }\r\n    if(grade === 2 && province === '海南'){\r\n      option.geo.top = '180%';\r\n      option.geo.left = '80%';\r\n      option.geo.zoom = '5';\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n\r\n      map.setOption(option,true);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n      setProvinceAlphabet(provinceAlphabet);\r\n      map.off('click');\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getContentByProvinceAction(provinceName)); // 改变当前数据\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n  }\r\n\r\n    useEffect(() => { // 监听 city 改变\r\n      city && dispatch(getContentByCityAction(province,city));\r\n    },[city]);\r\n    // useEffect(() => { //\r\n    //   province && dispatch(getContentByProvinceAction(province));\r\n    // },[province]);\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getContentAction());\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        setProvinceAlphabet('');\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div className='chunks'>\r\n            {/*<Chunk count={content.sum_pass_unit} text='通过认证医联体' logo={icon1} />*/}\r\n            {/*<Chunk count={content.sum_pass_hospital} text='通过认证医院总数' logo={icon2} />*/}\r\n            {/*<Chunk count={content.sum_register_hospital} text='注册医院总数' logo={icon3} />*/}\r\n            <Chunk count={content.sum_register_hospital} text='注册医院总数' logo={icon3} />\r\n            <Chunk count={content.sum_pass_hospital} text='通过认证医院总数' logo={icon2} />\r\n            <Chunk count={content.sum_pass_unit} text='通过认证医联' logo={icon1} />\r\n          </div>\r\n          <div id=\"map\">\r\n          </div>\r\n          { ((grade === 2 && user.user_role === 1) || (grade === 3 && user.user_role <= 2))&& <div className=\"back\" onClick={() => {back()}}>返回</div> }\r\n        </TopWrapper>\r\n        <BotWrapper>\r\n          <Histogram/>\r\n       </BotWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataOverview.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\actionCreator.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\common\\data-local.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\chunk.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\histogram.js",["586","587"],"import React,{memo,useEffect} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\nexport default memo(function (){\r\n\r\n\r\n  const {content,grade} = useSelector(state => ({\r\n    content:state.getIn(['dataOverview','content']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    let gradeText = '';\r\n    switch (grade){\r\n      case 1:\r\n        gradeText = '各省';\r\n        break;\r\n      case 2:\r\n        gradeText = '各市';\r\n        break;\r\n      case 3:\r\n        gradeText = '各市';\r\n    }\r\n    const option = {\r\n      title:{\r\n        show:true,\r\n          text:`${gradeText}注册量、建设中、通过认证数量`,\r\n          y:10,\r\n          x:5,\r\n          textStyle:{\r\n          color:'#0096FF'\r\n        }\r\n      },\r\n      grid:{\r\n        x:25,\r\n          x2:25,\r\n          y2:50\r\n      },\r\n      color:['#7AE911','#FF8B19','#04B7FF'],\r\n        legend: {\r\n        data: ['注册量', '建设中','通过认证量'],\r\n          right:10,\r\n          top:10,\r\n          textStyle:{\r\n          color:'#fff'\r\n        }\r\n      },\r\n      tooltip:{\r\n        show:true\r\n      },\r\n      calculable: true,\r\n        xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\r\n          axisLabel: {\r\n            interval:0,//代表显示所有x轴标签显示 b\r\n            color:'#fff',\r\n          },\r\n        }\r\n      ],\r\n        yAxis: [\r\n        {\r\n          show:false,\r\n          type: 'value',\r\n        }\r\n      ],\r\n        series: [\r\n        {\r\n          name: '注册量',\r\n          type: 'bar',\r\n          barGap:0,\r\n          barCategoryGap:'30%',\r\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\r\n          itemStyle: {\r\n            normal: {\r\n              label: {\r\n                show: true, //开启显示\r\n                position: 'top', //在上方显示\r\n                textStyle: { //数值样式\r\n                  color: '#fff',\r\n                }\r\n              }\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: '建设中',\r\n          type: 'bar',\r\n          barGap:0,\r\n          barCategoryGap:'30%',\r\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\r\n          itemStyle: {\r\n            normal: {\r\n              label: {\r\n                show: true, //开启显示\r\n                position: 'top', //在上方显示\r\n                textStyle: { //数值样式\r\n                  color: '#fff',\r\n                }\r\n              }\r\n            }\r\n          },\r\n        },\r\n        {\r\n          name: '通过认证量',\r\n          type: 'bar',\r\n          barGap:0,\r\n          barCategoryGap:'30%',\r\n          data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\r\n          itemStyle: {\r\n            normal: {\r\n              label: {\r\n                show: true, //开启显示\r\n                position: 'top', //在上方显示\r\n                textStyle: { //数值样式\r\n                  color: '#fff',\r\n                }\r\n              }\r\n            }\r\n          },\r\n        }\r\n      ],\r\n        dataZoom: [\r\n        {\r\n          show: true, // 为true 滚动条出现\r\n          realtime: true,\r\n          type:'slider', // 有type这个属性，滚动条在最下面，也可以不行，写y：36，这表示距离顶端36px，一般就是在图上面。\r\n          y:180,\r\n          height: 0,\r\n          end:30\r\n        },\r\n        {\r\n          show: true, // 为true 滚动条出现\r\n          realtime: true,\r\n          type:'inside', // 有type这个属性，滚动条在最下面，也可以不行，写y：36，这表示距离顶端36px，一般就是在图上面。\r\n          height: 0, // 表示滚动条的高度，也就是粗细\r\n\r\n        }\r\n      ]\r\n    };\r\n\r\n    let num = content.zhu_info && content.zhu_info.map(i => {\r\n      return i.num;\r\n    });\r\n    let build_num = content.zhu_info && content.zhu_info.map(i => {\r\n      return i.build_num;\r\n    });\r\n    let pass_num = content.zhu_info && content.zhu_info.map(i => {\r\n      return i.pass_num;\r\n    });\r\n    let province = content.zhu_info && content.zhu_info.map(i => {\r\n      return i.province;\r\n    });\r\n\r\n\r\n    option.series[0].data = num;\r\n    option.series[1].data = build_num;\r\n    option.series[2].data = pass_num;\r\n    option.xAxis[0].data = province;\r\n\r\n    let chart = echarts.init(document.getElementById('histogram'));\r\n    chart.setOption(option);\r\n\r\n  },[content])\r\n\r\n  return (\r\n   <Wrapper isShow={JSON.stringify(content.zhu_info) !== '[]'}>\r\n     {JSON.stringify(content.zhu_info) !== '[]'}\r\n        <div id='histogram' style={{'width':'100%','height':'20vh'}}>\r\n        </div>\r\n     {JSON.stringify(content.zhu_info) === '[]' && <div className=\"nodata\">暂无数据</div>}\r\n   </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\rank.js",["588"],"import React,{memo,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport { Progress } from 'antd'\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport {Spin} from \"antd\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport {getRankStateAction} from \"@/pages/dataOverview/store/actionCreator\";\r\n\r\n\r\nexport default memo(function (props){\r\n  const dispatch = useDispatch();\r\n  const {content_state,rank_state} = useSelector(state => ({\r\n    content_state:state.getIn(['dataOverview','content_state']),\r\n    rank_state:state.getIn(['dataOverview','rank_state']),\r\n  }));\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  let data = [];\r\n  let {province,city} = props;\r\n  data = rank_state ? city : province || [];\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">通过认证数量排名</div>\r\n      <div className=\"hover\" />\r\n      <div className=\"list\">\r\n        {\r\n          data.length ? data.map((item,index) => {\r\n            return (\r\n              <div className='item' key={item.province}>\r\n                <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.province}</div>\r\n                <div className=\"item-progress\">\r\n                  <Progress percent={item.num}\r\n                            status={\"active\"}\r\n                            strokeColor={{\r\n                              to:'#0477D5',\r\n                              from:'#01D9FE'\r\n                            }}\r\n                            trailColor='#193F80'\r\n                            showInfo={false}\r\n                  />\r\n                  <div className=\"score\">{item.num}</div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }) : <div className=\"nodata\">暂无数据</div>\r\n        }\r\n\r\n      </div>\r\n      <div className=\"option\">\r\n        <div className={!rank_state ? 'active' : ''} onClick={() => {dispatch(getRankStateAction(0))}}>省</div>\r\n        <div className={rank_state ? 'active' : ''} onClick={() => {dispatch(getRankStateAction(1))}}>市</div>\r\n      </div>\r\n      {content_state ? <Spin tip=\"Loading...\" indicator={antIcon} /> : '' }\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\bing.js",["589","590"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport * as echarts from \"echarts\";\r\nimport {Spin} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport default memo(function (props){\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n  const {content_state} = useSelector(state => ({\r\n    content_state:state.getIn(['dataOverview','content_state'])\r\n  }));\r\n  const option = {\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n\r\n    },\r\n    legend: {\r\n      bottom:-20,\r\n      y:'bottom',\r\n      textStyle:{\r\n        fontSize:20,\r\n        color:'#fff'\r\n      }\r\n\r\n    },\r\n    color:['#1792E6','#94D4FF','#2B71FF'],\r\n    series: [\r\n      {\r\n        name: '医院分类',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        avoidLabelOverlap: false,\r\n        label: {\r\n          normal:{\r\n            position:'outer',\r\n            formatter:'{d}%',\r\n            fontSize: 18,\r\n            color:'#01C4F7'\r\n          },\r\n\r\n        },\r\n        labelLine: {\r\n          show: true\r\n        },\r\n        data: [\r\n          {value: 465, name: '一级医院'},\r\n          {value: 1465, name: '二级医院'},\r\n          {value: 165, name: '三级医院'},\r\n        ]\r\n      }\r\n    ],\r\n    textStyle:{\r\n      color:'#01C4F7'\r\n    }\r\n  }\r\n\r\n  const {data} = props;\r\n  useEffect(() => {\r\n    if(data){\r\n      let flag = true;\r\n      if(!data[0].y && !data[1].y && !data[2].y){\r\n        flag = false; \r\n        return;\r\n      }\r\n    }\r\n\r\n    if(data){\r\n      for(let i in data){   // 获取数据后改变options\r\n        option.series[0].data[i].value = data[i].y;\r\n        option.series[0].data[i].name = data[i].x;\r\n      }\r\n    }\r\n    let chart = echarts.init(document.getElementById('pie'));\r\n\r\n\r\n\r\n    chart.setOption(option);\r\n  },[data])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">注册医院分类统计</div>\r\n      <div className=\"hover\" />\r\n      <div id=\"pie\"  style={{'width':'100%','height':'60vh'}} />\r\n      {content_state ? <Spin tip=\"Loading...\" indicator={antIcon} /> : '' }\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\nextBtn.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\actionCreator.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\index.js",["591","592","593","594","595","596"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual, useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nimport china from '@/assets/json/china.json';\r\nimport icon1 from '@/assets/imgs/dataOverview/1.png';\r\nimport icon2 from '@/assets/imgs/dataOverview/2.png';\r\nimport icon3 from '@/assets/imgs/dataOverview/3.png';\r\nimport {cityMap} from '@/common/data-local.js'\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n  getCountAction,\r\n  getCountByProvinceAction,\r\n  getCountByCityAction,\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n\r\n} from '@/pages/dataReporting/store/actionCreator';\r\n\r\nimport {\r\n  BotWrapper,\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\nimport Chunk from './components/chunk/chunk';\r\nimport Logs from './components/logs/logs'\r\nimport {Spin} from \"antd\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport {getContentAction} from \"@/pages/dataOverview/store/actionCreator\";\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\nexport default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n  const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {all_count,province,city,grade,user,login} = useSelector(state => {\r\n    return {\r\n      all_count:state.getIn(['dataReporting','all_count']),\r\n      province:state.getIn(['dataReporting','province']),\r\n      city:state.getIn(['dataReporting','city']),\r\n      grade:state.getIn(['dataReporting','grade']),\r\n      user:state.getIn(['user','user']),\r\n      login:state.getIn(['user','login'])\r\n    }\r\n  },shallowEqual);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(all_count);\r\n  // },[all_count])\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() =>{\r\n\r\n    switch (grade){\r\n      case 2:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n          return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n        setProvinceAlphabet(provinceAlphabet);\r\n        getProvinceMapOpt(provinceAlphabet,province);\r\n        break;\r\n      case 3:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n          return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n        setProvinceAlphabet(provinceAlphabet);\r\n        getCityMapOpt(city);\r\n        break;\r\n      case 1:\r\n        if(user.user_role === 1){\r\n          dispatch(getContentAction());\r\n          initalMap();\r\n        }\r\n      break;\r\n    }\r\n  },[grade,user]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#5784E8', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n      map.setOption(option,true);\r\n\r\n      setProvinceAlphabet(provinceAlphabet);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n\r\n      map.off('click');\r\n\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n  }\r\n\r\n  useEffect(() => {\r\n      switch (grade){\r\n        case 2:\r\n          dispatch(getCountByProvinceAction(province))\r\n          break;\r\n        case 3:\r\n          dispatch(getCountByCityAction(city))\r\n          break;\r\n        default:\r\n          dispatch(getCountAction());\r\n          break;\r\n      }\r\n    },[grade])\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getCountAction());\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        setProvinceAlphabet('');\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n    const {count_state} = useSelector(state => ({\r\n      count_state:state.getIn(['dataReporting','count_state'])\r\n    }))\r\n\r\n\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div className='chunks'>\r\n            {all_count  && <Chunk count={all_count.all_count} text='累计填报病例总数' logo={icon1} />}\r\n            {all_count  && <Chunk count={all_count.today_count} text='今日填报病例总数' logo={icon3}/>}\r\n            {all_count  && <Chunk count={all_count.today_org} text='今日填报医院数量' logo={icon2}  flag={true}  />}\r\n          </div>\r\n          <div id=\"map\">\r\n          </div>\r\n          { ((grade === 2 && user.user_role === 1) || (grade === 3 && user.user_role <= 2))&& <div className=\"back\" onClick={() => {back()}}>返回</div> }\r\n          {count_state ? <Spin tip=\"Loading...\" indicator={antIcon} /> : '' }\r\n        </TopWrapper>\r\n        <BotWrapper>\r\n          <Logs/>\r\n       </BotWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\style.js",["597"],"import styled from \"styled-components\";\r\n\r\nimport centerTopBg from '@/assets/imgs/dataOverview/center-top.png'\r\nimport backBtn from '@/assets/imgs/dataOverview/back-btn.png'\r\nimport circle from '@/assets/imgs/dataOverview/circle.png'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 102vh;\r\n  position: relative;\r\n`\r\n\r\nexport const TopWrapper = styled.div`\r\n  position: relative;\r\n  background-image:url(${centerTopBg});\r\n  background-size: 100% 100%;\r\n  height: 77vh;\r\n  z-index: 2;\r\n\r\n  .ant-spin{\r\n    z-index: 10;\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    transform: translate(-50%,-50%);\r\n    left: 50%;\r\n    top: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0,0,0,0.5);\r\n  }\r\n  \r\n  #map{\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    height: 75%;\r\n    z-index: 3;\r\n    max-width: 1000px;\r\n\r\n  }\r\n  \r\n  .chunks{\r\n    margin-top: 2vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 1vw;\r\n  }\r\n\r\n  .back{\r\n    position: absolute;\r\n    top: 25%;\r\n    left: 1vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    background-image: url(${backBtn});\r\n    background-size: 100% 100%;\r\n    width: 6.28rem;\r\n    height: 2.61rem;\r\n    color: #00E4FF;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n`\r\nexport const BotWrapper = styled.div`\r\n  \r\n`\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\rank.js",["598","599"],"import React,{memo,useEffect,useState,useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Progress } from 'antd'\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport {\r\n  getScoreListAction,\r\n  getSubGradeAction,\r\n  getScoreListByProvinceAction,\r\n  getScoreListByCityAction\r\n} from '@/pages/dataReporting/store/actionCreator'\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  const [Count,setCount] = useState(100);\r\n  const listRef = useRef();\r\n  const {score_list,grade,sub_grade,province,city} = useSelector(state => ({\r\n    score_list:state.getIn(['dataReporting','score_list']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n    sub_grade:state.getIn(['dataReporting','sub_grade']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city'])\r\n  }))\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 1:\r\n        dispatch(getScoreListAction(1,sub_grade));\r\n        break;\r\n      case 2:\r\n        switch (sub_grade){\r\n          case 1:\r\n            dispatch(getScoreListAction(1,1));\r\n            break;\r\n          case 2:\r\n            dispatch(getScoreListByProvinceAction(2,2,province));\r\n            break;\r\n          case 3:\r\n            dispatch(getScoreListByProvinceAction(2,3,province));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        switch (sub_grade){\r\n          case 1:\r\n            dispatch(getScoreListAction(1,1));\r\n            break;\r\n          case 2:\r\n            dispatch(getScoreListByProvinceAction(2,2,province));\r\n            break;\r\n          case 3:\r\n            dispatch(getScoreListByCityAction(3,3,city));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      default:\r\n      break;\r\n    }\r\n  },[grade,sub_grade])\r\n\r\n\r\n\r\n  const subData = (Sub) => {\r\n    listRef.current.scrollTop = 0;\r\n    setCount(100);\r\n    dispatch(getSubGradeAction(Sub));\r\n  }\r\n\r\n  const onListScorll = e => {\r\n    const scrollTop = e.target.scrollTop;  // 滚动的高度\r\n    const scrollHeight = e.target.scrollHeight;  // 容器总高度\r\n    const clientHeight = e.target.clientHeight; // 容器可视高度\r\n    if(scrollHeight-clientHeight-scrollTop <= 100){\r\n      setCount(Count + 100);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">质控分数排名</div>\r\n      <div className=\"hover\" />\r\n      <div className=\"list\" onScroll={e => onListScorll(e)} ref={listRef}>\r\n        {\r\n          score_list.map((item,index) => {\r\n            if(index >= Count) return;\r\n            return (\r\n              <div className='item' key={index}>\r\n                <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.name}</div>\r\n                <div className=\"item-progress\">\r\n                  <Progress percent={item.score}\r\n                            status={\"active\"}\r\n                            strokeColor={{\r\n                              to:'#0477D5',\r\n                              from:'#01D9FE'\r\n                            }}\r\n                            trailColor='#193F80'\r\n                            showInfo={false}\r\n                  />\r\n                  <div className='score'>{item.score}</div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"option\">\r\n        <div className={sub_grade === 1 ? 'active' : ''} onClick={() => {subData(1)}}>省</div>\r\n        <div className={sub_grade === 2 ? 'active' : ''} onClick={() => {subData(2)}}>市</div>\r\n        <div className={sub_grade === 3 ? 'active' : ''} onClick={() => {subData(3)}}>医联体</div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\chunk.js",["600","601","602"],"import React,{memo} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n  Spin\r\n} from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  ChunkWrapper\r\n} from \"./style\";\r\n\r\n\r\nexport default memo(function Chunk(props){\r\n  const {count_state} = useSelector(state => ({\r\n    count_state:state.getIn(['dataReporting','count_state'])\r\n  }))\r\n\r\n\r\n  const {text,count,logo,flag} = props;\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n  return (\r\n    <ChunkWrapper>\r\n      <div className=\"icon\">\r\n        <img src={logo} alt=\"\"/>\r\n      </div>\r\n      <div className=\"info\">\r\n        <div className=\"info-text\">{text}</div>\r\n        <div className=\"info-count\"><span>{count}</span>{flag ? '家' : '例'}</div>\r\n      </div>\r\n\r\n    </ChunkWrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\preBtn.js",["603"],"import React,{memo,useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  let path = '/';\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (location.pathname === '/'){\r\n      path = '/';\r\n    }else{\r\n      path = '/dataReporting';\r\n    }\r\n  },[location.pathname])\r\n\r\n  return <Wrapper>\r\n    <NavLink to={path} />\r\n  </Wrapper>\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\nextBtn.js",["604"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {useLocation,useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n\r\n  const navTo = () =>{\r\n    const path = location.pathname;\r\n    if(path === '/'){\r\n      history.push('/dataReporting')\r\n    }else{\r\n      history.push('/dataCharts')\r\n    }\r\n  }\r\n  return <Wrapper onClick={() => {navTo()}} />\r\n\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataReporting.js",["605"],"import {dataReporting as axios,controlIndex } from \"./request\";\r\nimport Axios from \"axios\";\r\nimport Qs from 'qs';\r\n\r\n// 地图上方三个数字\r\nexport const getCount = () => {\r\n  return axios({\r\n    url:'/count',\r\n  })\r\n}\r\nexport const getCountByProvince = (province) => {\r\n  return axios({\r\n    url:'/count',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getCountByCity = (city) => {\r\n  return axios({\r\n    url:'/count',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n// 实时在线操作记录\r\nexport const getLogs = () => {\r\n  return axios({\r\n    url:'/record',\r\n  })\r\n}\r\nexport const getLogsByProvince = (province) => {\r\n  return axios({\r\n    url:'/record',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getLogsByCity = (city) => {\r\n  return axios({\r\n    url:'/record',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n// 质控分数排名\r\nexport const getScoreList = (area_type,data_type) => {\r\n  return controlIndex.post(\r\n    '/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type\r\n    }),\r\n  )\r\n}\r\n\r\n\r\nexport const getScoreListByProvince = (area_type,data_type,province) => {\r\n  return controlIndex.post(\r\n    '/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type,\r\n      province\r\n    })\r\n  )\r\n}\r\n\r\nexport const getScoreListByCity = (area_type,data_type,city) => {\r\n  return controlIndex.post(\r\n    '/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type,\r\n      city\r\n    })\r\n  )\r\n}\r\n\r\n// 填报总数排名\r\nexport const getRank = () => {\r\n  return axios({\r\n    url:'/rank',\r\n  })\r\n}\r\nexport const getRankByProvince = (province) => {\r\n  return axios({\r\n    url:'/rank',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getRankCity = (city) => {\r\n  return axios({\r\n    url:'/rank',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\logs.js",["606","607"],"import React,{memo,useEffect} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\nimport {\r\n  getLogsAction,\r\n  getLogsByProvinceAction,\r\n  getLogsByCityAction,\r\n} from '@/pages/dataReporting/store/actionCreator'\r\n\r\nexport default memo(function (){\r\n\r\n\r\n  const {logs,province,city,grade} = useSelector(state => ({\r\n    logs:state.getIn(['dataReporting','logs']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n  }),shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => { // 层级发生改变请求数据\r\n    switch (grade){\r\n      case 2:\r\n        dispatch(getLogsByProvinceAction(province))\r\n        break;\r\n      case 3:\r\n        dispatch(getLogsByCityAction(city))\r\n        break;\r\n      default:\r\n        dispatch(getLogsAction())\r\n        break;\r\n    }\r\n  },[grade])\r\n\r\n  return (\r\n   <Wrapper>\r\n     <div id='logs'>\r\n      <div className=\"title\">实时在线操作记录</div>\r\n      <div className=\"hover\"/>\r\n      <div className=\"logs\">\r\n        {\r\n          logs && logs.map((item,index) => {\r\n            return <div className={index %2 ===0 ? 'border log':'log'}\r\n              title={item.org_name+'于：'+item.add_time + '新增病例'}\r\n              key={index}>\r\n              <marquee>\r\n              {item.org_name}于：{item.add_time}新增病例</marquee></div>\r\n          })\r\n        }\r\n      </div>\r\n     </div>\r\n   </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\state.js",["608"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport * as echarts from 'echarts'\r\nimport {\r\n  Spin\r\n} from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const [isLoading,setIsLoading] = useState(true);\r\n  const {all_count,count_state} = useSelector(state => ({\r\n    all_count:state.getIn(['dataReporting','all_count']),\r\n    count_state:state.getIn(['dataReporting','count_state'])\r\n  }));\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let chart = echarts.init(document.getElementById('blChart'));\r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n      },\r\n      legend: {\r\n          x:'right',\r\n          y:'center',\r\n          orient: 'vertical',\r\n          textStyle:{\r\n          color:'#fff',\r\n            fontSize:16\r\n        },\r\n        itemGap:20,\r\n\r\n      },\r\n      color:['#1792E6','#94D4FF','#2B71FF'],\r\n        series: [\r\n        {\r\n          name: '病例填报状态',\r\n          type: 'pie',\r\n          center: [\"40s%\", \"50%\"],\r\n          radius: ['40%', '70%'],\r\n          avoidLabelOverlap: false,\r\n          labelLine: {\r\n            show: true\r\n          },\r\n          data: [\r\n            {value: 0, name: '填报中'},\r\n            {value: 0, name: '填报完成'},\r\n            {value: 0, name: '已审核'},\r\n            {value: 0, name: '已归档'},\r\n            {value: 0, name: '诊断中'}\r\n          ],\r\n          label: {\r\n            normal: {\r\n              position:'inner',\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              show: true\r\n            }\r\n          },\r\n          lableLine: {\r\n            normal: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              show: true\r\n            }\r\n          },\r\n        }\r\n      ]\r\n    }\r\n\r\n    for(let i in all_count.count){\r\n        option.series[0].data[i].value =all_count.count[i].count;\r\n        option.series[0].data[i].name =all_count.count[i].name;\r\n      }\r\n\r\n    chart.setOption(option);\r\n\r\n    JSON.stringify(all_count) !== '{}' &&  setIsLoading(false);\r\n\r\n  },[all_count])\r\n\r\n  return (\r\n   <Wrapper>\r\n     <div className=\"title\">填报情况</div>\r\n     <div className=\"hover\" />\r\n     <div id='blChart'  />\r\n     { count_state && <Spin tip=\"Loading...\" indicator={antIcon} />}\r\n   </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\index.js",["609","610"],"import React,{memo,useEffect,useState,useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper,\r\n\r\n} from './style';\r\nimport {Progress} from \"antd\";\r\nimport {\r\n  getRankStatAction\r\n} from '@/pages/dataReporting/store/actionCreator';\r\nimport {\r\n  getRank,\r\n  getRankByProvince,\r\n  getRankCity\r\n} from '@/network/dataReporting'\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  const [List,setList] = useState({});\r\n  const listRef = useRef();\r\n  const [Count,setCount] = useState(100);\r\n  const {rank_state,province,city,grade} = useSelector(state => ({\r\n    rank_state:state.getIn(['dataReporting','rank_state']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n  }))\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 2:\r\n        getRankByProvince(province).then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n      case 3:\r\n        getRankCity(city).then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n      default:\r\n        getRank().then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n    }\r\n  },[grade])\r\n\r\n  const changeRankState = (state) => {\r\n    listRef.current.scrollTop = 0;\r\n    setCount(100);\r\n    dispatch(getRankStatAction(state));\r\n  }\r\n\r\n  const onListScorll = e => {\r\n    const scrollTop = e.target.scrollTop;  // 滚动的高度\r\n    const scrollHeight = e.target.scrollHeight;  // 容器总高度\r\n    const clientHeight = e.target.clientHeight; // 容器可视高度\r\n    if(scrollHeight-clientHeight-scrollTop <= 100){\r\n      setCount(Count + 100);\r\n    }\r\n  }\r\n\r\n  return (\r\n   <Wrapper>\r\n     <div className=\"title\">填报总数排名\r\n     </div>\r\n     <div className=\"hover\" />\r\n     <div className=\"list\" onScroll={e => onListScorll(e)} ref={listRef}>\r\n       {\r\n         List[rank_state+'_data'] && List[rank_state+'_data'].map((item,index) => {\r\n           if(index >= Count) return;\r\n           return (\r\n             <div className='item' key={index}>\r\n               <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.name}</div>\r\n               <div className=\"item-progress\">\r\n                 <Progress percent={item.count}\r\n                           status={\"active\"}\r\n                           strokeColor={{\r\n                             to:'#0477D5',\r\n                             from:'#01D9FE'\r\n                           }}\r\n                           trailColor='#193F80'\r\n                           showInfo={false}\r\n                 />\r\n                 <div className='score'>{item.count}</div>\r\n               </div>\r\n             </div>\r\n           )\r\n         })\r\n       }\r\n\r\n     </div>\r\n     <div className=\"option\">\r\n       <div className={rank_state === 'province' ? 'active' : ''} onClick={() => {changeRankState('province')}}>省</div>\r\n       <div className={rank_state === 'city' ? 'active' : ''} onClick={() => {changeRankState('city')}}>市</div>\r\n       <div className={rank_state === 'ylt' ? 'active' : ''} onClick={() => {changeRankState('ylt')}}>医联体</div>\r\n     </div>\r\n   </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\index.js",["611","612"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport DataHeader from '@/components/dataHeader/';\r\nimport Auth from '@/common/authentication'\r\nimport {\r\n    Wrapper\r\n} from \"@/pages/dataCharts/style\";\r\nimport {\r\n  getCoreDetailForDataView,\r\n  getCoreDetailForDataViewByProvince,\r\n  getCoreDetailForDataViewByCity\r\n} from '@/network/dataCharts'\r\nimport PreBtn from './c-coms/preBtn/preBtn';\r\nimport SideBar from '@/components/sideBar';\r\n\r\n\r\nexport default memo(function DataCharts(props){\r\n\r\n  const [Options,setOptions] = useState([]);\r\n  const option = {\r\n    grid:{\r\n      width:'82%',\r\n      height:'60%',\r\n      bottom:'10%',\r\n      left:'10%',\r\n\r\n    },\r\n    title:{\r\n      show:true,\r\n      text:'1.高血压整治例数',\r\n      textStyle:{\r\n        color:'#FFF',\r\n        fontWeight:'400',\r\n        fontSize:16,\r\n\r\n      },\r\n      padding:[\r\n        15,1000,15,20\r\n      ],\r\n      backgroundColor:'#3A3D75'\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      name:'月',\r\n      data: ['19.04', '05', '06', '07','08', '09', '10', '11', '12','01', '02','20.04'],\r\n      axisLabel:{\r\n        interval:0,\r\n        color:(e) => {\r\n          return e.length > 2 ? '#19B0FF' :'#D6D7ED'\r\n        },\r\n\r\n      },\r\n      axisLine:{\r\n        lineStyle:{\r\n          color:'#9A9CB8'\r\n        },\r\n\r\n      },\r\n      axisTick:{\r\n        show:false\r\n      },\r\n      nameTextStyle:{\r\n        color:'#D6D7ED'\r\n      }\r\n    },\r\n    tooltip:{\r\n      show:true,\r\n      trigger:'axis',\r\n      formatter:'',\r\n      borderColor:'#000'\r\n    },\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        name: '例',\r\n        axisLabel:{\r\n          color:'#D6D7ED'\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color:'#9A9CB8'\r\n          }\r\n        },\r\n        axisTick:{\r\n          show:false\r\n        },\r\n        splitLine:{\r\n          show:false\r\n        },\r\n        nameTextStyle:{\r\n          color:'#D6D7ED'\r\n        },\r\n      },\r\n      {\r\n        type: 'value',\r\n        name: '例',\r\n        axisLabel:{\r\n          color:'#D6D7ED'\r\n        },\r\n        axisLine:{\r\n          lineStyle:{\r\n            color:'#9A9CB8'\r\n          }\r\n        },\r\n        axisTick:{\r\n          show:false\r\n        },\r\n        splitLine:{\r\n          show:false\r\n        },\r\n        nameTextStyle:{\r\n          color:'#D6D7ED'\r\n        },\r\n      },\r\n    ],\r\n    legend: {\r\n      data: ['蒸发量', '平均温度']\r\n    },\r\n    series: [\r\n      {\r\n        data: [1200, 2000, 1500, 800, 700, 1100, 1300,4100, 2000, 3500, 800, 700],\r\n        type: 'bar',\r\n        barWidth:10,\r\n        itemStyle:{\r\n          normal:{\r\n            color:() => {\r\n              const colorList = ['rgba(178, 242, 181, 1)','rgba(53, 186, 255, 1)','rgba(73, 126, 234, 1)'];\r\n              let colorIndex = Math.round(Math.random()*2);\r\n              if(OcolorIndex.length >= 12){\r\n                OcolorIndex = [];\r\n              }\r\n              OcolorIndex.push(colorList[colorIndex]);\r\n              return colorList[colorIndex];\r\n            },\r\n            label:{\r\n              show:true,\r\n              position:'top',\r\n              color:'#fff',\r\n              rotate:20\r\n            },\r\n            barBorderRadius:[10,10,0,0]\r\n          }\r\n        },\r\n        label:{\r\n          color:'#fff'\r\n        },\r\n        showBackground: true,\r\n        backgroundStyle: {\r\n          barBorderRadius:[10,10,0,0]\r\n        }\r\n      },\r\n      {\r\n        // show:false,\r\n        type: 'line',\r\n        symbolSize: 0, // symbol的大小设置为0\r\n        showSymbol: false, // 不显示symbol\r\n        lineStyle: {\r\n          width: 0, // 线宽是0\r\n          color: 'rgba(0, 0, 0, 0)' // 线的颜色是透明的\r\n        },\r\n        data: [1000, 1200, 1400, 1600, 1000, 2000, 1200, 3600, 1000, 2000, 1000, 2000],\r\n        // itemStyle : {\r\n        //   normal : {\r\n        //     color:'#fff',\r\n        //     lineStyle:{\r\n        //       color:'#fff'\r\n        //     }\r\n        //   }\r\n        // },\r\n        // clip:true\r\n      },\r\n    ]\r\n  };\r\n\r\n  let OcolorIndex = [];\r\n  const {province,city,grade} = useSelector(state => ({\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n\r\n    switch (grade){\r\n      case 1:\r\n        getCoreDetailForDataView().then(res => {\r\n          setOptions(res.data.data);\r\n        });\r\n        break;\r\n      case 2:\r\n        getCoreDetailForDataViewByProvince(province).then(res => {\r\n          setOptions(res.data.data);\r\n        });\r\n        break;\r\n      case 3:\r\n        getCoreDetailForDataViewByCity(city).then(res => {\r\n          setOptions(res.data.data);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    if(JSON.stringify(Options) === '[]'){\r\n      return;\r\n    }\r\n    for(let i in [0,1,2,3,4,5,6,7,8]){\r\n      let chart = echarts.init(document.getElementsByClassName('charts-item')[i]);\r\n      Options[i] && chart.setOption(getOption(i));\r\n    }\r\n  },[Options])\r\n\r\n  const getOption = (i) =>{\r\n    // 赋值\r\n    if(Options[i].core_name.length >= 30){\r\n      option.title.textStyle.fontSize = 14;\r\n    }\r\n    option.title.text = Options[i].core_name;\r\n    option.xAxis.data =   Options[i].x_list;\r\n    option.series[0].data =  Options[i].y_left_list;\r\n    option.series[1].data =  Options[i].y_right_list;\r\n    option.yAxis[0].name =  Options[i].core_unit.left;\r\n    // 统一左右两侧刻度\r\n    const Max = calMax([Options[i].y_left_list])\r\n    option.yAxis[0].max = Max + Max * 0.1;\r\n    option.yAxis[0].min = 0;\r\n    option.yAxis[0].interval = (Max + Max * 0.1) / 5;\r\n    option.yAxis[1].max = Max;\r\n    option.yAxis[1].interval = (Max + Max * 0.1) / 5;\r\n\r\n    option.tooltip.formatter =  (data) => {\r\n      const temp = Options[i].core_unit.unit === 2 ? '%' : '';\r\n      return `\r\n                  实际值:${Options[i].y_left_list[data[1].dataIndex]}${temp}</br>\r\n                  标准值:${Options[i].y_right_list[data[1].dataIndex]}${temp}`\r\n    }\r\n\r\n    option.series[0].itemStyle.normal.label.formatter = (params) => {\r\n        return Options[i].core_unit.unit === 2 ? params.data + '%' : params.data\r\n    }\r\n    return option;\r\n  }\r\n\r\n  const calMax = arr => {\r\n    let max = 0;\r\n    arr.forEach((el) => {\r\n      el.forEach((el1) => {\r\n        if (!(el1 === undefined || el1 === '')) {\r\n          if (max < el1) {\r\n            max = el1;\r\n          }\r\n        }\r\n      })\r\n    })\r\n    let maxint = Math.ceil(max / 9);//不让最高的值超过最上面的刻度\r\n    let maxval = maxint * 10;//让显示的刻度是整数\r\n    return maxval;\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Auth/>\r\n        <DataHeader/>\r\n        {\r\n          JSON.stringify(Options) !== '[]' && <div id=\"charts\">\r\n            {\r\n              [0,1,2,3,4,5,6,7,8].map(item => {\r\n                return <div className='charts-item' key={item}>{item}</div>\r\n              })\r\n            }\r\n          </div>\r\n        }\r\n        {\r\n          JSON.stringify(Options) === '[]' && <div className=\"nodata\">暂无数据</div>\r\n        }\r\n        <SideBar/>\r\n        <PreBtn/>\r\n      </Wrapper>\r\n    )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataCharts.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\preBtn.js",["613","614"],"import React,{memo,useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  let path = '/dataReporting';\r\n\r\n\r\n  return <Wrapper>\r\n    <NavLink to={path} />\r\n  </Wrapper>\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\index.js",["615"],"import React,{memo,useEffect} from 'react';\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport IndexHeader from '@/components/indexHeader';\r\nimport Auth from '@/common/authentication'\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport Left from './c-pages/left';\r\nimport Right from './c-pages/right';\r\nimport Joined from './c-pages/hospitalJoined';\r\nimport SideBar from '@/components/sideBar'\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport {\r\n  getGradeAction,\r\n  getProvinceAction,\r\n  getCityAction\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\nexport default memo(function () {\r\n  const {grade} = useSelector(state => {\r\n    return {\r\n      grade:state.getIn(['controlIndex','grade'])\r\n    }\r\n  },shallowEqual);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    dispatch(getGradeAction(user.user_role));\r\n    dispatch(getProvinceAction(user.province));\r\n    dispatch(getCityAction(user.city));\r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Auth/>\r\n      <IndexHeader/>\r\n      <Row>\r\n        <Col span={12}>\r\n          {(grade === 1 || grade === 2 || grade === 3) && <Left/>}\r\n          {!(grade === 1 || grade === 2 || grade === 3) && <Joined/>}\r\n        </Col>\r\n        <Col span={12}>\r\n          <Right/>\r\n        </Col>\r\n      </Row>\r\n      <SideBar/>\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\index.js",["616"],"import React,{memo,useState,useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\nimport DatePicker from '@/common/date-picker'\r\nimport date from '@/assets/imgs/qualityIndicators/date.png'\r\n\r\nexport default memo(function DataHeader(){\r\n  const [isShow,setIsShow] = useState('none');\r\n  const {start,end} = useSelector(state => ({\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end']),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click',() => {\r\n      setIsShow('none')\r\n    })\r\n  },[])\r\n\r\n  const changeIsShow = (e) => {\r\n    if (isShow === 'none'){\r\n      setIsShow( 'block');\r\n    }else{\r\n      setIsShow( 'none');\r\n    }\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"date\" onClick={(e) =>{changeIsShow(e)} } >{start}</div>\r\n      <img src={date} onClick={(e) => {changeIsShow(e)}} alt=\"\"/>\r\n      <DatePicker isShow={isShow} />\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\index.js",["617"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport moment from 'moment'\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\nimport {\r\n  getStartTimeAction\r\n} from '@/pages/controlIndex/store/actionCreator';\r\nimport {\r\n  LeftOutlined,\r\n  RightOutlined\r\n} from '@ant-design/icons'\r\n\r\nexport default memo(function DataHeader(props){\r\n  const {isShow} = props;\r\n  const [currentYear,setCurrentYear] = useState('');\r\n  const [currentMonth,setCurrentMonth] = useState('');\r\n  const monthList = ['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'];\r\n  const {start_time} = useSelector(state => ({\r\n    start_time:state.getIn(['controlIndex','start_time']),\r\n    // end_time:state.getIn(['controlIndex','end_time']),\r\n  }))\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // 初始化日期显示\r\n    const year = moment().format('YYYY');\r\n    setCurrentYear(year);\r\n    const month = Number(moment().format('M'));\r\n    setCurrentMonth(month);\r\n    // dispatch(getStartTimeAction(`${year}-${month < 10 ? 0 +''+ month : month}`));\r\n  },[]);\r\n\r\n\r\n  const selectMonth = (index,e) => {\r\n    const i = index +1;\r\n    setCurrentMonth(i);\r\n    dispatch(getStartTimeAction(`${currentYear}-${i < 10 ? '0'+i : i}`));\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const preYear = (e,value) => {\r\n\r\n    const preYear  = Number(currentYear) + value;\r\n    setCurrentYear(preYear);\r\n    dispatch(getStartTimeAction(`${preYear}-${currentMonth < 10 ? '0'+currentMonth : currentMonth}`));\r\n    e.stopPropagation();\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper isShow={isShow}>\r\n      <div className=\"header\">\r\n        <LeftOutlined onClick={(e) => {preYear(e,-1)}} />\r\n        <span>{currentYear}年</span>\r\n        <RightOutlined onClick={(e) => {preYear(e,1)}} />\r\n      </div>\r\n      <div className=\"months\">\r\n        {\r\n          monthList.map((item,index) => {\r\n            return <div key={index} className={[index+1 === currentMonth ? 'active month' : 'month']}\r\n              onClick={(e) => {selectMonth(index,e)}}\r\n            >{item}</div>\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\style.js",[],["618","619"],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\actionCreator.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\controlIndex.js",["620","621"],"import {controlIndex,dataOverview as dataOverview,dataReporting as dataReporting} from \"@/network/request\";\r\n\r\nimport Qs from 'qs';\r\n\r\n\r\n// 指标详情\r\nexport const getCoreDetail = (start,end) => {  // 全国\r\n  return controlIndex.post(\r\n'/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByProvince = (start,end,province) => {  // 省\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      start,\r\n      end,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByCity = (start,end,city) => {  // 市\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      start,\r\n      end,\r\n      city\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByJoined = (start,end,hospital_joined_id) => {  // 医联体\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:4,\r\n      start,\r\n      end,\r\n      hospital_joined_id\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByHospital = (start,end,hospital_id) => {  // 医院\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:5,\r\n      start,\r\n      end,\r\n      hospital_id\r\n    })\r\n  )\r\n};\r\n\r\n// 搜索医院列表\r\nexport const getHospitalJoinedList = () => {  // 全国\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:1,\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedListByProvince = (province) => {  // 省\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedListByCity = (city) => {  // 市\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      city\r\n    })\r\n  )\r\n};\r\n\r\n// 指标信息\r\nexport const getCoreRank = (start,end,province) => {  // 省和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:1,\r\n      province,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankCityAndChina = (start,end,city) => {  // 市和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:2,\r\n      city,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndChina = (start,end,hospital_joined_id) => {  // 医联体和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndChina = (start,end,hospital_id) => {  // 医院和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankCityAndProvince = (start,end,city) => {  // 市和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:2,\r\n      city,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndProvince = (start,end,hospital_joined_id) => {  // 医联体和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndCity = (start,end,hospital_joined_id) => {  // 医联体和市对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndProvince = (start,end,hospital_id) => {  // 医院和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndCity = (start,end,hospital_id) => {  // 医院和市对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\n\r\n\r\n// 搜索医联体\r\nexport const getSearchHospital = (area_type,hospital_joined_name) => {\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      hospital_joined_name\r\n    })\r\n  )\r\n};\r\n\r\n// 某指标下的医联体\r\nexport const getHospitalJoinedByCore = (start,end,core_name) => { // 全国\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      core_name,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedByCoreByProvince = (start,end,core_name,province) => {  // 省\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      core_name,\r\n      start,\r\n      end,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedByCoreByCity = (start,end,core_name,city) => {  // 市\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      core_name,\r\n      start,\r\n      end,\r\n      city\r\n    })\r\n  )\r\n};\r\n\r\n\r\n// 质控评分\r\nexport const getScoreListByJoined = (start,end,hospital_joined_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreInfo',\r\n    Qs.stringify({\r\n      data_type:1,\r\n      hospital_joined_id,\r\n      start,\r\n      end,\r\n    }))\r\n}\r\nexport const getScoreListByHospital = (start,end,hospital_id) => { // 医院\r\n  return controlIndex.post('/QualityControlScore/getScoreInfo',\r\n    Qs.stringify({\r\n      data_type:2,\r\n      hospital_id,\r\n      start,\r\n      end,\r\n  }))\r\n}\r\n\r\n\r\n// 认证时间\r\nexport const getTimeInfoByHospitalJoined = (name) => {\r\n  return dataOverview({\r\n    url:'/getTimeInfoByHospital',\r\n    params:{\r\n      name\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// 近四月质控分数\r\nexport const getScoreListForHospitalJoined = (hospital_joined_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreListForHospital',\r\n    Qs.stringify({\r\n      data_type:1,\r\n      hospital_joined_id\r\n    }))\r\n};\r\nexport const getScoreListForHospital = (hospital_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreListForHospital',\r\n    Qs.stringify({\r\n      data_type:2,\r\n      hospital_id\r\n    }))\r\n}\r\n\r\n// 近四月质控分数\r\nexport const getMonth6ByOrg = (org_id) => {\r\n  return dataReporting({\r\n    url:'/month',\r\n    params:{\r\n      type:1,\r\n      org_id\r\n    }\r\n  })\r\n};\r\nexport const getMonth6ByHospital = (org_id) => {\r\n  return dataReporting({\r\n    url:'/month',\r\n    params:{\r\n      type:2,\r\n      org_id\r\n    }\r\n  })\r\n};\r\n\r\n\r\n// 获取医联体下的医院列表\r\nexport const getHospitalList = (hospital_joined_id) => {\r\n  return controlIndex.post('/Hospital/getHospitalList',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      hospital_joined_id\r\n    }))\r\n}\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\index.js",["622","623"],"import React,{memo,useEffect,useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport searchBtn from '@/assets/imgs/qualityIndicators/search-hospital.png'\r\n\r\nimport {\r\n  getHospitalJoinedList,\r\n  getHospitalJoinedListByProvince,\r\n  getHospitalJoinedListByCity\r\n} from '@/network/controlIndex';\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n  getHospitalJoinedIdAction,\r\n  getHospitalJoinedNameAction,\r\n} from \"@/pages/controlIndex/store/actionCreator\";\r\n\r\nexport default memo(function (){\r\n  const [isShow,setIsShow] = useState('none');\r\n  const [hospitalList,setHospitalList] = useState([]);  // 医院列表\r\n  const [res,setRes] = useState([]);  // 筛选后结果\r\n\r\n  const {province,city,grade,user} = useSelector(state => ({\r\n    province:state.getIn(['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    user:state.getIn(['user','user']),\r\n  }),shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    switch (grade){\r\n      default:\r\n        const user_role = JSON.parse(localStorage.getItem('user')).user_role;\r\n        if(user_role !== 1) return;\r\n        getHospitalJoinedList().then(res => {\r\n          setHospitalList(res.data.data);\r\n          setRes(res.data.data);\r\n        })\r\n        break;\r\n      case 2:\r\n        getHospitalJoinedListByProvince(province).then(res => {\r\n          setHospitalList(res.data.data);\r\n          setRes(res.data.data);\r\n        })\r\n        break;\r\n      case 3:\r\n        getHospitalJoinedListByCity(city).then(res => {\r\n\r\n          setTimeout(() => {\r\n            setHospitalList(res.data.data);\r\n            setRes(res.data.data);\r\n          },100)\r\n        })\r\n        break;\r\n    }\r\n  },[grade]);\r\n\r\n  const onChange = e => { // 输入关键字，筛选医联体\r\n    const value = e.target.value;\r\n    const arr = hospitalList.filter(item => {\r\n      return item.hospital_name.indexOf(value) !== -1;\r\n    })\r\n    setRes(arr);\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener('click',() => {\r\n      setIsShow('none')\r\n    });\r\n\r\n  },[])\r\n  const onFocus = e => {\r\n    setIsShow( 'block');\r\n    e.stopPropagation();\r\n  }\r\n\r\n  const onClick = (e,hospital) => { // 进入医联体界面\r\n    dispatch(getGradeAction(4));\r\n    dispatch(getProvinceAction(hospital.province));\r\n    dispatch(getCityAction(hospital.city));\r\n    dispatch(getHospitalJoinedIdAction(hospital.hospital_id));\r\n    dispatch(getHospitalJoinedNameAction(hospital.hospital_name));\r\n    e.stopPropagation();\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper isShow={isShow}  >\r\n      <input className='textinput' type=\"text\" placeholder='请输入医院名称' onChange={e => onChange(e)}\r\n             onClick={(e) => {onFocus(e)}}/>\r\n      <img src={searchBtn} alt=\"点击搜索\"/>\r\n      <div className=\"hospitalList\">\r\n        {\r\n          res && res.map((item,index) => {\r\n            return <div className='hospital' key={index} onClick={(e) => onClick(e,item)} >{item.hospital_name}</div>\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\style.js",["624"],"import styled from \"styled-components\";\r\n\r\nimport searchInput from '@/assets/imgs/qualityIndicators/search-input.png'\r\nimport searchHospital from '@/assets/imgs/qualityIndicators/search-hospital.png'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  padding: 0.75rem 0 0.75rem 1.25rem;\r\n  box-sizing: border-box;\r\n  width: 13.75rem;\r\n  height: 3rem;\r\n  background-image: url(${searchInput});\r\n  background-size: 100% 100%;\r\n  margin: 0 1.25rem;\r\n\r\n  .textinput{\r\n    width: 8rem;\r\n    border:none;\r\n    background-color: transparent;\r\n    outline: none;\r\n    color:#000;\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n    &::placeholder{\r\n      border:none;\r\n      outline: none;\r\n      color:#ccc;\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  \r\n  img{\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  \r\n  .hospitalList{\r\n    display: ${props => props.isShow};\r\n    overflow-y: scroll;\r\n    top: 3rem;\r\n    right: -20%;\r\n    height: 30vh;\r\n    width: 30vh;\r\n    position: absolute;\r\n    font-size: 1rem;\r\n    color:#8492a6;\r\n    font-weight: 400;\r\n    padding: 10px 0;\r\n    margin: 5px 0;\r\n    background-color: #fff;\r\n    border: 1px solid #ebeef5;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\r\n    z-index: 3;\r\n    .hospital{\r\n      cursor: pointer;\r\n      padding:0.6rem 1rem;\r\n      line-height: 2rem;\r\n      text-align: center;\r\n      &:hover{\r\n        color:#6ab5ff;\r\n        background-color: #ecf5ff\r\n      }\r\n    }\r\n\r\n    ::-webkit-scrollbar{\r\n      width: 10px;\r\n      height: 1px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 10px;\r\n\r\n      background-color:rgba(0,0,0,0.3);\r\n\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      -webkit-box-shadow: none;\r\n\r\n      background:rgba(0,0,0,0.2);\r\n    }\r\n  }\r\n\r\n  \r\n`\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\index.js",["625","626","627","628","629"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual,useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport china from '@/assets/json/china.json';\r\nimport {cityMap} from '@/common/data-local.js'\r\n\r\n\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n  getShowCoreAction\r\n} from '@/pages/controlIndex/store/actionCreator'\r\nimport {\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\nimport {getContentAction} from \"@/pages/dataOverview/store/actionCreator\";\r\n\r\n\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\n  export default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n  const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {province,city,grade,show_core,user} = useSelector(state => {\r\n    return {\r\n      province:state.getIn(['controlIndex','province']),\r\n      city:state.getIn(['controlIndex','city']),\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      show_core:state.getIn(['controlIndex','show_core']),\r\n      user:state.getIn(['user','user']),\r\n    }\r\n  },shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n    switch (grade){\r\n      case 2:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n        return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n            setProvinceAlphabet(provinceAlphabet);\r\n            getProvinceMapOpt(provinceAlphabet,province);\r\n        break;\r\n      case 3:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n          return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n          setProvinceAlphabet(provinceAlphabet);\r\n          getCityMapOpt(city);\r\n          break;\r\n      case 1:\r\n        if(user.user_role === 1){\r\n          initalMap();\r\n        }\r\n        break;\r\n    }\r\n    },[grade,user]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#4ab6d6', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n\r\n      map.setOption(option,true);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n\r\n      map.off('click');\r\n\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n    const provinceIndex = provincesText.findIndex(x => {\r\n      return provinceName === x\r\n    });\r\n    if (provinceIndex === -1) return;\r\n    const provinceAlphabet = provinces[provinceIndex];\r\n    setProvinceAlphabet(provinceAlphabet);\r\n  }\r\n\r\n  useEffect(() => { // 监听 city 改变\r\n\r\n  },[city]);\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div id=\"map\">\r\n          </div>\r\n          {((grade === 2 && user.user_role === 1) || (grade === 3 && user.user_role <= 2)) && <div className=\"back\" onClick={() => {back()}}>地图返回</div> }\r\n          {show_core  || <div className=\"back\" onClick={() => {dispatch(getShowCoreAction(true))}}>指标返回</div> }\r\n        </TopWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\index.js",["630"],"import React,{memo,useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport China from './c-coms/china';\r\nimport SubList from './c-coms/subList';\r\nimport Hospital from './c-coms/hospitalListByCore'\r\n\r\n\r\nexport default memo(function (){\r\n  const {grade,show_core,user} = useSelector(state => {\r\n    return {\r\n      province:state.getIn(['controlIndex','province']),\r\n      city:state.getIn(['controlIndex','city']),\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      show_core:state.getIn(['controlIndex','show_core']),\r\n      user:state.getIn(['user','user']),\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {show_core && grade === 1 && user.user_role === 1 && <China/>}\r\n      {show_core && grade !== 1 && <SubList/>}\r\n      {show_core  || <Hospital/>}\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\index.js",["631"],"import React,{memo,useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getCoreDetailAction,\r\n  getShowCoreAction,\r\n  getCoreNameAction,\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\nexport default memo(function (){\r\n  const {core_detail,start,end} = useSelector(state => ({\r\n    core_detail:state.getIn(['controlIndex','core_detail']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getCoreDetailAction(start,end));\r\n  },[start]);\r\n\r\n  const onClick = (core_name) => {\r\n    dispatch(getCoreNameAction(core_name));\r\n    dispatch(getShowCoreAction(false));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {\r\n        JSON.stringify(core_detail) !== '{}' && Object.keys(core_detail).map((key,index) => {\r\n          return <div key={key} className='item' onClick={() => {onClick(key)}}>\r\n            <div className=\"info\">\r\n              <div className=\"title\">{index+1}.&nbsp;{core_detail[key].core_name}</div>\r\n              {\r\n                core_detail[key].all_count !== 0 && <div className=\"count\">\r\n                  全国\r\n                  {core_detail[key].unit === 3 && <span><span className=\"highlight\">&nbsp;{core_detail[key].all_count}</span> 例</span>}\r\n                  {core_detail[key].unit === 2 && <span><span className=\"highlight\">&nbsp;{core_detail[key].pass_percent}</span> %</span>}\r\n                  {core_detail[key].unit === 1 && <span><span className=\"highlight\">&nbsp;{core_detail[key].avg_time}</span> 分钟</span>}\r\n                </div>\r\n              }\r\n              {core_detail[key].all_count ===0  && <div>无数据</div>}\r\n            </div>\r\n          </div>\r\n        })\r\n      }\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\index.js",["632","633","634"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport {\r\n  getCoreDetailByProvinceAction,\r\n  getCoreDetailByCityAction,\r\n  getCoreDetailByJoinedAction,\r\n  getCoreNameAction,\r\n  getShowCoreAction\r\n} from '@/pages/controlIndex/store/actionCreator';\r\nimport {\r\n  getCoreRank,\r\n  getCoreRankCityAndChina,\r\n  getCoreRankHospitalJoinedAndChina,\r\n  getCoreRankHospitalAndChina,\r\n  getCoreRankHospitalAndProvince,\r\n  getCoreRankHospitalAndCity,\r\n  getCoreRankHospitalJoinedAndProvince,\r\n  getCoreRankHospitalJoinedAndCity,\r\n  getCoreRankCityAndProvince,\r\n  getCoreDetail,\r\n  getCoreDetailByProvince,\r\n  getCoreDetailByCity\r\n} from '@/network/controlIndex'\r\n\r\n// import icon1 from '@/assets/imgs/qualityIndicators/icons/1.png';\r\nimport icon1 from '@/assets/imgs/qualityIndicators/icons/1.png';\r\nimport icon2 from '@/assets/imgs/qualityIndicators/icons/2.png';\r\nimport icon3 from '@/assets/imgs/qualityIndicators/icons/3.png';\r\nimport icon4 from '@/assets/imgs/qualityIndicators/icons/4.png';\r\nimport icon5 from '@/assets/imgs/qualityIndicators/icons/5.png';\r\nimport icon6 from '@/assets/imgs/qualityIndicators/icons/6.png';\r\nimport icon7 from '@/assets/imgs/qualityIndicators/icons/7.png';\r\nimport icon8 from '@/assets/imgs/qualityIndicators/icons/8.png';\r\nimport icon9 from '@/assets/imgs/qualityIndicators/icons/9.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [rank,setRank] = useState({});\r\n  const [compaDate,setCompaDate] = useState({});\r\n  const {core_detail,grade,start,end,province,city,hospital_joined_id,hospital_id,comp_grade} = useSelector(state => ({\r\n    core_detail:state.getIn(['controlIndex','core_detail']),\r\n    province:state.getIn( ['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n    comp_grade:state.getIn(['controlIndex','comp_grade']),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 2: // 省\r\n        dispatch(getCoreDetailByProvinceAction(start,end,province));\r\n        break;\r\n      case 3: // 市\r\n        dispatch(getCoreDetailByCityAction(start,end,city));\r\n        break;\r\n      case 4: // 医联体\r\n        dispatch(getCoreDetailByJoinedAction(start,end,hospital_joined_id));\r\n        break;\r\n      case 5: // 医院\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },[grade,start]);\r\n\r\n  /* comp_grade 对比的层级 1全国 2省 3市\r\n   grade 自身的层级*/\r\n  useEffect(() => { // 层级或对比层级发生改变时，请求排名数据和对比层级数据\r\n    switch (comp_grade){\r\n      case 1:\r\n        switch (grade){\r\n          case 2:\r\n            getCoreRank(start,end,province).then(res => { // 省-国\r\n              setRank(res.data.data);\r\n            });\r\n          break;\r\n          case 3:\r\n            getCoreRankCityAndChina(start,end,city).then(res => { // 市-国\r\n              setRank(res.data.data);\r\n            });\r\n            break;\r\n          case 4:\r\n            getCoreRankHospitalJoinedAndChina(start,end,hospital_joined_id).then(res => { // 医联体-国\r\n              setRank(res.data.data);\r\n            });\r\n            break;\r\n          case 5:\r\n            getCoreRankHospitalAndChina(start,end,hospital_id).then(res => { // 医院-国\r\n              setRank(res.data.data);\r\n            });\r\n          break;\r\n          default:break;\r\n        }\r\n        getCoreDetail(start,end).then(res => {\r\n          console.log('1')\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      case 2:\r\n        switch (grade){\r\n          case 3: // 市-省\r\n            getCoreRankCityAndProvince(start,end,city).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 4: // 医联体-省\r\n            getCoreRankCityAndProvince(start,end,city).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 5: // 医院-省\r\n            getCoreRankHospitalAndProvince(start,end,hospital_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          default:break;\r\n        }\r\n\r\n        getCoreDetailByProvince(start,end,province).then(res => {\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      case 3:\r\n        switch (grade){\r\n          case 4: // 医联体-市\r\n            getCoreRankHospitalJoinedAndCity(start,end,hospital_joined_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 5: // 医院-市\r\n            getCoreRankHospitalAndCity(start,end,hospital_joined_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          default:break;\r\n        }\r\n        getCoreDetailByCity(start,end,city).then(res => {\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n  },[comp_grade,grade]);\r\n\r\n  const onClick = (core_name) => {\r\n    if(grade >= 4) return;\r\n    dispatch(getCoreNameAction(core_name));\r\n    dispatch(getShowCoreAction(false));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"sub-list\">\r\n        {\r\n          core_detail  && JSON.stringify(rank) !== '{}' && JSON.stringify(compaDate) !== '{}' && Object.keys(core_detail).map((key,index) => {\r\n            return (\r\n                <div className='sub-item' key={key} onClick={() => {onClick(key)}}>\r\n                    <div className=\"left\">\r\n                      <div className=\"top\">{index+1}.{core_detail[key].core_name}</div>\r\n                      {\r\n                        core_detail[key].all_count > 0 ? <div className=\"bot\">\r\n                          {\r\n                            rank[key] ? <div className=\"item\">\r\n                              <div>\r\n                                <span className='highlight'>{rank[key].rank}</span>\r\n                                /{rank[key].count}\r\n                              </div>\r\n                              <div>排名</div>\r\n                            </div> : <div>无数据</div>\r\n                          }\r\n                          <div className=\"item\">\r\n                            <div>\r\n                              <span className=\"highlight\">{compaDate[key].unit === 1 ? compaDate[key].avg_time : compaDate[key].unit===2 ? compaDate[key].pass_percent:compaDate[key].all_count}</span>\r\n                              {core_detail[key].unit === 1 ? '分钟' : core_detail[key].unit===2 ? '%' : '例'}\r\n                            </div>\r\n                            <div>\r\n                              {comp_grade === 1 && '全国'}\r\n                              {comp_grade === 2 && '全省'}\r\n                              {comp_grade === 3 && '全市'}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                            <div>\r\n                            <span className='highlight'>\r\n                              {core_detail[key].unit === 1 ? core_detail[key].avg_time : core_detail[key].unit===2 ? core_detail[key].pass_percent:core_detail[key].all_count}\r\n                            </span>\r\n                              {core_detail[key].unit === 1 ? '分钟' : core_detail[key].unit===2 ? '%' : '例'}\r\n                            </div>\r\n                            <div>\r\n                              {grade === 2 && '本省'}\r\n                              {grade === 3 && '本市'}\r\n                              {grade === 4 && '医联体'}\r\n                              {grade === 5 && '医院'}\r\n                            </div>\r\n                          </div>\r\n                        </div> : '无数据'\r\n                      }\r\n                    </div>\r\n                    <div className=\"right\">\r\n                      {index === 0 && <img src={icon1} alt='404' />}\r\n                      {index === 1 && <img src={icon2} alt='404' />}\r\n                      {index === 2 && <img src={icon3} alt='404' />}\r\n                      {index === 3 && <img src={icon4} alt='404' />}\r\n                      {index === 4 && <img src={icon5} alt='404' />}\r\n                      {index === 5 && <img src={icon6} alt='404' />}\r\n                      {index === 6 && <img src={icon7} alt='404' />}\r\n                      {index === 7 && <img src={icon8} alt='404' />}\r\n                      {index === 8 && <img src={icon9} alt='404' />}\r\n                    </div>\r\n                </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\index.js",["635","636","637"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport { Collapse } from 'antd';\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getHospitalJoinedByCore,\r\n  getHospitalJoinedByCoreByProvince,\r\n  getHospitalJoinedByCoreByCity\r\n} from '@/network/controlIndex';\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n  getShowCoreAction,\r\n  getHospitalJoinedIdAction,\r\n  getHospitalJoinedNameAction\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport default memo(function (){\r\n  const [hospitalJoinedList,setHospitalJoinedList] = useState({});\r\n  const {core_name,grade,start,end,province,city} = useSelector(state => ({\r\n    core_name:state.getIn(['controlIndex','core_name']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n    province:state.getIn(['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 1:\r\n        getHospitalJoinedByCore(start,end,core_name).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n      break;\r\n      case 2:\r\n        getHospitalJoinedByCoreByProvince(start,end,core_name,province).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n        break;\r\n      case 3:\r\n        getHospitalJoinedByCoreByCity(start,end,core_name,city).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n\r\n  },[grade]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (id,hospital,info,key) => {\r\n    dispatch(getShowCoreAction(true));\r\n    dispatch(getGradeAction(4));\r\n    dispatch(getHospitalJoinedIdAction(id));\r\n    dispatch(getHospitalJoinedNameAction(hospital));\r\n    dispatch(getProvinceAction(info[0].province));\r\n    dispatch(getCityAction(info[0].city));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {JSON.stringify(hospitalJoinedList) !== '[]'  &&\r\n          <Collapse defaultActiveKey={['1']} >\r\n            {\r\n              Object.keys(hospitalJoinedList).map(key => {\r\n                return <Panel header={key+'('+hospitalJoinedList[key].length+'家)'} key={key} showArrow={false}>\r\n                  <div className='sub-panel'>\r\n                    {\r\n                      hospitalJoinedList[key].map((item,index) => {\r\n                        return <div key={index} className='hospital-item' onClick={() => onClick(item.hospital_id,item.hospital,hospitalJoinedList[key])}>\r\n                          <div className='hospital-name'>{item.hospital}</div>\r\n                          {item.all_count > 0 ? <div className=\"hospital-info\">\r\n                            <div className=\"item info\">\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">排名</div>\r\n                                <div className=\"info-data\">\r\n                                  {\r\n                                    item.rank ? <div><span className=\"highlight\">{item.rank}</span>/{item.count}</div> : '未认证'\r\n                                  }\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">医联体</div>\r\n                                <div className=\"info-data\">\r\n                                    <span className=\"highlight\">\r\n                                        {item.unit === 1 ? item.avg_time + '分钟' : item.unit == 2 ? item.pass_percent + '%' : item.all_count + '例'}\r\n                                    </span>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">全国</div>\r\n                                <div className=\"info-data\">\r\n                                    <span className=\"highlight\">\r\n                                        {item.country_data}\r\n                                    </span>{item.unit === 1 ? '分钟' : item.unit == 2 ? '%' : '例'}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div> : <div>无数据</div>}\r\n                        </div>\r\n                      })\r\n                    }\r\n                  </div>\r\n                </Panel>\r\n              })\r\n            }\r\n          </Collapse>\r\n     }\r\n    {\r\n      hospitalJoinedList.length === 0 && <div className=\"nodata\">该地区暂无数据</div>\r\n    }\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\index.js",["638"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n  Chunk\r\n} from './style';\r\nimport {\r\n  getScoreListByJoined,\r\n  getScoreListByHospital\r\n} from '@/network/controlIndex';\r\nimport controlScore from '@/assets/imgs/medicalConsortium/controlScore.png';\r\nimport rank1 from '@/assets/imgs/medicalConsortium/rank1.png';\r\nimport rank2 from '@/assets/imgs/medicalConsortium/rank2.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [scoreInfo,setScoreInfo] = useState({});\r\n  const {grade,hospital_joined_id,hospital_id,start,end} = useSelector(state => {\r\n    return {\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n      hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n      start:state.getIn(['controlIndex','start_time']),\r\n      end:state.getIn(['controlIndex','end_time']),\r\n    }\r\n  },shallowEqual);\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getScoreListByJoined(start,end,hospital_joined_id).then(res => {\r\n          setScoreInfo(res.data.data[0]);\r\n        })\r\n        break;\r\n      case 5:\r\n        getScoreListByHospital(start,end,hospital_id).then(res => {\r\n          setScoreInfo(res.data.data[0]);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Chunk bg={controlScore}>\r\n        <div className=\"item-name\">质控评分</div>\r\n        <div className=\"item-value\">{scoreInfo.score ?? '无数据'}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank1}>\r\n        <div className=\"item-name\">省排名</div>\r\n        <div className=\"item-value\">{scoreInfo.province_rank ?? '暂无数据'}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank1}>\r\n        <div className=\"item-name\">市排名</div>\r\n        <div className=\"item-value\">{scoreInfo.city_rank ?? '暂无数据'}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank2}>\r\n        <div className=\"item-name\">全国排名</div>\r\n        <div className=\"item-value\">{scoreInfo.country_rank ?? '暂无数据'}</div>\r\n      </Chunk>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\index.js",["639"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n  Chunk\r\n} from './style';\r\nimport {\r\n  getTimeInfoByHospitalJoined\r\n} from '@/network/controlIndex';\r\nimport register from '@/assets/imgs/medicalConsortium/register.png';\r\nimport pass from '@/assets/imgs/medicalConsortium/pass.png';\r\nimport again from '@/assets/imgs/medicalConsortium/again.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [timeInfo,setTimeInfo] = useState({});\r\n  const {grade,hospital_joined_name,hospital_name} = useSelector(state => ({\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      hospital_joined_name:state.getIn(['controlIndex','hospital_joined_name']),\r\n\r\n      hospital_name:state.getIn(['controlIndex','hospital_name']),\r\n  }),shallowEqual);\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getTimeInfoByHospitalJoined(hospital_joined_name).then(res => {\r\n          setTimeInfo(res.data.content);\r\n        })\r\n        break;\r\n      case 5:\r\n        getTimeInfoByHospitalJoined(hospital_name).then(res => {\r\n          setTimeInfo(res.data.content);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={register} className='icon' alt=\"注册时间\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">注册时间</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo.register_time === '' ? '暂无数据' : timeInfo.register_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={pass} className='icon' alt=\"通过认证时间\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">通过认证时间</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo.pass_time === '' ? '暂无数据' : timeInfo.pass_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={again} className='icon' alt=\"再认证倒计时\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">再认证倒计时</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo.again_time === '' ? '暂无数据' : timeInfo.again_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\index.js",["640"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n\r\n} from './style';\r\nimport {\r\n  getScoreListForHospitalJoined,\r\n  getScoreListForHospital\r\n} from '@/network/controlIndex';\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nexport default memo(function (){\r\n  const [data,setData] = useState({});\r\n  const {grade,hospital_joined_id,hospital_id} = useSelector(state => ({\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getScoreListForHospitalJoined(hospital_joined_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      case 5:\r\n        getScoreListForHospital(hospital_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n  useEffect(() => {\r\n    if(JSON.stringify(data) === \"{}\") return;\r\n    const option =  {\r\n      backgroundColor:'',\r\n      tooltip:{\r\n        show:true,\r\n        trigger:'axis'\r\n      },\r\n      title:{\r\n        show:true,\r\n        text:'近四月质控分数',\r\n        textStyle:{\r\n          fontSize:'16',\r\n          fontWeight:500\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['一季度', '二季度', '三季度', '四季度'],\r\n        axisTick:{\r\n          show:false\r\n        },\r\n        axisLine:{\r\n          show:false\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        axisLine:{\r\n          show:false\r\n        },\r\n        axisTick:{\r\n          show:false\r\n        }\r\n      },\r\n      series: [{\r\n        data: [25,60,42,56],\r\n        type: 'line',\r\n        areaStyle: {},\r\n        smooth:0.3,\r\n        itemStyle:{\r\n          normal:{\r\n            color:new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: \"#4A75D6\" },\r\n              { offset: 0.5, color: \"rgba(58, 167, 255,0.4)\" },\r\n              { offset: 1, color: \"rgba(58, 167, 255,0)\" }\r\n            ])\r\n          }\r\n        }\r\n      }]\r\n    };\r\n    option.xAxis.data = data.x_list;\r\n    option.series[0].data = data.y_list;\r\n    const compChart = echarts.init(document.getElementById('chart'));\r\n    compChart.setOption(option);\r\n  },[data]);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div id=\"chart\">\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\index.js",["641"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getMonth6ByOrg,\r\n  getMonth6ByHospital\r\n} from '@/network/controlIndex';\r\nimport { Progress } from 'antd';\r\n\r\nimport total from '@/assets/imgs/medicalConsortium/total.png'\r\nimport up from '@/assets/imgs/medicalConsortium/up.png'\r\nimport recent from '@/assets/imgs/medicalConsortium/recent.png'\r\n\r\nexport default memo(function (){\r\n  const [data,setData] = useState({});\r\n  const colorList= ['#60c2e2','#284df3','#6034db','#c138ea','#60c2e2','#284df3'];\r\n  const {grade,hospital_joined_id,hospital_id} = useSelector(state => ({\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getMonth6ByOrg(hospital_joined_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      case 5:\r\n        getMonth6ByHospital(hospital_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">近六月填报趋势</div>\r\n      <div className=\"progress-list\">\r\n        {\r\n          data.recent_month && data.recent_month.map((item,index) => {\r\n            return <div className='progress' key={index}>\r\n              <div className='progress-month'>{item.name}</div>\r\n              <Progress percent={item.count} size=\"small\"\r\n                        format={percent => percent}\r\n                        strokeWidth={'20px'}\r\n                        strokeColor={colorList[index]}/>\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"total\">\r\n        <img src={total} alt=\"累计填报量\"/>\r\n        <div className='text'>累计填报量</div>\r\n        <div className=\"count\">{data.all_count}</div>\r\n        <img src={up} alt=\"上升\"/>\r\n      </div>\r\n      <div className=\"recent\">\r\n        <div className=\"item\">\r\n          <img src={recent} alt=\"今日填报量\"/>\r\n          <div className='right'>\r\n            <div className=\"right-count\">{data.today_count}</div>\r\n            <div className=\"right-text\">今日填报量</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"item\">\r\n          <img src={recent} alt=\"近六月填报量\"/>\r\n          <div className='right'>\r\n            <div className=\"right-count\">{data.recent_count}</div>\r\n            <div className=\"right-text\">近六月填报量</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\index.js",["642"],"import React,{memo,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  Modal,\r\n  message\r\n} from 'antd';\r\n\r\nimport {\r\n  removeTokenAction, removeUserAction\r\n} from '@/pages/login/store/actionCreaetor';\r\nimport {\r\n  getGradeAction,\r\n  getProvinceAction,\r\n  getCityAction\r\n} from '@/pages/dataReporting/store/actionCreator'\r\nimport  {\r\n  getLogineAction\r\n} from \"@/pages/login/store/actionCreaetor\";\r\n\r\nimport setting from '@/assets/imgs/sideBar/设置.png';\r\nimport overview from '@/assets/imgs/sideBar/数据概览.png';\r\nimport index from '@/assets/imgs/sideBar/质控指标.png';\r\nimport exit from '@/assets/imgs/sideBar/退出.png';\r\n\r\nconst {confirm} = Modal\r\n\r\nexport default memo(function DataHeader(){\r\n  const data = [\r\n    {\r\n\r\n      title:'数据概览',\r\n      path:'/',\r\n      img:setting\r\n    },\r\n    {\r\n\r\n      title:'质控指标',\r\n      path:'/controlindex',\r\n      img: overview\r\n    },\r\n    {\r\n\r\n      title:'设置',\r\n      path:'/controlindex',\r\n      img: index\r\n    },\r\n    {\r\n\r\n      title:'退出登录',\r\n      path:'/logout',\r\n      img: exit\r\n    }\r\n  ];\r\n  const [state,setState] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const onClick = path => {\r\n    if(path === '/logout'){\r\n      confirm({\r\n        icon: '',\r\n        content: '确认退出当前账号吗',\r\n        onOk(){\r\n          logout();\r\n        },\r\n        okText:'确认',\r\n        cancelText:'取消'\r\n      });\r\n      return false;\r\n    }\r\n    history.push(path);\r\n  };\r\n\r\n  const logout = () => {\r\n      message.success('退出登录成功')\r\n      history.push('/login');\r\n      dispatch(removeTokenAction());\r\n      dispatch(removeUserAction());\r\n      dispatch(getGradeAction(1));\r\n      dispatch(getProvinceAction(''));\r\n      dispatch(getCityAction(''));\r\n\r\n  }\r\n\r\n  return (\r\n    <Wrapper state={state}>\r\n      {\r\n        <div className=\"views\">\r\n          {\r\n            data.map((item,index) => {\r\n              return (\r\n                <div className=\"view\" onClick={() => onClick(item.path)} key={index}>\r\n                  <img src={item.img} alt={item.title} />\r\n                  <div className=\"text\">{item.title}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      }\r\n      <div className=\"close\" onClick={() => setState(!state)}>\r\n        {!state ?  <span className=\"iconfont icon-gengduo\" /> : <span className=\"iconfont icon-xiangzuo\" />}\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\loading\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\loading\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\reportHeader\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\reportHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\c-pages\\right\\index.js",["643","644"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {jsPDF} from 'jspdf';\r\nimport html2canvas from  'html2canvas';\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\nimport {Wrapper} from './style';\r\nexport default memo(function(){\r\n  const columns = [\r\n    {\r\n      title: '指标名称',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: '达标数量',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n    },\r\n    {\r\n      title: '去年同期达标数量',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: '去年同期占比',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n      render: tags => (\r\n        <>\r\n          {tags.map(tag => {\r\n            let color = tag.length > 5 ? 'geekblue' : 'green';\r\n            if (tag === 'loser') {\r\n              color = 'volcano';\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: '是否达标',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Invite {record.name}</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: '1',\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n      tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n      tags: ['loser'],\r\n    },\r\n    {\r\n      key: '3',\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n      tags: ['cool', 'teacher'],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n\r\n      const PDF = new jsPDF();\r\n      const body = document.querySelector('#wrapper');\r\n      html2canvas(body, {\r\n        // allowTaint: true\r\n        allowTaint: true,\r\n        taintTest: false,\r\n\r\n      }).then(function (canvas1) {\r\n        let contentWidth = canvas1.width\r\n        let contentHeight = canvas1.height\r\n\r\n        var pageData = canvas1.toDataURL('image/jpeg', 1.0);\r\n        console.log(contentWidth,contentHeight)\r\n\r\n\r\n          PDF.addImage(pageData, 'JPEG', 0, 0, contentWidth, contentHeight)\r\n\r\n        PDF.save('a.pdf')\r\n      })\r\n\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n     <div id=\"wrapper\">\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n       <Table columns={columns} dataSource={data} />\r\n     </div>\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\QualityControlReport\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\back\\index.js",["645"],"import React,{memo} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\n\r\nimport {\r\n  getGradeAction,\r\n  getProvinceAction,\r\n  getCityAction\r\n} from \"@/pages/controlIndex/store/actionCreator\";\r\n\r\n\r\n\r\nexport default memo(function DataHeader(){\r\n  const dispatch = useDispatch();\r\n  const {user} = useSelector(state => ({\r\n    user:state.getIn(['user','user']),\r\n  }));\r\n  const back = () => {\r\n    const {user_role,province,city} = user;\r\n    console.log(user_role)\r\n    switch (user_role){\r\n      case 1:\r\n        dispatch(getGradeAction(1));\r\n        break;\r\n      case 2:\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getProvinceAction(province));\r\n        break;\r\n      case 3:\r\n        dispatch(getGradeAction(3));\r\n        dispatch(getCityAction(city));\r\n        break;\r\n    }\r\n    // dispatch(getGradeAction(1));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div onClick={() => back()}>返回</div>\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\back\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\c-coms\\date\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\c-coms\\date\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\common\\authentication\\index.js",["646","647"],"import React,{memo,useEffect} from 'react';\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {\r\n  getLoginAction,\r\n  getTokenAction,\r\n  getUserAction\r\n} from '@/pages/login/store/actionCreaetor';\r\nimport {\r\n  getGradeAction,\r\n  getProvinceAction,\r\n  getCityAction\r\n} from '@/pages/dataReporting/store/actionCreator';\r\n\r\nimport {\r\n  getGradeAction as getGradeAction2,\r\n  getProvinceAction as getProvinceAction2,\r\n  getCityAction as getCityAction2\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\n\r\n/*\r\n* 自定义组件 用在在每个一级路由对于组件里，判断是否登录，否则跳转登录页面\r\n* */\r\n\r\nexport default memo(function Auth(){\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const {login} = useSelector(state => ({\r\n    login:state.getIn(['user','login'])\r\n  }))\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (login){ // 已鉴权过，不在鉴权\r\n      return false;\r\n    }\r\n\r\n    if(token){\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      dispatch(getGradeAction(user.user_role));\r\n      dispatch(getGradeAction2(user.user_role));\r\n      switch (user.user_role){\r\n        case 1:\r\n          dispatch(getLoginAction(true))\r\n          // dispatch(getGradeAction(1));\r\n          // dispatch(getGradeAction2(1));\r\n          break;\r\n        case 2:\r\n          dispatch(getProvinceAction(user.province));\r\n          dispatch(getProvinceAction2(user.province));\r\n          break;\r\n        case 3:\r\n          dispatch(getProvinceAction(user.province));\r\n          dispatch(getProvinceAction2(user.province));\r\n          dispatch(getCityAction(user.city));\r\n          dispatch(getCityAction2(user.city));\r\n          break;\r\n      }\r\n\r\n      dispatch(getUserAction(user));\r\n      dispatch(getTokenAction(token));\r\n      dispatch(getLoginAction(true))  // 鉴权成功\r\n\r\n    }else{\r\n      history.push('/login');\r\n    }\r\n  },[dispatch])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginHeader\\loginHeader.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginBody\\body.js",["648","649","650","651","652","653"],"import React,{memo,useState,useEffect,useRef} from 'react';\r\nimport {useHistory} from \"react-router\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Checkbox\r\n} from 'antd';\r\n\r\nimport {\r\n  loginByRegionAccount\r\n} from '@/network/login';\r\n\r\nimport {\r\n  getTokenAction,\r\n  getUserAction\r\n} from '@/pages/login/store/actionCreaetor';\r\n\r\n\r\n\r\nexport default memo(function DataHeader(){\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n\r\n  // const {account} = useSelector(state => {\r\n  //   return {\r\n  //     account:state.getIn(['user','account']),\r\n  //\r\n  //   }\r\n  // },shallowEqual);\r\n\r\n\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 10, span: 16 },\r\n  };\r\n\r\n  const [username,setUserName] = useState('testsuzhou');\r\n  const [password,setPassword] = useState('admin123456');\r\n  const [remember,setRemember] = useState(true)\r\n\r\n  // useEffect(() => {\r\n  //     const username = localStorage.getItem('username');\r\n  //     const password = localStorage.getItem('password');\r\n  //     setUserName(username)\r\n  //     setPassword(password)\r\n  // },[]);\r\n  //\r\n  //\r\n  // useEffect(() => {\r\n  //   usernameRef.current.input.value = username;\r\n  // },[username]);\r\n  // useEffect(() => {\r\n  //   passwordRef.current.input.value = password;\r\n  // },[password]);\r\n\r\n\r\n  const submit = () => {\r\n     if(username && password){\r\n       loginByRegionAccount(username,password).then(res => {\r\n          const data = res.data;\r\n          switch (data.code){\r\n            case 101:\r\n              message.warn(data.message)\r\n              break;\r\n            case 200: //  登录成功\r\n              dispatch(getTokenAction(data.data.token));  // redux存储token\r\n              dispatch(getUserAction(data.data)); // redux存储用户信息\r\n              // localStorage.setItem('username',username);\r\n              // localStorage.setItem('password',password);\r\n              // remember && dispatch(getAccountAction({username,password}))\r\n              message.success(data.message);\r\n              history.push('/');\r\n          }\r\n       })\r\n     }\r\n  };\r\n\r\n\r\n\r\n\r\n  const change1 = e => {\r\n    setUserName(e.target.value);\r\n  }\r\n  const change2 = e => {\r\n    setPassword(e.target.value);\r\n  }\r\n  const changeRem = () => {\r\n    setRemember(!remember)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"form\">\r\n        <div className='title'>账号登录</div>\r\n        <Form>\r\n          <Form.Item label=\"账号\" name=\"username\"  colon={false}  rules={[{ required: true, message: '请输入密码' }]}>\r\n            <Input  allowClear  size='large'  ref={usernameRef} placeholder='请输入账户' onChange={(e) => {change1(e)}} />\r\n          </Form.Item>\r\n          <Form.Item label=\"密码\" name=\"password\"  colon={false}  rules={[{ required: true, message: '请输入账号' }]}>\r\n            <Input.Password size='large' ref={passwordRef} placeholder='请输入密码' onChange={(e) => {change2(e)}} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {/*<Checkbox checked={remember} onChange={() => changeRem()}>记住密码</Checkbox>*/}\r\n            <span className='forget-psd'>忘记密码</span>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" size='large'  htmlType='submit' onClick={() => submit()}>\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\login\\c-coms\\loginBody\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\login.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\login\\store\\actionCreaetor.js",[],{"ruleId":"654","replacedBy":"655"},{"ruleId":"656","replacedBy":"657"},{"ruleId":"658","severity":1,"message":"659","line":4,"column":3,"nodeType":"660","messageId":"661","endLine":4,"endColumn":17},{"ruleId":"658","severity":1,"message":"662","line":5,"column":3,"nodeType":"660","messageId":"661","endLine":5,"endColumn":16},{"ruleId":"658","severity":1,"message":"663","line":7,"column":9,"nodeType":"660","messageId":"661","endLine":7,"endColumn":20},{"ruleId":"658","severity":1,"message":"664","line":8,"column":9,"nodeType":"660","messageId":"661","endLine":8,"endColumn":19},{"ruleId":"658","severity":1,"message":"665","line":1,"column":20,"nodeType":"660","messageId":"661","endLine":1,"endColumn":29},{"ruleId":"658","severity":1,"message":"663","line":2,"column":9,"nodeType":"660","messageId":"661","endLine":2,"endColumn":20},{"ruleId":"658","severity":1,"message":"666","line":4,"column":9,"nodeType":"660","messageId":"661","endLine":4,"endColumn":14},{"ruleId":"658","severity":1,"message":"667","line":5,"column":8,"nodeType":"660","messageId":"661","endLine":5,"endColumn":19},{"ruleId":"658","severity":1,"message":"668","line":46,"column":43,"nodeType":"660","messageId":"661","endLine":46,"endColumn":48},{"ruleId":"669","severity":1,"message":"670","line":60,"column":7,"nodeType":"671","messageId":"672","endLine":86,"endColumn":8},{"ruleId":"673","severity":1,"message":"674","line":71,"column":15,"nodeType":"660","messageId":"675","endLine":71,"endColumn":28},{"ruleId":"673","severity":1,"message":"676","line":75,"column":15,"nodeType":"660","messageId":"675","endLine":75,"endColumn":31},{"ruleId":"677","severity":1,"message":"678","line":87,"column":7,"nodeType":"679","endLine":87,"endColumn":19,"suggestions":"680"},{"ruleId":"677","severity":1,"message":"681","line":181,"column":7,"nodeType":"679","endLine":181,"endColumn":13,"suggestions":"682"},{"ruleId":"669","severity":1,"message":"670","line":21,"column":5,"nodeType":"671","messageId":"672","endLine":30,"endColumn":6},{"ruleId":"677","severity":1,"message":"683","line":172,"column":5,"nodeType":"679","endLine":172,"endColumn":14,"suggestions":"684"},{"ruleId":"658","severity":1,"message":"685","line":1,"column":20,"nodeType":"660","messageId":"661","endLine":1,"endColumn":28},{"ruleId":"658","severity":1,"message":"686","line":68,"column":9,"nodeType":"660","messageId":"661","endLine":68,"endColumn":13},{"ruleId":"677","severity":1,"message":"687","line":84,"column":5,"nodeType":"679","endLine":84,"endColumn":11,"suggestions":"688"},{"ruleId":"658","severity":1,"message":"668","line":52,"column":45,"nodeType":"660","messageId":"661","endLine":52,"endColumn":50},{"ruleId":"669","severity":1,"message":"670","line":70,"column":5,"nodeType":"671","messageId":"672","endLine":95,"endColumn":6},{"ruleId":"673","severity":1,"message":"674","line":81,"column":13,"nodeType":"660","messageId":"675","endLine":81,"endColumn":26},{"ruleId":"673","severity":1,"message":"676","line":85,"column":13,"nodeType":"660","messageId":"675","endLine":85,"endColumn":29},{"ruleId":"677","severity":1,"message":"678","line":96,"column":5,"nodeType":"679","endLine":96,"endColumn":17,"suggestions":"689"},{"ruleId":"677","severity":1,"message":"690","line":194,"column":7,"nodeType":"679","endLine":194,"endColumn":14,"suggestions":"691"},{"ruleId":"658","severity":1,"message":"692","line":5,"column":8,"nodeType":"660","messageId":"661","endLine":5,"endColumn":14},{"ruleId":"677","severity":1,"message":"690","line":70,"column":5,"nodeType":"679","endLine":70,"endColumn":22,"suggestions":"693"},{"ruleId":"694","severity":1,"message":"695","line":96,"column":32,"nodeType":"696","messageId":"697","endLine":96,"endColumn":39},{"ruleId":"658","severity":1,"message":"698","line":4,"column":3,"nodeType":"660","messageId":"661","endLine":4,"endColumn":7},{"ruleId":"658","severity":1,"message":"699","line":14,"column":10,"nodeType":"660","messageId":"661","endLine":14,"endColumn":21},{"ruleId":"658","severity":1,"message":"700","line":20,"column":9,"nodeType":"660","messageId":"661","endLine":20,"endColumn":16},{"ruleId":"677","severity":1,"message":"701","line":17,"column":14,"nodeType":"702","endLine":17,"endColumn":17},{"ruleId":"658","severity":1,"message":"665","line":1,"column":20,"nodeType":"660","messageId":"661","endLine":1,"endColumn":29},{"ruleId":"658","severity":1,"message":"703","line":2,"column":8,"nodeType":"660","messageId":"661","endLine":2,"endColumn":13},{"ruleId":"677","severity":1,"message":"690","line":38,"column":5,"nodeType":"679","endLine":38,"endColumn":12,"suggestions":"704"},{"ruleId":"705","severity":1,"message":"706","line":51,"column":15,"nodeType":"707","endLine":51,"endColumn":24},{"ruleId":"658","severity":1,"message":"708","line":16,"column":10,"nodeType":"660","messageId":"661","endLine":16,"endColumn":19},{"ruleId":"677","severity":1,"message":"709","line":52,"column":5,"nodeType":"679","endLine":52,"endColumn":12,"suggestions":"710"},{"ruleId":"694","severity":1,"message":"695","line":77,"column":31,"nodeType":"696","messageId":"697","endLine":77,"endColumn":38},{"ruleId":"677","severity":1,"message":"711","line":206,"column":5,"nodeType":"679","endLine":206,"endColumn":7,"suggestions":"712"},{"ruleId":"677","severity":1,"message":"713","line":217,"column":5,"nodeType":"679","endLine":217,"endColumn":14,"suggestions":"714"},{"ruleId":"658","severity":1,"message":"665","line":1,"column":20,"nodeType":"660","messageId":"661","endLine":1,"endColumn":29},{"ruleId":"658","severity":1,"message":"715","line":3,"column":9,"nodeType":"660","messageId":"661","endLine":3,"endColumn":20},{"ruleId":"677","severity":1,"message":"716","line":35,"column":5,"nodeType":"679","endLine":35,"endColumn":7,"suggestions":"717"},{"ruleId":"658","severity":1,"message":"718","line":12,"column":16,"nodeType":"660","messageId":"661","endLine":12,"endColumn":19},{"ruleId":"658","severity":1,"message":"719","line":21,"column":10,"nodeType":"660","messageId":"661","endLine":21,"endColumn":20},{"ruleId":"654","replacedBy":"720"},{"ruleId":"656","replacedBy":"721"},{"ruleId":"722","severity":1,"message":"723","line":1,"column":22,"nodeType":"724","messageId":"725","endLine":1,"endColumn":50,"fix":"726"},{"ruleId":"722","severity":1,"message":"727","line":1,"column":51,"nodeType":"724","messageId":"725","endLine":1,"endColumn":81,"fix":"728"},{"ruleId":"658","severity":1,"message":"729","line":27,"column":30,"nodeType":"660","messageId":"661","endLine":27,"endColumn":34},{"ruleId":"677","severity":1,"message":"709","line":61,"column":5,"nodeType":"679","endLine":61,"endColumn":12,"suggestions":"730"},{"ruleId":"658","severity":1,"message":"731","line":4,"column":8,"nodeType":"660","messageId":"661","endLine":4,"endColumn":22},{"ruleId":"658","severity":1,"message":"732","line":20,"column":9,"nodeType":"660","messageId":"661","endLine":20,"endColumn":25},{"ruleId":"669","severity":1,"message":"670","line":49,"column":5,"nodeType":"671","messageId":"672","endLine":73,"endColumn":6},{"ruleId":"673","severity":1,"message":"674","line":60,"column":13,"nodeType":"660","messageId":"675","endLine":60,"endColumn":26},{"ruleId":"673","severity":1,"message":"676","line":64,"column":13,"nodeType":"660","messageId":"675","endLine":64,"endColumn":29},{"ruleId":"677","severity":1,"message":"733","line":74,"column":7,"nodeType":"679","endLine":74,"endColumn":19,"suggestions":"734"},{"ruleId":"658","severity":1,"message":"665","line":1,"column":20,"nodeType":"660","messageId":"661","endLine":1,"endColumn":29},{"ruleId":"677","severity":1,"message":"735","line":24,"column":5,"nodeType":"679","endLine":24,"endColumn":12,"suggestions":"736"},{"ruleId":"658","severity":1,"message":"737","line":21,"column":3,"nodeType":"660","messageId":"661","endLine":21,"endColumn":39},{"ruleId":"677","severity":1,"message":"738","line":73,"column":5,"nodeType":"679","endLine":73,"endColumn":18,"suggestions":"739"},{"ruleId":"677","severity":1,"message":"740","line":152,"column":5,"nodeType":"679","endLine":152,"endColumn":23,"suggestions":"741"},{"ruleId":"677","severity":1,"message":"742","line":56,"column":5,"nodeType":"679","endLine":56,"endColumn":12,"suggestions":"743"},{"ruleId":"744","severity":1,"message":"745","line":95,"column":93,"nodeType":"746","messageId":"747","endLine":95,"endColumn":95},{"ruleId":"744","severity":1,"message":"745","line":104,"column":80,"nodeType":"746","messageId":"747","endLine":104,"endColumn":82},{"ruleId":"677","severity":1,"message":"748","line":41,"column":5,"nodeType":"679","endLine":41,"endColumn":12,"suggestions":"749"},{"ruleId":"677","severity":1,"message":"750","line":37,"column":5,"nodeType":"679","endLine":37,"endColumn":12,"suggestions":"751"},{"ruleId":"677","severity":1,"message":"752","line":36,"column":5,"nodeType":"679","endLine":36,"endColumn":12,"suggestions":"753"},{"ruleId":"677","severity":1,"message":"752","line":39,"column":5,"nodeType":"679","endLine":39,"endColumn":12,"suggestions":"754"},{"ruleId":"658","severity":1,"message":"755","line":22,"column":3,"nodeType":"660","messageId":"661","endLine":22,"endColumn":18},{"ruleId":"756","severity":1,"message":"757","line":50,"column":11,"nodeType":"707","endLine":50,"endColumn":14},{"ruleId":"756","severity":1,"message":"757","line":51,"column":11,"nodeType":"707","endLine":51,"endColumn":14},{"ruleId":"669","severity":1,"message":"670","line":24,"column":5,"nodeType":"671","messageId":"672","endLine":36,"endColumn":6},{"ruleId":"669","severity":1,"message":"670","line":46,"column":7,"nodeType":"671","messageId":"672","endLine":62,"endColumn":8},{"ruleId":"677","severity":1,"message":"758","line":71,"column":5,"nodeType":"679","endLine":71,"endColumn":15,"suggestions":"759"},{"ruleId":"658","severity":1,"message":"665","line":1,"column":29,"nodeType":"660","messageId":"661","endLine":1,"endColumn":38},{"ruleId":"658","severity":1,"message":"760","line":3,"column":9,"nodeType":"660","messageId":"661","endLine":3,"endColumn":21},{"ruleId":"658","severity":1,"message":"761","line":3,"column":36,"nodeType":"660","messageId":"661","endLine":3,"endColumn":47},{"ruleId":"658","severity":1,"message":"762","line":13,"column":3,"nodeType":"660","messageId":"661","endLine":13,"endColumn":11},{"ruleId":"669","severity":1,"message":"670","line":70,"column":11,"nodeType":"671","messageId":"672","endLine":82,"endColumn":12},{"ruleId":"658","severity":1,"message":"763","line":96,"column":9,"nodeType":"660","messageId":"661","endLine":96,"endColumn":18},"no-native-reassign",["764"],"no-negated-in-lhs",["765"],"no-unused-vars","'getTokenAction' is defined but never used.","Identifier","unusedVar","'getUserAction' is defined but never used.","'useDispatch' is defined but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'jsPDF' is defined but never used.","'html2canvas' is defined but never used.","'login' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'provinceIndex' is already defined.","redeclared","'provinceAlphabet' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city', 'dispatch', 'getCityMapOpt', 'getProvinceMapOpt', 'initalMap', 'province', 'provinces', and 'provincesText'. Either include them or remove the dependency array.","ArrayExpression",["766"],"React Hook useEffect has missing dependencies: 'dispatch' and 'province'. Either include them or remove the dependency array.",["767"],"React Hook useEffect has a missing dependency: 'grade'. Either include it or remove the dependency array.",["768"],"'useState' is defined but never used.","'flag' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'option'. Either include it or remove the dependency array.",["769"],["770"],"React Hook useEffect has missing dependencies: 'city', 'dispatch', and 'province'. Either include them or remove the dependency array.",["771"],"'circle' is defined but never used.",["772"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Spin' is defined but never used.","'count_state' is assigned a value but never used.","'antIcon' is assigned a value but never used.","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'Axios' is defined but never used.",["773"],"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city' and 'province'. Either include them or remove the dependency array.",["774"],"React Hook useEffect has missing dependencies: 'city', 'grade', and 'province'. Either include them or remove the dependency array.",["775"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["776"],"'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["777"],"'end' is assigned a value but never used.","'start_time' is assigned a value but never used.",["764"],["765"],"no-useless-rename","Import dataOverview unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"778","text":"779"},"Import dataReporting unnecessarily renamed.",{"range":"780","text":"781"},"'user' is assigned a value but never used.",["782"],"'searchHospital' is defined but never used.","'getContentAction' is defined but never used.","React Hook useEffect has missing dependencies: 'city', 'getCityMapOpt', 'getProvinceMapOpt', 'initalMap', 'province', 'provinces', and 'provincesText'. Either include them or remove the dependency array.",["783"],"React Hook useEffect has missing dependencies: 'dispatch' and 'end'. Either include them or remove the dependency array.",["784"],"'getCoreRankHospitalJoinedAndProvince' is defined but never used.","React Hook useEffect has missing dependencies: 'city', 'dispatch', 'end', 'hospital_joined_id', and 'province'. Either include them or remove the dependency array.",["785"],"React Hook useEffect has missing dependencies: 'city', 'end', 'hospital_id', 'hospital_joined_id', 'province', and 'start'. Either include them or remove the dependency array.",["786"],"React Hook useEffect has missing dependencies: 'city', 'core_name', 'end', 'province', and 'start'. Either include them or remove the dependency array.",["787"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'end', 'hospital_id', 'hospital_joined_id', and 'start'. Either include them or remove the dependency array.",["788"],"React Hook useEffect has missing dependencies: 'hospital_joined_name' and 'hospital_name'. Either include them or remove the dependency array.",["789"],"React Hook useEffect has missing dependencies: 'hospital_id' and 'hospital_joined_id'. Either include them or remove the dependency array.",["790"],["791"],"'getLogineAction' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'history' and 'login'. Either include them or remove the dependency array.",["792"],"'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","'Checkbox' is defined but never used.","'changeRem' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"793","fix":"801"},{"desc":"802","fix":"803"},{"desc":"804","fix":"805"},{"desc":"802","fix":"806"},{"desc":"807","fix":"808"},{"desc":"807","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},[21,49],"dataOverview",[50,80],"dataReporting",{"desc":"807","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"829","fix":"831"},{"desc":"832","fix":"833"},"Update the dependencies array to be: [city, dispatch, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText, user]",{"range":"834","text":"835"},"Update the dependencies array to be: [city, dispatch, province]",{"range":"836","text":"837"},"Update the dependencies array to be: [content, grade]",{"range":"838","text":"839"},"Update the dependencies array to be: [data, option]",{"range":"840","text":"841"},{"range":"842","text":"835"},"Update the dependencies array to be: [city, dispatch, grade, province]",{"range":"843","text":"844"},"Update the dependencies array to be: [city, dispatch, grade, province, sub_grade]",{"range":"845","text":"846"},{"range":"847","text":"844"},"Update the dependencies array to be: [city, grade, province]",{"range":"848","text":"849"},{"range":"850","text":"849"},"Update the dependencies array to be: [Options, getOption]",{"range":"851","text":"852"},"Update the dependencies array to be: [dispatch]",{"range":"853","text":"854"},{"range":"855","text":"849"},"Update the dependencies array to be: [city, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText, user]",{"range":"856","text":"857"},"Update the dependencies array to be: [dispatch, end, start]",{"range":"858","text":"859"},"Update the dependencies array to be: [city, dispatch, end, grade, hospital_joined_id, province, start]",{"range":"860","text":"861"},"Update the dependencies array to be: [city, comp_grade, end, grade, hospital_id, hospital_joined_id, province, start]",{"range":"862","text":"863"},"Update the dependencies array to be: [city, core_name, end, grade, province, start]",{"range":"864","text":"865"},"Update the dependencies array to be: [end, grade, hospital_id, hospital_joined_id, start]",{"range":"866","text":"867"},"Update the dependencies array to be: [grade, hospital_joined_name, hospital_name]",{"range":"868","text":"869"},"Update the dependencies array to be: [grade, hospital_id, hospital_joined_id]",{"range":"870","text":"871"},{"range":"872","text":"871"},"Update the dependencies array to be: [dispatch, history, login]",{"range":"873","text":"874"},[3137,3149],"[city, dispatch, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText, user]",[5694,5700],"[city, dispatch, province]",[4346,4355],"[content, grade]",[1845,1851],"[data, option]",[3218,3230],[5764,5771],"[city, dispatch, grade, province]",[1912,1929],"[city, dispatch, grade, province, sub_grade]",[952,959],[1303,1310],"[city, grade, province]",[4814,4816],[5097,5106],"[Options, getOption]",[1004,1006],"[dispatch]",[1829,1836],[2648,2660],"[city, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText, user]",[701,708],"[dispatch, end, start]",[2676,2689],"[city, dispatch, end, grade, hospital_joined_id, province, start]",[5107,5125],"[city, comp_grade, end, grade, hospital_id, hospital_joined_id, province, start]",[1658,1665],"[city, core_name, end, grade, province, start]",[1367,1374],"[end, grade, hospital_id, hospital_joined_id, start]",[1204,1211],"[grade, hospital_joined_name, hospital_name]",[1020,1027],"[grade, hospital_id, hospital_joined_id]",[1244,1251],[1903,1913],"[dispatch, history, login]"]