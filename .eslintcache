[{"D:\\newCode\\react\\highblood-front\\src\\index.js":"1","D:\\newCode\\react\\highblood-front\\src\\App.js":"2","D:\\newCode\\react\\highblood-front\\src\\network\\request.js":"3","D:\\newCode\\react\\highblood-front\\src\\router\\index.js":"4","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\index.js":"5","D:\\newCode\\react\\highblood-front\\src\\store\\index.js":"6","D:\\newCode\\react\\highblood-front\\src\\store\\reducer.js":"7","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\index.js":"8","D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\style.js":"9","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\index.js":"10","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\style.js":"11","D:\\newCode\\react\\highblood-front\\src\\network\\dataOverview.js":"12","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\actionCreator.js":"13","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\constants.js":"14","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\index.js":"15","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\reducer.js":"16","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\style.js":"17","D:\\newCode\\react\\highblood-front\\src\\common\\data-local.js":"18","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\style.js":"19","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\chunk.js":"20","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\histogram.js":"21","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\style.js":"22","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\index.js":"23","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\index.js":"24","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\style.js":"25","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\rank.js":"26","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\style.js":"27","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\style.js":"28","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\index.js":"29","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\style.js":"30","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\index.js":"31","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\style.js":"32","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\bing.js":"33","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\style.js":"34","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\index.js":"35","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\nextBtn.js":"36","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\style.js":"37","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\style.js":"38","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\actionCreator.js":"39","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\index.js":"40","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\index.js":"41","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\index.js":"42","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\constants.js":"43","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\style.js":"44","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\style.js":"45","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\style.js":"46","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\rank.js":"47","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\chunk.js":"48","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\style.js":"49","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\style.js":"50","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\preBtn.js":"51","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\nextBtn.js":"52","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\style.js":"53","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\style.js":"54","D:\\newCode\\react\\highblood-front\\src\\network\\dataReporting.js":"55","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\index.js":"56","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\reducer.js":"57","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\logs.js":"58","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\style.js":"59","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\state.js":"60","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\style.js":"61","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\index.js":"62","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\style.js":"63","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\index.js":"64","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\style.js":"65","D:\\newCode\\react\\highblood-front\\src\\network\\dataCharts.js":"66","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\preBtn.js":"67","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\style.js":"68","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\index.js":"69","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\style.js":"70","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\index.js":"71","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\reducer.js":"72","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\constants.js":"73","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\index.js":"74","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\style.js":"75","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\index.js":"76","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\style.js":"77","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\index.js":"78","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\style.js":"79","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\actionCreator.js":"80","D:\\newCode\\react\\highblood-front\\src\\network\\controlIndex.js":"81","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\index.js":"82","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\style.js":"83","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\index.js":"84","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\style.js":"85","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\index.js":"86","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\style.js":"87","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\index.js":"88","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\style.js":"89","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\index.js":"90","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\style.js":"91","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\index.js":"92","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\style.js":"93","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\index.js":"94","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\index.js":"95","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\style.js":"96","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\style.js":"97","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\index.js":"98","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\style.js":"99","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\index.js":"100","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\style.js":"101","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\index.js":"102","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\style.js":"103","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\index.js":"104","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\style.js":"105","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\index.js":"106","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\style.js":"107","D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\index.js":"108","D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\style.js":"109"},{"size":181,"mtime":1610796176770,"results":"110","hashOfConfig":"111"},{"size":417,"mtime":1610171238927,"results":"112","hashOfConfig":"111"},{"size":572,"mtime":1610955934316,"results":"113","hashOfConfig":"111"},{"size":570,"mtime":1610933302527,"results":"114","hashOfConfig":"111"},{"size":1142,"mtime":1611144280159,"results":"115","hashOfConfig":"111"},{"size":322,"mtime":1610171200321,"results":"116","hashOfConfig":"111"},{"size":462,"mtime":1610935607258,"results":"117","hashOfConfig":"111"},{"size":797,"mtime":1610936594660,"results":"118","hashOfConfig":"111"},{"size":411,"mtime":1610604068734,"results":"119","hashOfConfig":"111"},{"size":7476,"mtime":1610964826337,"results":"120","hashOfConfig":"111"},{"size":1120,"mtime":1610603562527,"results":"121","hashOfConfig":"111"},{"size":458,"mtime":1610448760928,"results":"122","hashOfConfig":"111"},{"size":1460,"mtime":1610935462420,"results":"123","hashOfConfig":"111"},{"size":238,"mtime":1610282306610,"results":"124","hashOfConfig":"111"},{"size":58,"mtime":1610282401054,"results":"125","hashOfConfig":"111"},{"size":699,"mtime":1610451276774,"results":"126","hashOfConfig":"111"},{"size":245,"mtime":1610603487176,"results":"127","hashOfConfig":"111"},{"size":9943,"mtime":1610444781848,"results":"128","hashOfConfig":"111"},{"size":700,"mtime":1610539907218,"results":"129","hashOfConfig":"111"},{"size":468,"mtime":1610285612566,"results":"130","hashOfConfig":"111"},{"size":4518,"mtime":1610710118273,"results":"131","hashOfConfig":"111"},{"size":224,"mtime":1610534280285,"results":"132","hashOfConfig":"111"},{"size":678,"mtime":1610607267398,"results":"133","hashOfConfig":"111"},{"size":1075,"mtime":1610606741886,"results":"134","hashOfConfig":"111"},{"size":1497,"mtime":1611191206350,"results":"135","hashOfConfig":"111"},{"size":1623,"mtime":1610793594259,"results":"136","hashOfConfig":"111"},{"size":2403,"mtime":1610793577544,"results":"137","hashOfConfig":"111"},{"size":188,"mtime":1610606685766,"results":"138","hashOfConfig":"111"},{"size":624,"mtime":1610619440122,"results":"139","hashOfConfig":"111"},{"size":208,"mtime":1610618745989,"results":"140","hashOfConfig":"111"},{"size":1075,"mtime":1610618828621,"results":"141","hashOfConfig":"111"},{"size":1507,"mtime":1611191231934,"results":"142","hashOfConfig":"111"},{"size":1742,"mtime":1610621158516,"results":"143","hashOfConfig":"111"},{"size":1077,"mtime":1610621209744,"results":"144","hashOfConfig":"111"},{"size":913,"mtime":1611191025200,"results":"145","hashOfConfig":"111"},{"size":450,"mtime":1610691487655,"results":"146","hashOfConfig":"111"},{"size":460,"mtime":1610870978468,"results":"147","hashOfConfig":"111"},{"size":245,"mtime":1610603487176,"results":"148","hashOfConfig":"111"},{"size":3538,"mtime":1610786116346,"results":"149","hashOfConfig":"111"},{"size":536,"mtime":1610767060175,"results":"150","hashOfConfig":"111"},{"size":7673,"mtime":1610868627544,"results":"151","hashOfConfig":"111"},{"size":244,"mtime":1610785280424,"results":"152","hashOfConfig":"111"},{"size":563,"mtime":1610786065228,"results":"153","hashOfConfig":"111"},{"size":1210,"mtime":1610792284548,"results":"154","hashOfConfig":"111"},{"size":188,"mtime":1610606685765,"results":"155","hashOfConfig":"111"},{"size":208,"mtime":1610618745988,"results":"156","hashOfConfig":"111"},{"size":3854,"mtime":1610792169338,"results":"157","hashOfConfig":"111"},{"size":706,"mtime":1610864398428,"results":"158","hashOfConfig":"111"},{"size":2425,"mtime":1611191266134,"results":"159","hashOfConfig":"111"},{"size":986,"mtime":1610795376591,"results":"160","hashOfConfig":"111"},{"size":496,"mtime":1610690337655,"results":"161","hashOfConfig":"111"},{"size":497,"mtime":1610863911480,"results":"162","hashOfConfig":"111"},{"size":460,"mtime":1610765893749,"results":"163","hashOfConfig":"111"},{"size":460,"mtime":1611191130273,"results":"164","hashOfConfig":"111"},{"size":1936,"mtime":1610863862053,"results":"165","hashOfConfig":"111"},{"size":58,"mtime":1610282401053,"results":"166","hashOfConfig":"111"},{"size":1235,"mtime":1610786951360,"results":"167","hashOfConfig":"111"},{"size":1861,"mtime":1610867379760,"results":"168","hashOfConfig":"111"},{"size":1572,"mtime":1611191300518,"results":"169","hashOfConfig":"111"},{"size":2464,"mtime":1610861363356,"results":"170","hashOfConfig":"111"},{"size":1266,"mtime":1611191255090,"results":"171","hashOfConfig":"111"},{"size":3324,"mtime":1610867715381,"results":"172","hashOfConfig":"111"},{"size":2292,"mtime":1611191289703,"results":"173","hashOfConfig":"111"},{"size":7218,"mtime":1611191052996,"results":"174","hashOfConfig":"111"},{"size":1084,"mtime":1610871384145,"results":"175","hashOfConfig":"111"},{"size":653,"mtime":1610955212947,"results":"176","hashOfConfig":"111"},{"size":322,"mtime":1610864136992,"results":"177","hashOfConfig":"111"},{"size":460,"mtime":1611191091910,"results":"178","hashOfConfig":"111"},{"size":901,"mtime":1611142399205,"results":"179","hashOfConfig":"111"},{"size":252,"mtime":1611143091155,"results":"180","hashOfConfig":"111"},{"size":83,"mtime":1610935580734,"results":"181","hashOfConfig":"111"},{"size":1918,"mtime":1611054529295,"results":"182","hashOfConfig":"111"},{"size":896,"mtime":1611054529294,"results":"183","hashOfConfig":"111"},{"size":1538,"mtime":1611134525205,"results":"184","hashOfConfig":"111"},{"size":509,"mtime":1611134541327,"results":"185","hashOfConfig":"111"},{"size":1012,"mtime":1610956729552,"results":"186","hashOfConfig":"111"},{"size":552,"mtime":1610957176353,"results":"187","hashOfConfig":"111"},{"size":2202,"mtime":1610968964846,"results":"188","hashOfConfig":"111"},{"size":931,"mtime":1610967885450,"results":"189","hashOfConfig":"111"},{"size":4726,"mtime":1611054607107,"results":"190","hashOfConfig":"111"},{"size":7487,"mtime":1611141244225,"results":"191","hashOfConfig":"111"},{"size":2200,"mtime":1611036960861,"results":"192","hashOfConfig":"111"},{"size":1848,"mtime":1610957278847,"results":"193","hashOfConfig":"111"},{"size":6040,"mtime":1611043814739,"results":"194","hashOfConfig":"111"},{"size":975,"mtime":1611044041986,"results":"195","hashOfConfig":"111"},{"size":779,"mtime":1611047295306,"results":"196","hashOfConfig":"111"},{"size":83,"mtime":1611133746250,"results":"197","hashOfConfig":"111"},{"size":1901,"mtime":1611047930501,"results":"198","hashOfConfig":"111"},{"size":1338,"mtime":1610967796340,"results":"199","hashOfConfig":"111"},{"size":9123,"mtime":1611141262078,"results":"200","hashOfConfig":"111"},{"size":1225,"mtime":1611143081046,"results":"201","hashOfConfig":"111"},{"size":4797,"mtime":1611124391670,"results":"202","hashOfConfig":"111"},{"size":1373,"mtime":1611043203838,"results":"203","hashOfConfig":"111"},{"size":461,"mtime":1611129734364,"results":"204","hashOfConfig":"111"},{"size":1337,"mtime":1611134118292,"results":"205","hashOfConfig":"111"},{"size":174,"mtime":1611134118293,"results":"206","hashOfConfig":"111"},{"size":181,"mtime":1611129058127,"results":"207","hashOfConfig":"111"},{"size":2127,"mtime":1611123565294,"results":"208","hashOfConfig":"111"},{"size":541,"mtime":1611133852856,"results":"209","hashOfConfig":"111"},{"size":2489,"mtime":1611140957592,"results":"210","hashOfConfig":"111"},{"size":1242,"mtime":1611127758552,"results":"211","hashOfConfig":"111"},{"size":2554,"mtime":1611129293247,"results":"212","hashOfConfig":"111"},{"size":343,"mtime":1611133529687,"results":"213","hashOfConfig":"111"},{"size":2753,"mtime":1611133114303,"results":"214","hashOfConfig":"111"},{"size":1631,"mtime":1611133490986,"results":"215","hashOfConfig":"111"},{"size":2220,"mtime":1611141500631,"results":"216","hashOfConfig":"111"},{"size":1949,"mtime":1611141526125,"results":"217","hashOfConfig":"111"},{"size":1604,"mtime":1611144404884,"results":"218","hashOfConfig":"111"},{"size":1039,"mtime":1611144394509,"results":"219","hashOfConfig":"111"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},"cjbyr8",{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"222"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"222"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"222"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"222"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"222"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"222"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"222"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"222"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"222"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"222"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"222"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"222"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"222"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"222"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"222"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"222"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"222"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"222"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"401","usedDeprecatedRules":"222"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"222"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"222"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"222"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"222"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"222"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"222"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"222"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"222"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"222"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"222"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"222"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"222"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},"D:\\newCode\\react\\highblood-front\\src\\index.js",[],["470","471"],"D:\\newCode\\react\\highblood-front\\src\\App.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\request.js",[],"D:\\newCode\\react\\highblood-front\\src\\router\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\dataHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\index.js",["472","473","474","475","476"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual, useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport china from '@/assets/json/china.json';\r\nimport icon1 from '@/assets/imgs/dataOverview/1.png';\r\nimport icon2 from '@/assets/imgs/dataOverview/2.png';\r\nimport icon3 from '@/assets/imgs/dataOverview/3.png';\r\nimport {cityMap} from '@/common/data-local.js'\r\n// import bmap from 'echarts/extension/bmap/bmap';\r\n\r\n\r\nimport {\r\n  getContentAction,\r\n  getContentByProvinceAction,\r\n  getContentByCityAction,\r\n} from '@/pages/dataOverview/store/actionCreator';\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n} from '@/pages/dataReporting/store/actionCreator'\r\nimport {\r\n  BotWrapper,\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\nimport Chunk from './components/chunk/chunk';\r\nimport Histogram from './components/histogram/histogram';\r\n\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\n  export default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n    const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {content,province,city,grade} = useSelector(state => {\r\n    return {\r\n      content:state.getIn(['dataOverview','content']),\r\n      province:state.getIn(['dataReporting','province']),\r\n      city:state.getIn(['dataReporting','city']),\r\n      grade:state.getIn(['dataReporting','grade']),\r\n    }\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n      switch (grade){\r\n        case 2:\r\n          var provinceIndex = provincesText.findIndex(x => {\r\n            return province === x\r\n          });\r\n          if (provinceIndex === -1) return;\r\n          var provinceAlphabet = provinces[provinceIndex];\r\n          setProvinceAlphabet(provinceAlphabet);\r\n\r\n          getProvinceMapOpt(provinceAlphabet,province);\r\n          break;\r\n        case 3:\r\n          var provinceIndex = provincesText.findIndex(x => {\r\n            return province === x\r\n          });\r\n          if (provinceIndex === -1) return;\r\n          var provinceAlphabet = provinces[provinceIndex];\r\n          setProvinceAlphabet(provinceAlphabet);\r\n          getCityMapOpt(city);\r\n          break;\r\n        default:\r\n          initalMap();\r\n          break;\r\n      }\r\n    },[]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#5784E8', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n\r\n      map.setOption(option,true);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n\r\n      map.off('click');\r\n\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getContentByProvinceAction(provinceName)); // 改变当前数据\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n  }\r\n\r\n  useEffect(() => { // 监听 city 改变\r\n    city && dispatch(getContentByCityAction(province,city));\r\n  },[city]);\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getContentAction());\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div className='chunks'>\r\n            <Chunk count={content.sum_pass_unit} text='通过认证医联体' logo={icon1} />\r\n            <Chunk count={content.sum_pass_hospital} text='通过认证医院总数' logo={icon2} />\r\n            <Chunk count={content.sum_register_hospital} text='注册医院总数' logo={icon3} />\r\n          </div>\r\n          <div id=\"map\">\r\n          </div>\r\n          {grade > 1 && <div className=\"back\" onClick={() => {back()}}>返回</div> }\r\n        </TopWrapper>\r\n        <BotWrapper>\r\n          <Histogram/>\r\n       </BotWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataOverview.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\actionCreator.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\common\\data-local.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\chunk\\chunk.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\histogram.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\center\\components\\histogram\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\index.js",["477"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {\r\n  Wrapper,\r\n  InfoList\r\n} from './style';\r\n\r\nimport {\r\n  StandardAndSmartVersion\r\n} from '@/common/data-local';\r\nimport buildingIcon from '@/assets/imgs/dataOverview/bulding.png';\r\nimport passedIcon from '@/assets/imgs/dataOverview/passed.png';\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const {data} = props;\r\n  return (\r\n   <Wrapper>\r\n     <div className=\"title\">标准版认证情况</div>\r\n     <div className=\"hover\" />\r\n     <InfoList>\r\n       <div className=\"info-list\">\r\n         {\r\n           data.map((item,index) => {\r\n             return (\r\n               <div className='info-item' key={index}>\r\n                 <div className='title'>\r\n                   <img src={index %2 === 0 ? passedIcon :buildingIcon } alt='建设中' />\r\n                   {StandardAndSmartVersion[index]}\r\n                 </div>\r\n                 <div className='count'><span>{item}</span>家</div>\r\n               </div>\r\n             )\r\n           })\r\n         }\r\n       </div>\r\n     </InfoList>\r\n   </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\normal\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\rank.js",["478"],"import React,{memo,useEffect,useState} from 'react';\r\n\r\nimport { Progress } from 'antd'\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\n\r\n\r\nexport default memo(function (props){\r\n  const [state,setState] = useState(0);\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  let data = [];\r\n  let {province,city} = props;\r\n\r\n\r\n\r\n  data = state ? city : province || [];\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">通过认证数量排名</div>\r\n      <div className=\"hover\" />\r\n      <div className=\"list\">\r\n        {\r\n          data.map((item,index) => {\r\n            return (\r\n              <div className='item' key={item.province}>\r\n                <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.province}</div>\r\n                <div className=\"item-progress\">\r\n                  <Progress percent={item.num}\r\n                            status={\"active\"}\r\n                            strokeColor={{\r\n                              to:'#0477D5',\r\n                              from:'#01D9FE'\r\n                            }}\r\n                            trailColor='#193F80'\r\n                            showInfo={false}\r\n                  />\r\n                  <div className=\"score\">{item.num}</div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"option\">\r\n        <div className={!state ? 'active' : ''} onClick={() => {setState(0)}}>省</div>\r\n        <div className={state ? 'active' : ''} onClick={() => {setState(1)}}>市</div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\index.js",["479"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {\r\n  Wrapper,\r\n  InfoList\r\n} from './style';\r\n\r\nimport {\r\n  StandardAndSmartVersion\r\n} from '@/common/data-local';\r\nimport buildingIcon from '@/assets/imgs/dataOverview/bulding.png';\r\nimport passedIcon from '@/assets/imgs/dataOverview/passed.png';\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const {data} = props;\r\n  return (\r\n   <Wrapper>\r\n     <div className=\"title\">智享版认证情况</div>\r\n     <div className=\"hover\" />\r\n     <InfoList>\r\n       <div className=\"info-list\">\r\n         {\r\n           data.map((item,index) => {\r\n             return (\r\n               <div className='info-item' key={index}>\r\n                 <div className='title'>\r\n                   <img src={index %2 === 0 ? passedIcon :buildingIcon } alt='建设中' />\r\n                   {StandardAndSmartVersion[index]}\r\n                 </div>\r\n                 <div className='count'><span>{item}</span>家</div>\r\n               </div>\r\n             )\r\n           })\r\n         }\r\n       </div>\r\n     </InfoList>\r\n   </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\normal\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\bing.js",["480"],"import React,{memo,useEffect,useState} from 'react';\r\n\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  const {data} = props;\r\n\r\n  useEffect(() => {\r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)',\r\n\r\n      },\r\n      legend: {\r\n        bottom:-20,\r\n        y:'bottom',\r\n        textStyle:{\r\n          fontSize:20,\r\n          color:'#fff'\r\n        }\r\n\r\n      },\r\n      color:['#1792E6','#94D4FF','#2B71FF'],\r\n      series: [\r\n        {\r\n          name: '医院分类',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          avoidLabelOverlap: false,\r\n          label: {\r\n            normal:{\r\n              position:'outer',\r\n              formatter:'{d}%',\r\n              fontSize: 18,\r\n              color:'#01C4F7'\r\n            },\r\n\r\n          },\r\n          labelLine: {\r\n            show: true\r\n          },\r\n          data: [\r\n            {value: 465, name: '一级医院'},\r\n            {value: 1465, name: '二级医院'},\r\n            {value: 165, name: '三级医院'},\r\n          ]\r\n        }\r\n      ],\r\n      textStyle:{\r\n        color:'#01C4F7'\r\n      }\r\n    }\r\n    let chart = echarts.init(document.getElementById('pie'));\r\n\r\n    if(data){\r\n      for(let i in data){   // 获取数据后改变options\r\n        option.series[0].data[i].value = data[i].y;\r\n        option.series[0].data[i].name = data[i].x;\r\n      }\r\n    }\r\n\r\n    chart.setOption(option);\r\n  },[data])\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">注册医院分类统计</div>\r\n      <div className=\"hover\" />\r\n      <div id=\"pie\"  style={{'width':'100%','height':'60vh'}} />\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-pages\\right\\components\\bing\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\index.js",["481","482"],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\nextBtn.js",["483"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {useLocation,useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n\r\n  const navTo = () =>{\r\n    const path = location.pathname;\r\n    if(path === '/'){\r\n      history.push('/dataReporting')\r\n    }\r\n  }\r\n  return <Wrapper onClick={() => {navTo()}} />\r\n\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataOverview\\c-coms\\nextBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\actionCreator.js",["484"],"import * as actionTypes from './constants';\r\n\r\nimport {\r\n  getCount,\r\n  getCountByProvince,\r\n  getCountByCity,\r\n  getLogs,\r\n  getLogsByProvince,\r\n  getLogsByCity,\r\n  getScoreList,\r\n  getScoreListByProvince,\r\n  getScoreListByCity\r\n} from \"@/network/dataReporting\";\r\nimport {log} from \"echarts/lib/util/log\";\r\n\r\nconst changeCountAction = (all_count) => ({\r\n  type:actionTypes.CHANGE_COUNT,\r\n  all_count\r\n})\r\n\r\nexport const getCountAction = () => {\r\n  return dispatch => {\r\n    getCount().then(res => {\r\n      dispatch(changeCountAction(res.data.data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCountByProvinceAction = (province) => {\r\n  return dispatch => {\r\n    getCountByProvince(province).then(res => {\r\n      dispatch(changeCountAction(res.data.data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const getCountByCityAction = (city) => {\r\n  return dispatch => {\r\n    getCountByCity(city).then(res => {\r\n      dispatch(changeCountAction(res.data.data));\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeProvinceAction = (province) => ({\r\n  type:actionTypes.CHANGE_PROVINCE,\r\n  province,\r\n})\r\n\r\nexport const getProvinceAction = (province) => {\r\n  return dispatch => {\r\n    dispatch(changeProvinceAction(province));\r\n  }\r\n}\r\n\r\nexport const changCityAction = (city) => ({\r\n  type:actionTypes.CHANGE_CITY,\r\n  city,\r\n})\r\n\r\nexport const getCityAction = (city) => {\r\n  return dispatch => {\r\n    dispatch(changCityAction(city));\r\n  }\r\n}\r\n\r\nexport const changGradeAction = (grade) => ({\r\n  type:actionTypes.CHANGE_GRADE,\r\n  grade,\r\n})\r\n\r\nexport const getGradeAction = (grade) => {\r\n  return dispatch => {\r\n    dispatch(changGradeAction(grade));\r\n  }\r\n}\r\n\r\nexport const changLogsAction = (logs) => ({\r\n  type:actionTypes.CHANGE_LOGS,\r\n  logs,\r\n})\r\n\r\nexport const getLogsAction = () => {\r\n  return dispatch => {\r\n    getLogs().then(res => {\r\n      dispatch(changLogsAction(res.data.data))\r\n    })\r\n  }\r\n}\r\nexport const getLogsByProvinceAction = (province) => {\r\n  return dispatch => {\r\n    getLogsByProvince(province).then(res => {\r\n      dispatch(changLogsAction(res.data.data))\r\n    })\r\n  }\r\n}\r\nexport const getLogsByCityAction = (city) => {\r\n  return dispatch => {\r\n    getLogsByCity(city).then(res => {\r\n      dispatch(changLogsAction(res.data.data))\r\n    })\r\n  }\r\n}\r\nexport const changScoreListAction = (score_list) => ({\r\n  type:actionTypes.CHANGE_SCORE_LIST,\r\n  score_list,\r\n})\r\n\r\n\r\nexport const getScoreListAction = (area_type,data_type) => {\r\n  return dispatch => {\r\n    getScoreList(area_type,data_type).then(res => {\r\n      dispatch(changScoreListAction(res.data.data))\r\n    })\r\n  }\r\n}\r\nexport const getScoreListByProvinceAction = (area_type,data_type,province) => {\r\n  return dispatch => {\r\n    getScoreListByProvince(area_type,data_type,province).then(res => {\r\n      dispatch(changScoreListAction(res.data.data))\r\n    })\r\n  }\r\n}\r\nexport const getScoreListByCityAction = (area_type,data_type,city) => {\r\n  return dispatch => {\r\n    getScoreListByCity(area_type,data_type,city).then(res => {\r\n      dispatch(changScoreListAction(res.data.data))\r\n    })\r\n  }\r\n}\r\n\r\nexport const changSubGradeAction = (sub_grade) => ({\r\n  type:actionTypes.CHANGE_SUB_GRADE,\r\n  sub_grade,\r\n})\r\nexport const getSubGradeAction = (sub_grade) => {\r\n  return dispatch => {\r\n    dispatch(changSubGradeAction(sub_grade))\r\n  }\r\n}\r\n\r\nexport const changRankStateAction = (rank_state) => ({\r\n  type:actionTypes.CHANGE_RANK_STATE,\r\n  rank_state,\r\n})\r\n\r\nexport const getRankStatAction = (rank_state) => {\r\n  return dispatch => {\r\n    dispatch(changRankStateAction(rank_state))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\index.js",["485","486","487","488"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual, useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nimport china from '@/assets/json/china.json';\r\nimport icon1 from '@/assets/imgs/dataOverview/1.png';\r\nimport icon2 from '@/assets/imgs/dataOverview/2.png';\r\nimport icon3 from '@/assets/imgs/dataOverview/3.png';\r\nimport {cityMap} from '@/common/data-local.js'\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n  getCountAction,\r\n  getCountByProvinceAction,\r\n  getCountByCityAction,\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n} from '@/pages/dataReporting/store/actionCreator';\r\n\r\nimport {\r\n  BotWrapper,\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\nimport Chunk from './components/chunk/chunk';\r\nimport Logs from './components/logs/logs'\r\n\r\n\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\n  export default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n  const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {all_count,province,city,grade} = useSelector(state => {\r\n    return {\r\n      all_count:state.getIn(['dataReporting','all_count']),\r\n      province:state.getIn(['dataReporting','province']),\r\n      city:state.getIn(['dataReporting','city']),\r\n      grade:state.getIn(['dataReporting','grade']),\r\n    }\r\n  },shallowEqual);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(all_count);\r\n  // },[all_count])\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() =>{\r\n    switch (grade){\r\n      case 2:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n          return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n        setProvinceAlphabet(provinceAlphabet);\r\n\r\n        getProvinceMapOpt(provinceAlphabet,province);\r\n        break;\r\n      case 3:\r\n        var provinceIndex = provincesText.findIndex(x => {\r\n          return province === x\r\n        });\r\n        if (provinceIndex === -1) return;\r\n        var provinceAlphabet = provinces[provinceIndex];\r\n        setProvinceAlphabet(provinceAlphabet);\r\n        getCityMapOpt(city);\r\n        break;\r\n      default:\r\n        initalMap();\r\n      break;\r\n    }\r\n  },[]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#5784E8', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n      map.setOption(option,true);\r\n\r\n      setProvinceAlphabet(provinceAlphabet);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n\r\n      map.off('click');\r\n\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n  }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      switch (grade){\r\n        case 2:\r\n          dispatch(getCountByProvinceAction(province))\r\n          break;\r\n        case 3:\r\n          dispatch(getCountByCityAction(city))\r\n          break;\r\n        default:\r\n          dispatch(getCountAction())\r\n          break;\r\n      }\r\n    },[grade])\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getCountAction());\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        setProvinceAlphabet('');\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div className='chunks'>\r\n            {all_count  && <Chunk count={all_count.all_count} text='通过认证医联体' logo={icon1} />}\r\n            {all_count  && <Chunk count={all_count.today_count} text='通过认证医院总数' logo={icon2} />}\r\n            {all_count  && <Chunk count={all_count.today_org} text='注册医院总数' logo={icon3} />}\r\n\r\n          </div>\r\n          <div id=\"map\">\r\n          </div>\r\n          {grade > 1 && <div className=\"back\" onClick={() => {back()}}>返回</div> }\r\n          <div className='center-bg' />\r\n        </TopWrapper>\r\n        <BotWrapper>\r\n          <Logs/>\r\n       </BotWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\style.js",["489"],"import styled from \"styled-components\";\r\n\r\nimport centerTopBg from '@/assets/imgs/dataOverview/center-top.png'\r\nimport backBtn from '@/assets/imgs/dataOverview/back-btn.png'\r\nimport circle from '@/assets/imgs/dataOverview/circle.png'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 102vh;\r\n  position: relative;\r\n`\r\n\r\nexport const TopWrapper = styled.div`\r\n  position: relative;\r\n  background-image:url(${centerTopBg});\r\n  background-size: 100% 100%;\r\n  height: 77vh;\r\n  z-index: 2;\r\n  \r\n  #map{\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    height: 75%;\r\n    z-index: 3;\r\n    max-width: 1000px;\r\n\r\n  }\r\n  \r\n  .chunks{\r\n    margin-top: 2vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 1vw;\r\n  }\r\n\r\n  .back{\r\n    position: absolute;\r\n    top: 25%;\r\n    left: 1vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    background-image: url(${backBtn});\r\n    background-size: 100% 100%;\r\n    width: 6.28rem;\r\n    height: 2.61rem;\r\n    color: #00E4FF;\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n`\r\nexport const BotWrapper = styled.div`\r\n  \r\n`","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\rank.js",["490","491"],"import React,{memo,useEffect,useState,useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Progress } from 'antd'\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport {\r\n  getScoreListAction,\r\n  getSubGradeAction,\r\n  getScoreListByProvinceAction,\r\n  getScoreListByCityAction\r\n} from '@/pages/dataReporting/store/actionCreator'\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  const [Count,setCount] = useState(100);\r\n  const listRef = useRef();\r\n  const {score_list,grade,sub_grade,province,city} = useSelector(state => ({\r\n    score_list:state.getIn(['dataReporting','score_list']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n    sub_grade:state.getIn(['dataReporting','sub_grade']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city'])\r\n  }))\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 1:\r\n        dispatch(getScoreListAction(1,sub_grade));\r\n        break;\r\n      case 2:\r\n        switch (sub_grade){\r\n          case 1:\r\n            dispatch(getScoreListAction(1,1));\r\n            break;\r\n          case 2:\r\n            dispatch(getScoreListByProvinceAction(2,2,province));\r\n            break;\r\n          case 3:\r\n            dispatch(getScoreListByProvinceAction(2,3,province));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        switch (sub_grade){\r\n          case 1:\r\n            dispatch(getScoreListAction(1,1));\r\n            break;\r\n          case 2:\r\n            dispatch(getScoreListByProvinceAction(2,2,province));\r\n            break;\r\n          case 3:\r\n            dispatch(getScoreListByCityAction(3,3,city));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      default:\r\n      break;\r\n    }\r\n  },[grade,sub_grade])\r\n\r\n\r\n\r\n  const subData = (Sub) => {\r\n    listRef.current.scrollTop = 0;\r\n    setCount(100);\r\n    dispatch(getSubGradeAction(Sub));\r\n  }\r\n\r\n  const onListScorll = e => {\r\n    const scrollTop = e.target.scrollTop;  // 滚动的高度\r\n    const scrollHeight = e.target.scrollHeight;  // 容器总高度\r\n    const clientHeight = e.target.clientHeight; // 容器可视高度\r\n    if(scrollHeight-clientHeight-scrollTop <= 100){\r\n      setCount(Count + 100);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">质控分数排名</div>\r\n      <div className=\"hover\" />\r\n      <div className=\"list\" onScroll={e => onListScorll(e)} ref={listRef}>\r\n        {\r\n          score_list.map((item,index) => {\r\n            if(index >= Count) return;\r\n            return (\r\n              <div className='item' key={index}>\r\n                <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.name}</div>\r\n                <div className=\"item-progress\">\r\n                  <Progress percent={item.score}\r\n                            status={\"active\"}\r\n                            strokeColor={{\r\n                              to:'#0477D5',\r\n                              from:'#01D9FE'\r\n                            }}\r\n                            trailColor='#193F80'\r\n                            showInfo={false}\r\n                  />\r\n                  <div className='score'>{item.score}</div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"option\">\r\n        <div className={sub_grade === 1 ? 'active' : ''} onClick={() => {subData(1)}}>省</div>\r\n        <div className={sub_grade === 2 ? 'active' : ''} onClick={() => {subData(2)}}>市</div>\r\n        <div className={sub_grade === 3 ? 'active' : ''} onClick={() => {subData(3)}}>医联体</div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\chunk.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\chunk\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\preBtn.js",["492"],"import React,{memo,useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  let path = '/';\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (location.pathname === '/'){\r\n      path = '/';\r\n    }else{\r\n      path = '/dataReporting';\r\n    }\r\n  },[location.pathname])\r\n\r\n  return <Wrapper>\r\n    <NavLink to={path} />\r\n  </Wrapper>\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\nextBtn.js",["493"],"import React,{memo,useEffect} from 'react';\r\n\r\nimport {useLocation,useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n\r\n  const navTo = () =>{\r\n    const path = location.pathname;\r\n    if(path === '/'){\r\n      history.push('/dataReporting')\r\n    }else{\r\n      history.push('/dataCharts')\r\n    }\r\n  }\r\n  return <Wrapper onClick={() => {navTo()}} />\r\n\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\nextBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-coms\\preBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataReporting.js",["494"],"import {dataReporting as axios,dataCharts } from \"./request\";\r\nimport Axios from \"axios\";\r\nimport Qs from 'qs';\r\n\r\n// 地图上方三个数字\r\nexport const getCount = () => {\r\n  return axios({\r\n    url:'/count',\r\n  })\r\n}\r\nexport const getCountByProvince = (province) => {\r\n  return axios({\r\n    url:'/count',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getCountByCity = (city) => {\r\n  return axios({\r\n    url:'/count',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n// 实时在线操作记录\r\nexport const getLogs = () => {\r\n  return axios({\r\n    url:'/record',\r\n  })\r\n}\r\nexport const getLogsByProvince = (province) => {\r\n  return axios({\r\n    url:'/record',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getLogsByCity = (city) => {\r\n  return axios({\r\n    url:'/record',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n// 质控分数排名\r\nexport const getScoreList = (area_type,data_type) => {\r\n  return Axios.post(\r\n    'http://hbqc.ccpmc.org/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type\r\n    })\r\n  )\r\n}\r\n\r\n\r\nexport const getScoreListByProvince = (area_type,data_type,province) => {\r\n  return Axios.post(\r\n    'http://hbqc.ccpmc.org/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type,\r\n      province\r\n    })\r\n  )\r\n}\r\n\r\nexport const getScoreListByCity = (area_type,data_type,city) => {\r\n  return Axios.post(\r\n    'http://hbqc.ccpmc.org/QualityControlScore/getScoreList',\r\n    Qs.stringify({\r\n      area_type,\r\n      data_type,\r\n      city\r\n    })\r\n  )\r\n}\r\n\r\n// 填报总数排名\r\nexport const getRank = () => {\r\n  return axios({\r\n    url:'/rank',\r\n  })\r\n}\r\nexport const getRankByProvince = (province) => {\r\n  return axios({\r\n    url:'/rank',\r\n    params:{\r\n      province\r\n    }\r\n  })\r\n}\r\nexport const getRankCity = (city) => {\r\n  return axios({\r\n    url:'/rank',\r\n    params:{\r\n      city\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\logs.js",["495"],"import React,{memo,useEffect} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\nimport {\r\n  getLogsAction,\r\n  getLogsByProvinceAction,\r\n  getLogsByCityAction,\r\n} from '@/pages/dataReporting/store/actionCreator'\r\n\r\nexport default memo(function (){\r\n\r\n\r\n  const {logs,province,city,grade} = useSelector(state => ({\r\n    logs:state.getIn(['dataReporting','logs']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n  }),shallowEqual);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  // useEffect(() => {\r\n  //   (city === '' && province) && dispatch(getLogsByProvinceAction(province));\r\n  //   province || dispatch(getLogsAction());\r\n  // },[province]);\r\n  // useEffect(() => {\r\n  //   city &&  dispatch(getLogsByCityAction(city));\r\n  //   (city === '' && province) && dispatch(getLogsByProvinceAction(province))\r\n  // },[city]);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 2:\r\n        dispatch(getLogsByProvinceAction(province))\r\n        break;\r\n      case 3:\r\n        dispatch(getLogsByCityAction(city))\r\n        break;\r\n      default:\r\n        dispatch(getLogsAction())\r\n        break;\r\n    }\r\n  },[grade])\r\n\r\n  return (\r\n   <Wrapper>\r\n     <div id='logs'>\r\n      <div className=\"title\">实时在线操作记录</div>\r\n      <div className=\"hover\"/>\r\n      <div className=\"logs\">\r\n        {\r\n          logs && logs.map((item,index) => {\r\n            return <div className={index %2 ===0 ? 'border log':'log'}\r\n              title={item.org_name+'于：'+item.add_time + '新增病例'}\r\n              key={index}>\r\n              {item.org_name}于：{item.add_time}新增病例</div>\r\n          })\r\n\r\n\r\n        }\r\n      </div>\r\n     </div>\r\n   </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\center\\components\\logs\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\state.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\left\\components\\state\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\index.js",["496","497"],"import React,{memo,useEffect,useState,useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper,\r\n\r\n} from './style';\r\nimport {Progress} from \"antd\";\r\nimport {\r\n  getRankStatAction\r\n} from '@/pages/dataReporting/store/actionCreator';\r\nimport {\r\n  getRank,\r\n  getRankByProvince,\r\n  getRankCity\r\n} from '@/network/dataReporting'\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  const indexColor = ['#FFCB3D','#FB28F4','#32D6FF'];\r\n  const [List,setList] = useState({});\r\n  const listRef = useRef();\r\n  const [Count,setCount] = useState(100);\r\n  const {rank_state,province,city,grade} = useSelector(state => ({\r\n    rank_state:state.getIn(['dataReporting','rank_state']),\r\n    province:state.getIn(['dataReporting','province']),\r\n    city:state.getIn(['dataReporting','city']),\r\n    grade:state.getIn(['dataReporting','grade']),\r\n  }))\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 2:\r\n        getRankByProvince(province).then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n      case 3:\r\n        getRankCity(city).then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n      default:\r\n        getRank().then(res => {\r\n      setList(res.data.data);\r\n    })\r\n        break;\r\n    }\r\n  },[grade])\r\n\r\n  const changeRankState = (state) => {\r\n    listRef.current.scrollTop = 0;\r\n    setCount(100);\r\n    dispatch(getRankStatAction(state));\r\n  }\r\n\r\n  const onListScorll = e => {\r\n    const scrollTop = e.target.scrollTop;  // 滚动的高度\r\n    const scrollHeight = e.target.scrollHeight;  // 容器总高度\r\n    const clientHeight = e.target.clientHeight; // 容器可视高度\r\n    if(scrollHeight-clientHeight-scrollTop <= 100){\r\n      setCount(Count + 100);\r\n    }\r\n  }\r\n\r\n  return (\r\n   <Wrapper>\r\n     <div className=\"title\">填报总数排名\r\n     </div>\r\n     <div className=\"hover\" />\r\n     <div className=\"list\" onScroll={e => onListScorll(e)} ref={listRef}>\r\n       {\r\n         List[rank_state+'_data'] && List[rank_state+'_data'].map((item,index) => {\r\n           if(index >= Count) return;\r\n           return (\r\n             <div className='item' key={index}>\r\n               <div className=\"item-area\"><span style={{'color':index<=2 ? indexColor[index]:''}}>NO{index+1}.</span>{item.name}</div>\r\n               <div className=\"item-progress\">\r\n                 <Progress percent={item.count}\r\n                           status={\"active\"}\r\n                           strokeColor={{\r\n                             to:'#0477D5',\r\n                             from:'#01D9FE'\r\n                           }}\r\n                           trailColor='#193F80'\r\n                           showInfo={false}\r\n                 />\r\n                 <div className='score'>{item.count}</div>\r\n               </div>\r\n             </div>\r\n           )\r\n         })\r\n       }\r\n\r\n     </div>\r\n     <div className=\"option\">\r\n       <div className={rank_state === 'province' ? 'active' : ''} onClick={() => {changeRankState('province')}}>省</div>\r\n       <div className={rank_state === 'city' ? 'active' : ''} onClick={() => {changeRankState('city')}}>市</div>\r\n       <div className={rank_state === 'ylt' ? 'active' : ''} onClick={() => {changeRankState('ylt')}}>医联体</div>\r\n     </div>\r\n   </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataReporting\\c-pages\\right\\components\\rank\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\index.js",["498","499","500"],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\dataCharts.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\preBtn.js",["501","502"],"import React,{memo,useEffect} from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\nexport default memo(function (props){\r\n\r\n  let path = '/dataReporting';\r\n\r\n\r\n  return <Wrapper>\r\n    <NavLink to={path} />\r\n  </Wrapper>\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\dataCharts\\c-coms\\preBtn\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\reducer.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\constants.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\index.js",["503"],"import React,{memo,useState,useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\nimport DatePicker from '@/common/date-picker'\r\nimport date from '@/assets/imgs/qualityIndicators/date.png'\r\n\r\nexport default memo(function DataHeader(){\r\n  const [isShow,setIsShow] = useState('none');\r\n  const {start,end} = useSelector(state => ({\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end']),\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n    document.addEventListener('click',() => {\r\n      setIsShow('none')\r\n    })\r\n  },[])\r\n\r\n  const changeIsShow = (e) => {\r\n    if (isShow === 'none'){\r\n      setIsShow( 'block');\r\n    }else{\r\n      setIsShow( 'none');\r\n    }\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"date\" onClick={(e) =>{changeIsShow(e)} } >{start}</div>\r\n      <img src={date} onClick={(e) => {changeIsShow(e)}} alt=\"\"/>\r\n      <DatePicker isShow={isShow} />\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\date\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\index.js",["504"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport moment from 'moment'\r\n\r\nimport {\r\n  Wrapper\r\n} from \"./style\";\r\nimport {\r\n  getStartTimeAction\r\n} from '@/pages/controlIndex/store/actionCreator';\r\nimport {\r\n  LeftOutlined,\r\n  RightOutlined\r\n} from '@ant-design/icons'\r\n\r\nexport default memo(function DataHeader(props){\r\n  const {isShow} = props;\r\n  const [currentYear,setCurrentYear] = useState('');\r\n  const [currentMonth,setCurrentMonth] = useState('');\r\n  const monthList = ['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'];\r\n  const {start_time} = useSelector(state => ({\r\n    start_time:state.getIn(['controlIndex','start_time']),\r\n    // end_time:state.getIn(['controlIndex','end_time']),\r\n  }))\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // 初始化日期显示\r\n    const year = moment().format('YYYY');\r\n    setCurrentYear(year);\r\n    const month = Number(moment().format('M'));\r\n    setCurrentMonth(month);\r\n    // dispatch(getStartTimeAction(`${year}-${month < 10 ? 0 +''+ month : month}`));\r\n  },[]);\r\n\r\n\r\n  const selectMonth = (index,e) => {\r\n    const i = index +1;\r\n    setCurrentMonth(i);\r\n    dispatch(getStartTimeAction(`${currentYear}-${i < 10 ? '0'+i : i}`));\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const preYear = (e,value) => {\r\n\r\n    const preYear  = Number(currentYear) + value;\r\n    setCurrentYear(preYear);\r\n    dispatch(getStartTimeAction(`${preYear}-${currentMonth < 10 ? '0'+currentMonth : currentMonth}`));\r\n    e.stopPropagation();\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper isShow={isShow}>\r\n      <div className=\"header\">\r\n        <LeftOutlined onClick={(e) => {preYear(e,-1)}} />\r\n        <span>{currentYear}年</span>\r\n        <RightOutlined onClick={(e) => {preYear(e,1)}} />\r\n      </div>\r\n      <div className=\"months\">\r\n        {\r\n          monthList.map((item,index) => {\r\n            return <div key={index} className={[index+1 === currentMonth ? 'active month' : 'month']}\r\n              onClick={(e) => {selectMonth(index,e)}}\r\n            >{item}</div>\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\common\\date-picker\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\store\\actionCreator.js",[],"D:\\newCode\\react\\highblood-front\\src\\network\\controlIndex.js",["505","506"],"import {controlIndex,dataOverview as dataOverview,dataReporting as dataReporting} from \"@/network/request\";\r\n\r\nimport Qs from 'qs';\r\n\r\n\r\n// 指标详情\r\nexport const getCoreDetail = (start,end) => {  // 全国\r\n  return controlIndex.post(\r\n'/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByProvince = (start,end,province) => {  // 省\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      start,\r\n      end,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByCity = (start,end,city) => {  // 市\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      start,\r\n      end,\r\n      city\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByJoined = (start,end,hospital_joined_id) => {  // 医联体\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:4,\r\n      start,\r\n      end,\r\n      hospital_joined_id\r\n    })\r\n  )\r\n};\r\nexport const getCoreDetailByHospital = (start,end,hospital_id) => {  // 医院\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreDetail',\r\n    Qs.stringify({\r\n      area_type:5,\r\n      start,\r\n      end,\r\n      hospital_id\r\n    })\r\n  )\r\n};\r\n\r\n// 搜索医院列表\r\nexport const getHospitalJoinedList = () => {  // 全国\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:1,\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedListByProvince = (province) => {  // 省\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedListByCity = (city) => {  // 市\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      city\r\n    })\r\n  )\r\n};\r\n\r\n// 指标信息\r\nexport const getCoreRank = (start,end,province) => {  // 省和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:1,\r\n      province,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankCityAndChina = (start,end,city) => {  // 市和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:2,\r\n      city,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndChina = (start,end,hospital_joined_id) => {  // 医联体和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndChina = (start,end,hospital_id) => {  // 医院和国对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankCityAndProvince = (start,end,city) => {  // 市和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:2,\r\n      city,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndProvince = (start,end,hospital_joined_id) => {  // 医联体和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalJoinedAndCity = (start,end,hospital_joined_id) => {  // 医联体和市对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      data_type:3,\r\n      hospital_joined_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndProvince = (start,end,hospital_id) => {  // 医院和省对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getCoreRankHospitalAndCity = (start,end,hospital_id) => {  // 医院和市对比\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getCoreRank',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      data_type:4,\r\n      hospital_id,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\n\r\n\r\n// 搜索医联体\r\nexport const getSearchHospital = (area_type,hospital_joined_name) => {\r\n  return controlIndex.post(\r\n    '/Hospital/getHospitalJoinedList',\r\n    Qs.stringify({\r\n      area_type,\r\n      hospital_joined_name\r\n    })\r\n  )\r\n};\r\n\r\n// 某指标下的医联体\r\nexport const getHospitalJoinedByCore = (start,end,core_name) => { // 全国\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      core_name,\r\n      start,\r\n      end\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedByCoreByProvince = (start,end,core_name,province) => {  // 省\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:2,\r\n      core_name,\r\n      start,\r\n      end,\r\n      province\r\n    })\r\n  )\r\n};\r\nexport const getHospitalJoinedByCoreByCity = (start,end,core_name,city) => {  // 市\r\n  return controlIndex.post(\r\n    '/QualityControlIndex/getHospitalJoinedListByCore',\r\n    Qs.stringify({\r\n      area_type:3,\r\n      core_name,\r\n      start,\r\n      end,\r\n      city\r\n    })\r\n  )\r\n};\r\n\r\n\r\n// 质控评分\r\nexport const getScoreListByJoined = (start,end,hospital_joined_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreInfo',\r\n    Qs.stringify({\r\n      data_type:1,\r\n      hospital_joined_id,\r\n      start,\r\n      end,\r\n    }))\r\n}\r\nexport const getScoreListByHospital = (start,end,hospital_id) => { // 医院\r\n  return controlIndex.post('/QualityControlScore/getScoreInfo',\r\n    Qs.stringify({\r\n      data_type:2,\r\n      hospital_id,\r\n      start,\r\n      end,\r\n  }))\r\n}\r\n\r\n\r\n// 认证时间\r\nexport const getTimeInfoByHospitalJoined = (name) => {\r\n  return dataOverview({\r\n    url:'/getTimeInfoByHospital',\r\n    params:{\r\n      name\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// 近四月质控分数\r\nexport const getScoreListForHospitalJoined = (hospital_joined_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreListForHospital',\r\n    Qs.stringify({\r\n      data_type:1,\r\n      hospital_joined_id\r\n    }))\r\n};\r\nexport const getScoreListForHospital = (hospital_id) => { // 医联体\r\n  return controlIndex.post('/QualityControlScore/getScoreListForHospital',\r\n    Qs.stringify({\r\n      data_type:2,\r\n      hospital_id\r\n    }))\r\n}\r\n\r\n// 近四月质控分数\r\nexport const getMonth6ByOrg = (org_id) => {\r\n  return dataReporting({\r\n    url:'/month',\r\n    params:{\r\n      type:1,\r\n      org_id\r\n    }\r\n  })\r\n};\r\nexport const getMonth6ByHospital = (org_id) => {\r\n  return dataReporting({\r\n    url:'/month',\r\n    params:{\r\n      type:2,\r\n      org_id\r\n    }\r\n  })\r\n};\r\n\r\n\r\n// 获取医联体下的医院列表\r\nexport const getHospitalList = (hospital_joined_id) => {\r\n  return controlIndex.post('/Hospital/getHospitalList',\r\n    Qs.stringify({\r\n      area_type:1,\r\n      hospital_joined_id\r\n    }))\r\n}\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\index.js",["507"],"import React,{memo,useEffect,useState} from 'react'\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport searchBtn from '@/assets/imgs/qualityIndicators/search-hospital.png'\r\n\r\nimport {\r\n  getHospitalJoinedList,\r\n  getHospitalJoinedListByProvince,\r\n  getHospitalJoinedListByCity\r\n} from '@/network/controlIndex';\r\nimport {\r\n  getSearchHospital\r\n} from '@/network/controlIndex'\r\n\r\nexport default memo(function (){\r\n  const [isShow,setIsShow] = useState('none');\r\n  const [hospitalList,setHospitalList] = useState([]);\r\n\r\n  const {province,city,grade} = useSelector(state => ({\r\n    province:state.getIn(['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      default:\r\n        getHospitalJoinedList().then(res => {\r\n          setHospitalList(res.data.data);\r\n        })\r\n        break;\r\n      case 2:\r\n        getHospitalJoinedListByProvince(province).then(res => {\r\n          setHospitalList(res.data.data);\r\n        })\r\n        break;\r\n      case 3:\r\n        getHospitalJoinedListByCity(city).then(res => {\r\n          setHospitalList(res.data.data);\r\n        })\r\n        break;\r\n    }\r\n  },[grade]);\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    const value = e.target.value;\r\n    getSearchHospital(grade,value).then(res => {\r\n      setHospitalList(res.data.data);\r\n    })\r\n  };\r\n\r\n  const onFocus = (e) => {\r\n    setIsShow( 'block');\r\n    e.stopPropagation();\r\n  }\r\n  const onblur = (e) => {\r\n    setIsShow( 'none');\r\n    e.stopPropagation();\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper isShow={isShow}  >\r\n      <input className='textinput' type=\"text\" placeholder='请输入医院名称' onChange={e => onChange(e)}\r\n             onFocus={(e) => {onFocus(e)}}\r\n             onBlur={(e) => {onblur(e)}}\r\n/>\r\n      <img src={searchBtn} alt=\"点击搜索\"/>\r\n      <div className=\"hospitalList\">\r\n        {\r\n          hospitalList && hospitalList.map((item,index) => {\r\n            return <div className='hospital' key={index}>{item.hospital_name}</div>\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n})\r\n","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\search\\style.js",["508"],"import styled from \"styled-components\";\r\n\r\nimport searchInput from '@/assets/imgs/qualityIndicators/search-input.png'\r\nimport searchHospital from '@/assets/imgs/qualityIndicators/search-hospital.png'\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  padding: 0.75rem 0 0.75rem 1.25rem;\r\n  box-sizing: border-box;\r\n  width: 13.75rem;\r\n  height: 3rem;\r\n  background-image: url(${searchInput});\r\n  background-size: 100% 100%;\r\n  margin: 0 1.25rem;\r\n\r\n  .textinput{\r\n    width: 8rem;\r\n    border:none;\r\n    background-color: transparent;\r\n    outline: none;\r\n    color:#000;\r\n    font-size: 1rem;\r\n    font-weight: 800;\r\n    &::placeholder{\r\n      border:none;\r\n      outline: none;\r\n      color:#ccc;\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  \r\n  img{\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  \r\n  .hospitalList{\r\n    display: ${props => props.isShow};\r\n    overflow-y: scroll;\r\n    top: 3rem;\r\n    right: -20%;\r\n    height: 30vh;\r\n    width: 30vh;\r\n    position: absolute;\r\n    font-size: 1rem;\r\n    color:#8492a6;\r\n    font-weight: 400;\r\n    padding: 10px 0;\r\n    margin: 5px 0;\r\n    background-color: #fff;\r\n    border: 1px solid #ebeef5;\r\n    border-radius: 1rem;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\r\n    z-index: 3;\r\n    .hospital{\r\n      cursor: pointer;\r\n      padding:0.6rem 1rem;\r\n      line-height: 2rem;\r\n      text-align: center;\r\n      &:hover{\r\n        color:#6ab5ff;\r\n        background-color: #ecf5ff\r\n      }\r\n    }\r\n\r\n    ::-webkit-scrollbar{\r\n      width: 10px;\r\n      height: 1px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 10px;\r\n\r\n      background-color:rgba(0,0,0,0.3);\r\n\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      -webkit-box-shadow: none;\r\n\r\n      background:rgba(0,0,0,0.2);\r\n    }\r\n  }\r\n\r\n  \r\n`\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\index.js",["509"],"import React,{memo,useEffect,useState} from \"react\";\r\nimport {shallowEqual,useDispatch,useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport * as echarts from 'echarts';\r\nimport china from '@/assets/json/china.json';\r\nimport {cityMap} from '@/common/data-local.js'\r\n\r\n\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n  getShowCoreAction\r\n} from '@/pages/controlIndex/store/actionCreator'\r\nimport {\r\n  TopWrapper,\r\n  Wrapper\r\n} from \"./style\";\r\n\r\n\r\n\r\necharts.registerMap('china', china);\r\n\r\n\r\n  export default memo(function DataViewCenter(){\r\n  // props and state\r\n  let map = null;\r\n    const [ProvinceAlphabet,setProvinceAlphabet] = useState('');\r\n  const provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n  const provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾'];\r\n\r\n\r\n\r\n  // other hooks\r\n  const {province,city,grade,show_core} = useSelector(state => {\r\n    return {\r\n      province:state.getIn(['controlIndex','province']),\r\n      city:state.getIn(['controlIndex','city']),\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      show_core:state.getIn(['controlIndex','show_core']),\r\n    }\r\n  },shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n      initalMap();\r\n    },[]);\r\n\r\n\r\n  // 业务逻辑\r\n  // init地图\r\n  const initalMap = (place) => {\r\n    if (map != null && map !== \"\" && map !== undefined) {\r\n      map.dispose();\r\n    }\r\n    map = echarts.init(document.getElementById('map'));\r\n    map.setOption(getMapOpt(),true);\r\n\r\n    map.on('click',param => {\r\n      // 将文字将为拼音，用于请求地图\r\n      const provinceIndex = provincesText.findIndex(x => {\r\n        return param.name === x\r\n      });\r\n      if (provinceIndex === -1) return;\r\n      const provinceAlphabet = provinces[provinceIndex]\r\n\r\n      // 请求省级地图及对应数据\r\n      getProvinceMapOpt(provinceAlphabet,param.name);\r\n    })\r\n  }\r\n\r\n  const getMapOpt = (place) => {\r\n    const option = {\r\n      //   backgroundColor: '#F3F3F3', //地图背景颜色\r\n      //以下是地图标题，我在此处设空，需要的可以自己加上\r\n      title: {\r\n        text: '',\r\n        subtext: '',\r\n        left: 'center'\r\n      },\r\n      geo: {\r\n        map: place || 'china',\r\n        label: {\r\n          emphasis: {\r\n            show: false\r\n          },\r\n          // 不需要显示地名可直接删除normal此项\r\n          normal: {\r\n            show: true, // 是否显示对应地名\r\n            textStyle: {\r\n              color: 'rgba(0,0,0)'\r\n            }\r\n          }\r\n        },\r\n        roam: true,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: '#4ab6d6', //地图颜色\r\n            borderColor: '#fff' //地图边线颜色\r\n          },\r\n          emphasis: {\r\n            areaColor: '#6FA7CE' //鼠标移入颜色\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return option\r\n  }\r\n\r\n  const getProvinceMapOpt = (provinceAlphabet,provinceName) =>{\r\n    map = echarts.init(document.getElementById('map'));\r\n    axios.get('geo/province/' + provinceAlphabet + '.json').then(s => {\r\n      echarts.registerMap(provinceAlphabet,s.data);\r\n      const option = getMapOpt(provinceAlphabet);\r\n\r\n      map.setOption(option,true);\r\n      getProvinceDataAndSet(provinceName);  // dispatch action 修改 redux 中数据\r\n\r\n\r\n\r\n      map.off('click');\r\n\r\n      map.on('click',param => { // 给下级添加点击事件\r\n        getCityMapOpt(param.name);\r\n      })\r\n    })\r\n  }\r\n\r\n  const getProvinceDataAndSet = (provinceName) => { // 获取并设置省级数据\r\n    dispatch(getProvinceAction(provinceName));  // 改变当前所在 province\r\n    dispatch(getGradeAction(2)); // 改变层级\r\n    const provinceIndex = provincesText.findIndex(x => {\r\n      return provinceName === x\r\n    });\r\n    if (provinceIndex === -1) return;\r\n    const provinceAlphabet = provinces[provinceIndex];\r\n    setProvinceAlphabet(provinceAlphabet);\r\n  }\r\n\r\n  useEffect(() => { // 监听 city 改变\r\n\r\n  },[city]);\r\n\r\n\r\n  const getCityMapOpt = (cityName) => {\r\n    map = echarts.init(document.getElementById('map'));\r\n    // 将城市名称转为邮政编码\r\n    const code = cityMap[cityName];\r\n    axios.get('geo/city/' + code + '.json').then(s => {\r\n      echarts.registerMap(cityName,s.data);\r\n      const option = getMapOpt(cityName);\r\n      map.setOption(option,true);\r\n\r\n      getCityDataAndSet(cityName);\r\n\r\n      map.off('click');\r\n    })\r\n  }\r\n\r\n  const getCityDataAndSet = (cityName) => { // 市级数据处理\r\n    dispatch(getCityAction(cityName));  // 改变当前 city\r\n    dispatch(getGradeAction(3));  // 改变层级\r\n  }\r\n\r\n  const back = () => {  // 地图返回\r\n    switch (grade){\r\n      case 2:\r\n        initalMap();\r\n        dispatch(getGradeAction(1));\r\n        dispatch(getProvinceAction(''));\r\n        break;\r\n      case 3:\r\n        getProvinceMapOpt(ProvinceAlphabet,province);\r\n        dispatch(getGradeAction(2));\r\n        dispatch(getCityAction(''));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Wrapper>\r\n        <TopWrapper>\r\n          <div id=\"map\">\r\n          </div>\r\n          {grade > 1 && <div className=\"back\" onClick={() => {back()}}>地图返回</div> }\r\n          {show_core  || <div className=\"back\" onClick={() => {dispatch(getShowCoreAction(true))}}>指标返回</div> }\r\n        </TopWrapper>\r\n     </Wrapper>\r\n    </>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\left\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\index.js",["510"],"import React,{memo,useEffect} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport China from './c-coms/china';\r\nimport SubList from './c-coms/subList';\r\nimport Hospital from './c-coms/hospitalListByCore'\r\n\r\n\r\nexport default memo(function (){\r\n  const {grade,show_core} = useSelector(state => {\r\n    return {\r\n      province:state.getIn(['controlIndex','province']),\r\n      city:state.getIn(['controlIndex','city']),\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      show_core:state.getIn(['controlIndex','show_core']),\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      {show_core && grade === 1 && <China/>}\r\n      {show_core && grade !== 1 && <SubList/>}\r\n      {show_core  || <Hospital/>}\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\index.js",["511"],"import React,{memo,useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getCoreDetailAction,\r\n  getShowCoreAction,\r\n  getCoreNameAction,\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\nexport default memo(function (){\r\n  const {core_detail,start,end} = useSelector(state => ({\r\n    core_detail:state.getIn(['controlIndex','core_detail']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getCoreDetailAction(start,end));\r\n  },[start]);\r\n\r\n  const onClick = (core_name) => {\r\n    dispatch(getCoreNameAction(core_name));\r\n    dispatch(getShowCoreAction(false));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {\r\n        JSON.stringify(core_detail) !== '{}' && Object.keys(core_detail).map((key,index) => {\r\n          return <div key={key} className='item' onClick={() => {onClick(key)}}>\r\n            <div className=\"info\">\r\n              <div className=\"title\">{index+1}.&nbsp;{core_detail[key].core_name}</div>\r\n              {\r\n                core_detail[key].all_count !== 0 && <div className=\"count\">\r\n                  全国\r\n                  {core_detail[key].unit === 3 && <span><span className=\"highlight\">{core_detail[key].all_count}</span> 例</span>}\r\n                  {core_detail[key].unit === 2 && <span><span className=\"highlight\">{core_detail[key].pass_percent}</span> %</span>}\r\n                  {core_detail[key].unit === 1 && <span><span className=\"highlight\">{core_detail[key].avg_time}</span> 分钟</span>}\r\n                </div>\r\n              }\r\n              {core_detail[key].all_count ===0  && <div>无数据</div>}\r\n            </div>\r\n          </div>\r\n        })\r\n      }\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\china\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\index.js",["512","513","514"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n  Wrapper,\r\n} from './style';\r\nimport {\r\n  getCoreDetailByProvinceAction,\r\n  getCoreDetailByCityAction,\r\n  getCoreDetailByJoinedAction,\r\n  getCoreNameAction,\r\n  getShowCoreAction\r\n} from '@/pages/controlIndex/store/actionCreator';\r\nimport {\r\n  getCoreRank,\r\n  getCoreRankCityAndChina,\r\n  getCoreRankHospitalJoinedAndChina,\r\n  getCoreRankHospitalAndChina,\r\n  getCoreRankHospitalAndProvince,\r\n  getCoreRankHospitalAndCity,\r\n  getCoreRankHospitalJoinedAndProvince,\r\n  getCoreRankHospitalJoinedAndCity,\r\n  getCoreRankCityAndProvince,\r\n  getCoreDetail,\r\n  getCoreDetailByProvince,\r\n  getCoreDetailByCity\r\n} from '@/network/controlIndex'\r\n\r\n// import icon1 from '@/assets/imgs/qualityIndicators/icons/1.png';\r\nimport icon1 from '@/assets/imgs/qualityIndicators/icons/1.png';\r\nimport icon2 from '@/assets/imgs/qualityIndicators/icons/2.png';\r\nimport icon3 from '@/assets/imgs/qualityIndicators/icons/3.png';\r\nimport icon4 from '@/assets/imgs/qualityIndicators/icons/4.png';\r\nimport icon5 from '@/assets/imgs/qualityIndicators/icons/5.png';\r\nimport icon6 from '@/assets/imgs/qualityIndicators/icons/6.png';\r\nimport icon7 from '@/assets/imgs/qualityIndicators/icons/7.png';\r\nimport icon8 from '@/assets/imgs/qualityIndicators/icons/8.png';\r\nimport icon9 from '@/assets/imgs/qualityIndicators/icons/9.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [rank,setRank] = useState({});\r\n  const [compaDate,setCompaDate] = useState({});\r\n  const {core_detail,grade,start,end,province,city,hospital_joined_id,hospital_id,comp_grade} = useSelector(state => ({\r\n    core_detail:state.getIn(['controlIndex','core_detail']),\r\n    province:state.getIn( ['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n    comp_grade:state.getIn(['controlIndex','comp_grade']),\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 2: // 省\r\n        dispatch(getCoreDetailByProvinceAction(start,end,province));\r\n        // getCoreRank(start,end,province).then(res => { // 排名信息\r\n        //   setRank(res.data.data);\r\n        // })\r\n        break;\r\n      case 3: // 市\r\n        dispatch(getCoreDetailByCityAction(start,end,city));\r\n        // getCoreRankCityAndChina(start,end,city).then(res => { // 比较数据\r\n        //   setRank(res.data.data);\r\n        // })\r\n        break;\r\n      case 4: // 医联体\r\n        dispatch(getCoreDetailByJoinedAction(start,end,hospital_joined_id));\r\n        // getCoreRankHospitalJoinedAndChina(start,end,hospital_joined_id).then(res => { // 排名信息\r\n        //   setRank(res.data.data);\r\n        // });\r\n        break;\r\n      case 5: // 医院\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },[grade,start]);\r\n\r\n  useEffect(() => {\r\n    switch (comp_grade){\r\n      case 1:\r\n        switch (grade){\r\n          case 2:\r\n            getCoreRank(start,end,province).then(res => { // 省-国\r\n              setRank(res.data.data);\r\n            });\r\n          break;\r\n          case 3:\r\n            getCoreRankCityAndChina(start,end,city).then(res => { // 市-国\r\n              setRank(res.data.data);\r\n            });\r\n            break;\r\n          case 4:\r\n            getCoreRankHospitalJoinedAndChina(start,end,hospital_joined_id).then(res => { // 医联体-国\r\n              setRank(res.data.data);\r\n            });\r\n            break;\r\n          case 5:\r\n            getCoreRankHospitalAndChina(start,end,hospital_id).then(res => { // 医院-国\r\n              setRank(res.data.data);\r\n            });\r\n          break;\r\n          default:break;\r\n        }\r\n        getCoreDetail(start,end).then(res => {\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      case 2:\r\n        switch (grade){\r\n          case 3: // 市-省\r\n            getCoreRankCityAndProvince(start,end,city).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 4: // 医联体-省\r\n            getCoreRankCityAndProvince(start,end,city).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 5: // 医院-省\r\n            getCoreRankHospitalAndProvince(start,end,hospital_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          default:break;\r\n        }\r\n\r\n        getCoreDetailByProvince(start,end,province).then(res => {\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      case 3:\r\n        switch (grade){\r\n          case 4: // 医联体-市\r\n            getCoreRankHospitalJoinedAndCity(start,end,hospital_joined_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          case 5: // 医院-市\r\n            getCoreRankHospitalAndCity(start,end,hospital_joined_id).then(res => {\r\n              setRank(res.data.data);\r\n            })\r\n            break;\r\n          default:break;\r\n        }\r\n        getCoreDetailByCity(start,end,city).then(res => {\r\n          setCompaDate(res.data.data);\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n  },[comp_grade,grade]);\r\n\r\n  const onClick = (core_name) => {\r\n    dispatch(getCoreNameAction(core_name));\r\n    dispatch(getShowCoreAction(false));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"sub-list\">\r\n        {\r\n          core_detail  && JSON.stringify(rank) !== '{}' && JSON.stringify(compaDate) !== '{}' && Object.keys(core_detail).map((key,index) => {\r\n            return (\r\n                <div className='sub-item' key={key} onClick={() => {onClick(key)}}>\r\n                    <div className=\"left\">\r\n                      <div className=\"top\">{index+1}.{core_detail[key].core_name}</div>\r\n                      {\r\n                        core_detail[key].all_count > 0 ? <div className=\"bot\">\r\n                          {\r\n                            rank[key] ? <div className=\"item\">\r\n                              <div>\r\n                                <span className='highlight'>{rank[key].rank}</span>\r\n                                /{rank[key].count}\r\n                              </div>\r\n                              <div>排名</div>\r\n                            </div> : <div>无数据</div>\r\n                          }\r\n                          <div className=\"item\">\r\n                            <div>\r\n                              <span className=\"highlight\">{compaDate[key].unit === 1 ? compaDate[key].avg_time : compaDate[key].unit===2 ? compaDate[key].pass_percent:compaDate[key].all_count}</span>\r\n                              {core_detail[key].unit === 1 ? '分钟' : core_detail[key].unit===2 ? '%' : '例'}\r\n                            </div>\r\n                            <div>\r\n                              {comp_grade === 1 && '全国'}\r\n                              {comp_grade === 2 && '全省'}\r\n                              {comp_grade === 3 && '全市'}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"item\">\r\n                            <div>\r\n                            <span className='highlight'>\r\n                              {core_detail[key].unit === 1 ? core_detail[key].avg_time : core_detail[key].unit===2 ? core_detail[key].pass_percent:core_detail[key].all_count}\r\n                            </span>\r\n                              {core_detail[key].unit === 1 ? '分钟' : core_detail[key].unit===2 ? '%' : '例'}\r\n                            </div>\r\n                            <div>\r\n                              {grade === 2 && '本省'}\r\n                              {grade === 3 && '本市'}\r\n                              {grade === 4 && '医联体'}\r\n                              {grade === 5 && '医院'}\r\n                            </div>\r\n                          </div>\r\n                        </div> : '无数据'\r\n                      }\r\n                    </div>\r\n                    <div className=\"right\">\r\n                      {index === 0 && <img src={icon1} alt='404' />}\r\n                      {index === 1 && <img src={icon2} alt='404' />}\r\n                      {index === 2 && <img src={icon3} alt='404' />}\r\n                      {index === 3 && <img src={icon4} alt='404' />}\r\n                      {index === 4 && <img src={icon5} alt='404' />}\r\n                      {index === 5 && <img src={icon6} alt='404' />}\r\n                      {index === 6 && <img src={icon7} alt='404' />}\r\n                      {index === 7 && <img src={icon8} alt='404' />}\r\n                      {index === 8 && <img src={icon9} alt='404' />}\r\n                    </div>\r\n                </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});\r\n\r\n\r\n","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\subList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\index.js",["515","516","517"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport { Collapse } from 'antd';\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getHospitalJoinedByCore,\r\n  getHospitalJoinedByCoreByProvince,\r\n  getHospitalJoinedByCoreByCity\r\n} from '@/network/controlIndex';\r\nimport {\r\n  getProvinceAction,\r\n  getCityAction,\r\n  getGradeAction,\r\n  getShowCoreAction,\r\n  getHospitalJoinedIdAction,\r\n  getHospitalJoinedNameAction\r\n} from '@/pages/controlIndex/store/actionCreator'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport default memo(function (){\r\n  const [hospitalJoinedList,setHospitalJoinedList] = useState({});\r\n  const {core_name,grade,start,end,province,city} = useSelector(state => ({\r\n    core_name:state.getIn(['controlIndex','core_name']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    start:state.getIn(['controlIndex','start_time']),\r\n    end:state.getIn(['controlIndex','end_time']),\r\n    province:state.getIn(['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n  }));\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 1:\r\n        getHospitalJoinedByCore(start,end,core_name).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n      break;\r\n      case 2:\r\n        getHospitalJoinedByCoreByProvince(start,end,core_name,province).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n        break;\r\n      case 3:\r\n        getHospitalJoinedByCoreByCity(start,end,core_name,city).then(res => {\r\n          setHospitalJoinedList(res.data.data);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n\r\n  },[grade]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (id,hospital,info,key) => {\r\n    dispatch(getShowCoreAction(true));\r\n    dispatch(getGradeAction(4));\r\n    dispatch(getHospitalJoinedIdAction(id));\r\n    dispatch(getHospitalJoinedNameAction(hospital));\r\n\r\n    dispatch(getProvinceAction(info[0].province));\r\n    dispatch(getCityAction(info[0].city));\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {JSON.stringify(hospitalJoinedList) !== '[]'  &&\r\n          <Collapse defaultActiveKey={['1']} >\r\n            {\r\n              Object.keys(hospitalJoinedList).map(key => {\r\n                return <Panel header={key+'('+hospitalJoinedList[key].length+'家)'} key={key} showArrow={false}>\r\n                  <div className='sub-panel'>\r\n                    {\r\n                      hospitalJoinedList[key].map((item,index) => {\r\n                        return <div key={index} className='hospital-item' onClick={() => onClick(item.hospital_id,item.hospital,hospitalJoinedList[key])}>\r\n                          <div className='hospital-name'>{item.hospital}</div>\r\n                          {item.all_count > 0 ? <div className=\"hospital-info\">\r\n                            <div className=\"item info\">\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">排名</div>\r\n                                <div className=\"info-data\">\r\n                                  {\r\n                                    item.rank ? <div><span className=\"highlight\">{item.rank}</span>/{item.count}</div> : '未认证'\r\n                                  }\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">医联体</div>\r\n                                <div className=\"info-data\">\r\n                                    <span className=\"highlight\">\r\n                                        {item.unit === 1 ? item.avg_time + '分钟' : item.unit == 2 ? item.pass_percent + '%' : item.all_count + '例'}\r\n                                    </span>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"rank\">\r\n                                <div className=\"info-title\">全国</div>\r\n                                <div className=\"info-data\">\r\n                                    <span className=\"highlight\">\r\n                                        {item.country_data}\r\n                                    </span>{item.unit === 1 ? '分钟' : item.unit == 2 ? '%' : '例'}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div> : <div>无数据</div>}\r\n                        </div>\r\n                      })\r\n                    }\r\n                  </div>\r\n                </Panel>\r\n              })\r\n            }\r\n          </Collapse>\r\n     }\r\n    {\r\n      hospitalJoinedList.length === 0 && <div className=\"nodata\">该地区暂无数据</div>\r\n    }\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\right\\c-coms\\hospitalListByCore\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\index.js",["518","519","520","521","522"],"import React,{memo,useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Slider} from \"antd\";\r\n\r\nimport {\r\n  Wrapper\r\n} from './style';\r\n\r\nimport {\r\n  getCompGradeAction\r\n} from \"@/pages/controlIndex/store/actionCreator\";\r\n\r\nexport default memo(function DataHeader(){\r\n  const marks1 = {\r\n    1:'国内对比',\r\n    2:'省内对比',\r\n  }\r\n  const marks2 = {\r\n    1:'国内对比',\r\n    2:'省内对比',\r\n    3:'市区对比',\r\n  }\r\n\r\n  const {grade,province,city,hospital_joined_name,hospital_name} = useSelector(state => ({\r\n    province:state.getIn(['controlIndex','province']),\r\n    city:state.getIn(['controlIndex','city']),\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    hospital_joined_name:state.getIn(['controlIndex','hospital_joined_name']),\r\n    hospital_name:state.getIn(['controlIndex','hospital_name']),\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const onChange = (value) => {\r\n    dispatch(getCompGradeAction(value))\r\n  }\r\n\r\n  return (\r\n    <Wrapper grade={grade === 3}>\r\n      {\r\n        grade === 3 ? <Slider marks={marks1} defaultValue={1} max={2} min={1} tooltipVisible={false} onChange={(e) => onChange(e)} /> :\r\n          <Slider marks={marks2} defaultValue={1} max={3} min={1} tooltipVisible={false} onChange={(e) => onChange(e)} />\r\n      }\r\n\r\n    </Wrapper>\r\n  )\r\n})","D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\slider\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\index.js",["523"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n  Chunk\r\n} from './style';\r\nimport {\r\n  getScoreListByJoined,\r\n  getScoreListByHospital\r\n} from '@/network/controlIndex';\r\nimport controlScore from '@/assets/imgs/medicalConsortium/controlScore.png';\r\nimport rank1 from '@/assets/imgs/medicalConsortium/rank1.png';\r\nimport rank2 from '@/assets/imgs/medicalConsortium/rank2.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [scoreInfo,setScoreInfo] = useState({});\r\n  const {grade,hospital_joined_id,hospital_id,start,end} = useSelector(state => {\r\n    return {\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n      hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n      start:state.getIn(['controlIndex','start_time']),\r\n      end:state.getIn(['controlIndex','end_time']),\r\n    }\r\n  },shallowEqual);\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getScoreListByJoined(start,end,hospital_joined_id).then(res => {\r\n          setScoreInfo(res.data.data[0]);\r\n        })\r\n        break;\r\n      case 5:\r\n        getScoreListByHospital(start,end,hospital_id).then(res => {\r\n          setScoreInfo(res.data.data[0]);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Chunk bg={controlScore}>\r\n        <div className=\"item-name\">质控评分</div>\r\n        <div className=\"item-value\">{scoreInfo && scoreInfo.score}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank1}>\r\n        <div className=\"item-name\">省排名</div>\r\n        <div className=\"item-value\">{scoreInfo && scoreInfo.city_rank}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank1}>\r\n        <div className=\"item-name\">市排名</div>\r\n        <div className=\"item-value\">{scoreInfo && scoreInfo.score}</div>\r\n      </Chunk>\r\n      <Chunk bg={rank2}>\r\n        <div className=\"item-name\">全国排名</div>\r\n        <div className=\"item-value\">{scoreInfo && scoreInfo.country_rank}</div>\r\n      </Chunk>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreInfo\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\index.js",["524"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n  Chunk\r\n} from './style';\r\nimport {\r\n  getTimeInfoByHospitalJoined\r\n} from '@/network/controlIndex';\r\nimport register from '@/assets/imgs/medicalConsortium/register.png';\r\nimport pass from '@/assets/imgs/medicalConsortium/pass.png';\r\nimport again from '@/assets/imgs/medicalConsortium/again.png';\r\n\r\n\r\nexport default memo(function (){\r\n  const [timeInfo,setTimeInfo] = useState({});\r\n  const {grade,hospital_joined_name,hospital_name} = useSelector(state => ({\r\n      grade:state.getIn(['controlIndex','grade']),\r\n      hospital_joined_name:state.getIn(['controlIndex','hospital_joined_name']),\r\n\r\n      hospital_name:state.getIn(['controlIndex','hospital_name']),\r\n  }),shallowEqual);\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getTimeInfoByHospitalJoined(hospital_joined_name).then(res => {\r\n          setTimeInfo(res.data.content);\r\n        })\r\n        break;\r\n      case 5:\r\n        getTimeInfoByHospitalJoined(hospital_name).then(res => {\r\n          setTimeInfo(res.data.content);\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={register} className='icon' alt=\"注册时间\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">注册时间</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo && timeInfo.register_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={pass} className='icon' alt=\"通过认证时间\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">通过认证时间</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo && timeInfo.pass_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n      <Chunk>\r\n        <div className=\"item-icon\">\r\n          <img src={again} className='icon' alt=\"再认证倒计时\"/>\r\n        </div>\r\n        <div className=\"item-info\">\r\n          <div className=\"item-title\">再认证倒计时</div>\r\n          <div className=\"item-value\">\r\n            <span className=\"value\">{timeInfo && timeInfo.again_time}</span>\r\n          </div>\r\n        </div>\r\n      </Chunk>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\timeInfo\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\index.js",["525"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper,\r\n\r\n} from './style';\r\nimport {\r\n  getScoreListForHospitalJoined,\r\n  getScoreListForHospital\r\n} from '@/network/controlIndex';\r\nimport * as echarts from 'echarts';\r\n\r\n\r\nexport default memo(function (){\r\n  const [data,setData] = useState({});\r\n  const {grade,hospital_joined_id,hospital_id} = useSelector(state => ({\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getScoreListForHospitalJoined(hospital_joined_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      case 5:\r\n        getScoreListForHospital(hospital_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n  useEffect(() => {\r\n    if(JSON.stringify(data) === \"{}\") return;\r\n    const option =  {\r\n      backgroundColor:'',\r\n      tooltip:{\r\n        show:true,\r\n        trigger:'axis'\r\n      },\r\n      title:{\r\n        show:true,\r\n        text:'近四月质控分数',\r\n        textStyle:{\r\n          fontSize:'16',\r\n          fontWeight:500\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['一季度', '二季度', '三季度', '四季度'],\r\n        axisTick:{\r\n          show:false\r\n        },\r\n        axisLine:{\r\n          show:false\r\n        }\r\n      },\r\n      yAxis: {\r\n        type: 'value',\r\n        axisLine:{\r\n          show:false\r\n        },\r\n        axisTick:{\r\n          show:false\r\n        }\r\n      },\r\n      series: [{\r\n        data: [25,60,42,56],\r\n        type: 'line',\r\n        areaStyle: {},\r\n        smooth:0.3,\r\n        itemStyle:{\r\n          normal:{\r\n            color:new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: \"#4A75D6\" },\r\n              { offset: 0.5, color: \"rgba(58, 167, 255,0.4)\" },\r\n              { offset: 1, color: \"rgba(58, 167, 255,0)\" }\r\n            ])\r\n          }\r\n        }\r\n      }]\r\n    };\r\n    option.xAxis.data = data.x_list;\r\n    option.series[0].data = data.y_list;\r\n    const compChart = echarts.init(document.getElementById('chart'));\r\n    compChart.setOption(option);\r\n  },[data]);\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div id=\"chart\">\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\scoreList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\index.js",["526"],"import React,{memo,useEffect,useState} from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {\r\n  Wrapper\r\n} from './style';\r\nimport {\r\n  getMonth6ByOrg,\r\n  getMonth6ByHospital\r\n} from '@/network/controlIndex';\r\nimport { Progress } from 'antd';\r\n\r\nimport total from '@/assets/imgs/medicalConsortium/total.png'\r\nimport up from '@/assets/imgs/medicalConsortium/up.png'\r\nimport recent from '@/assets/imgs/medicalConsortium/recent.png'\r\n\r\nexport default memo(function (){\r\n  const [data,setData] = useState({});\r\n  const colorList= ['#60c2e2','#284df3','#6034db','#c138ea','#60c2e2','#284df3'];\r\n  const {grade,hospital_joined_id,hospital_id} = useSelector(state => ({\r\n    grade:state.getIn(['controlIndex','grade']),\r\n    hospital_joined_id:state.getIn(['controlIndex','hospital_joined_id']),\r\n    hospital_id:state.getIn(['controlIndex','hospital_id']),\r\n  }),shallowEqual);\r\n\r\n  useEffect(() => {\r\n    switch (grade){\r\n      case 4:\r\n        getMonth6ByOrg(hospital_joined_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      case 5:\r\n        getMonth6ByHospital(hospital_id).then(res => {\r\n          setData(res.data.data)\r\n        })\r\n        break;\r\n      default:break;\r\n    }\r\n  },[grade]);\r\n\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"title\">近六月填报趋势</div>\r\n      <div className=\"progress-list\">\r\n        {\r\n          data.recent_month && data.recent_month.map((item,index) => {\r\n            return <div className='progress' key={index}>\r\n              <div className='progress-month'>{item.name}</div>\r\n              <Progress percent={item.count} size=\"small\"\r\n                        format={percent => percent}\r\n                        strokeWidth={'20px'}\r\n                        strokeColor={colorList[index]}/>\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"total\">\r\n        <img src={total} alt=\"累计填报量\"/>\r\n        <div className='text'>累计填报量</div>\r\n        <div className=\"count\">{data.all_count}</div>\r\n        <img src={up} alt=\"上升\"/>\r\n      </div>\r\n      <div className=\"recent\">\r\n        <div className=\"item\">\r\n          <img src={recent} alt=\"今日填报量\"/>\r\n          <div className='right'>\r\n            <div className=\"right-count\">{data.today_count}</div>\r\n            <div className=\"right-text\">今日填报量</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"item\">\r\n          <img src={recent} alt=\"近六月填报量\"/>\r\n          <div className='right'>\r\n            <div className=\"right-count\">{data.recent_count}</div>\r\n            <div className=\"right-text\">近六月填报量</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n});","D:\\newCode\\react\\highblood-front\\src\\pages\\controlIndex\\c-pages\\hospitalJoined\\c-coms\\month6\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\indexHeader\\c-coms\\hospitalList\\style.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\index.js",[],"D:\\newCode\\react\\highblood-front\\src\\components\\sideBar\\style.js",[],{"ruleId":"527","replacedBy":"528"},{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","severity":1,"message":"532","line":2,"column":9,"nodeType":"533","messageId":"534","endLine":2,"endColumn":21},{"ruleId":"535","severity":1,"message":"536","line":69,"column":15,"nodeType":"533","messageId":"537","endLine":69,"endColumn":28},{"ruleId":"535","severity":1,"message":"538","line":73,"column":15,"nodeType":"533","messageId":"537","endLine":73,"endColumn":31},{"ruleId":"539","severity":1,"message":"540","line":81,"column":7,"nodeType":"541","endLine":81,"endColumn":9,"suggestions":"542"},{"ruleId":"539","severity":1,"message":"543","line":169,"column":5,"nodeType":"541","endLine":169,"endColumn":11,"suggestions":"544"},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"546","line":1,"column":30,"nodeType":"533","messageId":"534","endLine":1,"endColumn":38},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"547","line":2,"column":9,"nodeType":"533","messageId":"534","endLine":2,"endColumn":20},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"548","line":14,"column":9,"nodeType":"533","messageId":"534","endLine":14,"endColumn":12},{"ruleId":"535","severity":1,"message":"536","line":77,"column":13,"nodeType":"533","messageId":"537","endLine":77,"endColumn":26},{"ruleId":"535","severity":1,"message":"538","line":81,"column":13,"nodeType":"533","messageId":"537","endLine":81,"endColumn":29},{"ruleId":"539","severity":1,"message":"540","line":89,"column":5,"nodeType":"541","endLine":89,"endColumn":7,"suggestions":"549"},{"ruleId":"539","severity":1,"message":"550","line":189,"column":7,"nodeType":"541","endLine":189,"endColumn":14,"suggestions":"551"},{"ruleId":"531","severity":1,"message":"552","line":5,"column":8,"nodeType":"533","messageId":"534","endLine":5,"endColumn":14},{"ruleId":"539","severity":1,"message":"550","line":70,"column":5,"nodeType":"541","endLine":70,"endColumn":22,"suggestions":"553"},{"ruleId":"554","severity":1,"message":"555","line":96,"column":32,"nodeType":"556","messageId":"557","endLine":96,"endColumn":39},{"ruleId":"539","severity":1,"message":"558","line":17,"column":14,"nodeType":"559","endLine":17,"endColumn":17},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"560","line":1,"column":32,"nodeType":"533","messageId":"534","endLine":1,"endColumn":42},{"ruleId":"539","severity":1,"message":"550","line":50,"column":5,"nodeType":"541","endLine":50,"endColumn":12,"suggestions":"561"},{"ruleId":"539","severity":1,"message":"562","line":52,"column":5,"nodeType":"541","endLine":52,"endColumn":12,"suggestions":"563"},{"ruleId":"554","severity":1,"message":"555","line":77,"column":31,"nodeType":"556","messageId":"557","endLine":77,"endColumn":38},{"ruleId":"531","severity":1,"message":"564","line":173,"column":9,"nodeType":"533","messageId":"534","endLine":173,"endColumn":18},{"ruleId":"539","severity":1,"message":"565","line":203,"column":5,"nodeType":"541","endLine":203,"endColumn":7,"suggestions":"566"},{"ruleId":"539","severity":1,"message":"567","line":214,"column":5,"nodeType":"541","endLine":214,"endColumn":14,"suggestions":"568"},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"569","line":3,"column":9,"nodeType":"533","messageId":"534","endLine":3,"endColumn":20},{"ruleId":"531","severity":1,"message":"570","line":12,"column":16,"nodeType":"533","messageId":"534","endLine":12,"endColumn":19},{"ruleId":"531","severity":1,"message":"571","line":21,"column":10,"nodeType":"533","messageId":"534","endLine":21,"endColumn":20},{"ruleId":"572","severity":1,"message":"573","line":1,"column":22,"nodeType":"574","messageId":"575","endLine":1,"endColumn":50,"fix":"576"},{"ruleId":"572","severity":1,"message":"577","line":1,"column":51,"nodeType":"574","messageId":"575","endLine":1,"endColumn":81,"fix":"578"},{"ruleId":"539","severity":1,"message":"562","line":46,"column":5,"nodeType":"541","endLine":46,"endColumn":12,"suggestions":"579"},{"ruleId":"531","severity":1,"message":"580","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":22},{"ruleId":"539","severity":1,"message":"581","line":48,"column":7,"nodeType":"541","endLine":48,"endColumn":9,"suggestions":"582"},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"539","severity":1,"message":"583","line":24,"column":5,"nodeType":"541","endLine":24,"endColumn":12,"suggestions":"584"},{"ruleId":"531","severity":1,"message":"585","line":21,"column":3,"nodeType":"533","messageId":"534","endLine":21,"endColumn":39},{"ruleId":"539","severity":1,"message":"586","line":82,"column":5,"nodeType":"541","endLine":82,"endColumn":18,"suggestions":"587"},{"ruleId":"539","severity":1,"message":"588","line":158,"column":5,"nodeType":"541","endLine":158,"endColumn":23,"suggestions":"589"},{"ruleId":"539","severity":1,"message":"590","line":56,"column":5,"nodeType":"541","endLine":56,"endColumn":12,"suggestions":"591"},{"ruleId":"592","severity":1,"message":"593","line":96,"column":93,"nodeType":"594","messageId":"595","endLine":96,"endColumn":95},{"ruleId":"592","severity":1,"message":"593","line":105,"column":80,"nodeType":"594","messageId":"595","endLine":105,"endColumn":82},{"ruleId":"531","severity":1,"message":"545","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":29},{"ruleId":"531","severity":1,"message":"596","line":24,"column":16,"nodeType":"533","messageId":"534","endLine":24,"endColumn":24},{"ruleId":"531","severity":1,"message":"597","line":24,"column":25,"nodeType":"533","messageId":"534","endLine":24,"endColumn":29},{"ruleId":"531","severity":1,"message":"598","line":24,"column":30,"nodeType":"533","messageId":"534","endLine":24,"endColumn":50},{"ruleId":"531","severity":1,"message":"599","line":24,"column":51,"nodeType":"533","messageId":"534","endLine":24,"endColumn":64},{"ruleId":"539","severity":1,"message":"600","line":41,"column":5,"nodeType":"541","endLine":41,"endColumn":12,"suggestions":"601"},{"ruleId":"539","severity":1,"message":"602","line":37,"column":5,"nodeType":"541","endLine":37,"endColumn":12,"suggestions":"603"},{"ruleId":"539","severity":1,"message":"604","line":36,"column":5,"nodeType":"541","endLine":36,"endColumn":12,"suggestions":"605"},{"ruleId":"539","severity":1,"message":"604","line":39,"column":5,"nodeType":"541","endLine":39,"endColumn":12,"suggestions":"606"},"no-native-reassign",["607"],"no-negated-in-lhs",["608"],"no-unused-vars","'shallowEqual' is defined but never used.","Identifier","unusedVar","no-redeclare","'provinceIndex' is already defined.","redeclared","'provinceAlphabet' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city', 'getCityMapOpt', 'getProvinceMapOpt', 'grade', 'initalMap', 'province', 'provinces', and 'provincesText'. Either include them or remove the dependency array.","ArrayExpression",["609"],"React Hook useEffect has missing dependencies: 'dispatch' and 'province'. Either include them or remove the dependency array.",["610"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'log' is defined but never used.",["611"],"React Hook useEffect has missing dependencies: 'city', 'dispatch', and 'province'. Either include them or remove the dependency array.",["612"],"'circle' is defined but never used.",["613"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'dataCharts' is defined but never used.",["614"],"React Hook useEffect has missing dependencies: 'city' and 'province'. Either include them or remove the dependency array.",["615"],"'colorList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city', 'grade', and 'province'. Either include them or remove the dependency array.",["616"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["617"],"'useLocation' is defined but never used.","'end' is assigned a value but never used.","'start_time' is assigned a value but never used.","no-useless-rename","Import dataOverview unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"618","text":"619"},"Import dataReporting unnecessarily renamed.",{"range":"620","text":"621"},["622"],"'searchHospital' is defined but never used.","React Hook useEffect has a missing dependency: 'initalMap'. Either include it or remove the dependency array.",["623"],"React Hook useEffect has missing dependencies: 'dispatch' and 'end'. Either include them or remove the dependency array.",["624"],"'getCoreRankHospitalJoinedAndProvince' is defined but never used.","React Hook useEffect has missing dependencies: 'city', 'dispatch', 'end', 'hospital_joined_id', and 'province'. Either include them or remove the dependency array.",["625"],"React Hook useEffect has missing dependencies: 'city', 'end', 'hospital_id', 'hospital_joined_id', 'province', and 'start'. Either include them or remove the dependency array.",["626"],"React Hook useEffect has missing dependencies: 'city', 'core_name', 'end', 'province', and 'start'. Either include them or remove the dependency array.",["627"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'province' is assigned a value but never used.","'city' is assigned a value but never used.","'hospital_joined_name' is assigned a value but never used.","'hospital_name' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'end', 'hospital_id', 'hospital_joined_id', and 'start'. Either include them or remove the dependency array.",["628"],"React Hook useEffect has missing dependencies: 'hospital_joined_name' and 'hospital_name'. Either include them or remove the dependency array.",["629"],"React Hook useEffect has missing dependencies: 'hospital_id' and 'hospital_joined_id'. Either include them or remove the dependency array.",["630"],["631"],"no-global-assign","no-unsafe-negation",{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"632","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"637","fix":"641"},{"desc":"642","fix":"643"},{"desc":"642","fix":"644"},{"desc":"645","fix":"646"},[21,49],"dataOverview",[50,80],"dataReporting",{"desc":"642","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"652","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"662","fix":"664"},"Update the dependencies array to be: [city, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText]",{"range":"665","text":"666"},"Update the dependencies array to be: [city, dispatch, province]",{"range":"667","text":"668"},{"range":"669","text":"666"},"Update the dependencies array to be: [city, dispatch, grade, province]",{"range":"670","text":"671"},"Update the dependencies array to be: [city, dispatch, grade, province, sub_grade]",{"range":"672","text":"673"},{"range":"674","text":"671"},"Update the dependencies array to be: [city, grade, province]",{"range":"675","text":"676"},{"range":"677","text":"676"},"Update the dependencies array to be: [Options, getOption]",{"range":"678","text":"679"},{"range":"680","text":"676"},"Update the dependencies array to be: [initalMap]",{"range":"681","text":"682"},"Update the dependencies array to be: [dispatch, end, start]",{"range":"683","text":"684"},"Update the dependencies array to be: [city, dispatch, end, grade, hospital_joined_id, province, start]",{"range":"685","text":"686"},"Update the dependencies array to be: [city, comp_grade, end, grade, hospital_id, hospital_joined_id, province, start]",{"range":"687","text":"688"},"Update the dependencies array to be: [city, core_name, end, grade, province, start]",{"range":"689","text":"690"},"Update the dependencies array to be: [end, grade, hospital_id, hospital_joined_id, start]",{"range":"691","text":"692"},"Update the dependencies array to be: [grade, hospital_joined_name, hospital_name]",{"range":"693","text":"694"},"Update the dependencies array to be: [grade, hospital_id, hospital_joined_id]",{"range":"695","text":"696"},{"range":"697","text":"696"},[2958,2960],"[city, getCityMapOpt, getProvinceMapOpt, grade, initalMap, province, provinces, provincesText]",[5308,5314],"[city, dispatch, province]",[2882,2884],[5423,5430],"[city, dispatch, grade, province]",[1912,1929],"[city, dispatch, grade, province, sub_grade]",[1296,1303],[1305,1312],"[city, grade, province]",[4824,4826],[5107,5116],"[Options, getOption]",[1288,1295],[1749,1751],"[initalMap]",[701,708],"[dispatch, end, start]",[3074,3087],"[city, dispatch, end, grade, hospital_joined_id, province, start]",[5396,5414],"[city, comp_grade, end, grade, hospital_id, hospital_joined_id, province, start]",[1658,1665],"[city, core_name, end, grade, province, start]",[1367,1374],"[end, grade, hospital_id, hospital_joined_id, start]",[1204,1211],"[grade, hospital_joined_name, hospital_name]",[1020,1027],"[grade, hospital_id, hospital_joined_id]",[1244,1251]]